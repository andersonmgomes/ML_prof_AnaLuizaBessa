algorithm,params,features,n_features,train_time,predict_time,mem_max,balanced_accuracy,f1_weighted,precision_weighted,recall_weighted,roc_auc_ovr_weighted,confusion_matrix
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5775074999996832,0.000489873437500421,2148.19921875,0.504284573677956,0.5385783920142022,0.6161486592657192,0.496875,0.7658486803240486,"[[ 1  1  0  0  0  0]
 [ 3  4  4  0  0  0]
 [ 8 14 78 29  4  3]
 [ 7  6 28 54 23 10]
 [ 0  5  0  1 20 14]
 [ 0  0  0  0  1  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.6307133999998769,0.0005577656250011387,2298.01953125,0.47612893642305404,0.39312643589646507,0.5625397727760252,0.325,0.7434799902273169,"[[ 2  0  0  0  0  0]
 [ 5  4  2  0  0  0]
 [16 25 58 21  6 10]
 [14 16 21 32 21 24]
 [ 1  4  0  2  6 27]
 [ 0  0  0  0  1  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.632611299999553,0.0005280484374992512,2164.3203125,0.4737471219548426,0.42399278154872305,0.5955694436654749,0.35625,0.7451144898363171,"[[ 2  0  0  0  0  0]
 [ 3  6  2  0  0  0]
 [13 27 62 18  6 10]
 [17 16 21 33 17 24]
 [ 1  4  1  2 10 22]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5779663999999229,0.0004792059374999269,1469.109375,0.4665139445929887,0.5552625108597689,0.6226839359571836,0.515625,0.773376455616781,"[[ 1  1  0  0  0  0]
 [ 2  4  5  0  0  0]
 [ 5 18 77 30  2  4]
 [ 3  9 27 59 20 10]
 [ 0  4  0  3 23 10]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.5886405999999624,0.0004857046875002879,2075.5234375,0.4660158571004159,0.5193109414120795,0.6165021741122094,0.471875,0.7485132966930619,"[[ 1  1  0  0  0  0]
 [ 5  2  3  1  0  0]
 [ 6 17 80 22  6  5]
 [ 8  8 28 46 25 13]
 [ 0  5  0  2 20 13]
 [ 0  0  0  0  1  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.45446359999982633,0.0004847043750004332,1469.22265625,0.45070651366607256,0.5073080047808597,0.6105815639073966,0.465625,0.7617257548451289,"[[ 1  1  0  0  0  0]
 [ 1  5  5  0  0  0]
 [ 9 15 80 21  7  4]
 [ 6 12 29 42 27 12]
 [ 0  5  0  1 20 14]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.47102669999912905,0.0005057962499989798,2170.3203125,0.44756619503862155,0.5058917872355677,0.601854517275713,0.45625,0.7713417440849559,"[[ 1  1  0  0  0  0]
 [ 2  5  4  0  0  0]
 [ 4 25 70 26  4  7]
 [ 4 11 27 49 20 17]
 [ 0  4  1  3 20 12]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.682597099999839,0.0005240000000014788,2163.7265625,0.4472212938205585,0.35291393167186097,0.5604603691964893,0.28125,0.7225349282137061,"[[ 2  0  0  0  0  0]
 [ 6  3  2  0  0  0]
 [21 25 54 18  6 12]
 [17 15 21 22  9 44]
 [ 0  4  0  0  7 29]
 [ 0  1  0  0  0  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.4697390000001178,0.00048305531250036893,2075.6015625,0.44527861333927504,0.43130701066995936,0.579455600740978,0.375,0.7427934753117086,"[[ 1  1  0  0  0  0]
 [ 4  5  1  1  0  0]
 [14 28 67 15  6  6]
 [ 9 15 31 33 25 15]
 [ 0  4  0  3 12 21]
 [ 0  0  0  0  1  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.6726724999998623,0.0005272484375012709,2297.84765625,0.43992080733808686,0.411024368429678,0.5724177401046866,0.340625,0.727747436595359,"[[ 2  0  0  0  0  0]
 [ 5  4  2  0  0  0]
 [18 17 57 29  8  7]
 [16 16 14 35 26 21]
 [ 0  3  0  3 10 24]
 [ 0  1  0  0  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.5175555000000713,0.0005082549999997354,2211.046875,0.4365637069221628,0.4149846627002428,0.5886401373791565,0.346875,0.7372457279988932,"[[ 1  1  0  0  0  0]
 [ 3  6  2  0  0  0]
 [15 22 59 20 13  7]
 [11 18 20 35 21 23]
 [ 0  4  1  0  8 27]
 [ 0  1  0  0  0  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.4706797999997434,0.0004986318750013652,2170.8203125,0.4349603572489602,0.48594413817944704,0.5992860465614935,0.434375,0.7565601916686561,"[[ 1  1  0  0  0  0]
 [ 1  6  4  0  0  0]
 [ 6 24 72 20  9  5]
 [ 4 12 32 45 18 17]
 [ 0  4  1  1 14 20]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6569021999998768,0.0005299609375001068,2075.63671875,0.4311994021093286,0.3049921488131055,0.5439314068918132,0.24375,0.7007618304523001,"[[ 2  0  0  0  0  0]
 [ 5  4  2  0  0  0]
 [19 35 53 12  5 12]
 [16 33 18 15 16 30]
 [ 2  6  0  0  2 30]
 [ 0  1  0  0  0  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.4719866999998885,0.0004883665625001754,2210.9765625,0.4261521464646465,0.46353253636313907,0.5681869555275666,0.4125,0.7508109295228114,"[[ 1  1  0  0  0  0]
 [ 1  6  4  0  0  0]
 [ 4 22 68 27  9  6]
 [ 5 14 28 42 18 21]
 [ 0  4  0  3 14 19]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.46359299999949144,0.0004980031249999684,2164.11328125,0.42514111705288177,0.4891047091741914,0.6066340424936978,0.43125,0.75668111992961,"[[ 1  1  0  0  0  0]
 [ 2  6  3  0  0  0]
 [ 7 28 71 20  5  5]
 [ 5 14 30 48 16 15]
 [ 0  4  1  2 11 22]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.40689819999988686,0.00047552343749970307,2075.41796875,0.4239546197266786,0.5356428925176989,0.6075594990126152,0.5,0.779487985254482,"[[ 1  1  0  0  0  0]
 [ 4  1  6  0  0  0]
 [ 5 17 80 23  8  3]
 [ 4  6 28 52 27 11]
 [ 0  3  0  6 25  6]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.4960455999998885,0.000497803749999548,2173.31640625,0.4225188465537731,0.4597783051930649,0.5641150210084034,0.415625,0.7645943498772512,"[[ 1  1  0  0  0  0]
 [ 2  4  4  1  0  0]
 [ 9 20 70 27  4  6]
 [ 9 14 28 35 27 15]
 [ 0  5  0  1 22 12]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.4559681000000637,0.0004941793750020907,2298.01953125,0.41869058229352346,0.4755074265794307,0.5939215759059798,0.421875,0.7547985345587789,"[[ 1  1  0  0  0  0]
 [ 4  5  2  0  0  0]
 [15 18 73 21  6  3]
 [ 8 14 30 40 24 12]
 [ 1  4  0  2 15 18]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.5545345999998972,0.0004822162499976912,2298.234375,0.4186891896910279,0.49001445279058425,0.5815626636065414,0.440625,0.7626880103423591,"[[ 1  1  0  0  0  0]
 [ 4  4  3  0  0  0]
 [ 9 23 69 29  3  3]
 [ 5 10 30 49 25  9]
 [ 0  5  0  2 17 16]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.6623972999996113,0.0005223043749992939,2210.71484375,0.4153418374925728,0.3150564713064713,0.5445440458972544,0.24375,0.701645259373174,"[[ 2  0  0  0  0  0]
 [ 6  2  2  1  0  0]
 [20 32 48 15  7 14]
 [18 26 18 18 11 37]
 [ 0  6  0  0  6 28]
 [ 0  1  0  0  0  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.4001230999999734,0.0004706584375000489,1470.0078125,0.41389445929887114,0.5808768019320568,0.6291880487687035,0.553125,0.7894702493038456,"[[ 0  1  1  0  0  0]
 [ 2  4  5  0  0  0]
 [ 4 11 84 33  2  2]
 [ 3 10 25 60 21  9]
 [ 0  3  0  4 28  5]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",8,0.5852800000002389,0.0004634996874983699,2341.31640625,0.4132167260843731,0.4957125931541141,0.5824899661196247,0.45625,0.7491593522173132,"[[ 0  2  0  0  0  0]
 [ 1  5  4  1  0  0]
 [10 13 81 25  4  3]
 [11 13 30 40 26  8]
 [ 1  4  0  3 18 14]
 [ 0  0  0  0  1  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7346729000000778,0.0005276781250003638,2075.3359375,0.4112745098039216,0.28934948979591835,0.25527629016553066,0.375,0.5350799058820463,"[[ 2  0  0  0  0  0]
 [ 1  0  6  0  4  0]
 [ 2  0 84  0 50  0]
 [ 1  0 61  0 66  0]
 [ 0  0  6  0 34  0]
 [ 0  0  1  0  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.4124141000002055,0.0004846209375017452,2170.4296875,0.4069690470885324,0.5833707233928884,0.6192716730108971,0.5625,0.7881182789910481,"[[ 0  1  1  0  0  0]
 [ 2  3  6  0  0  0]
 [ 3 10 82 34  4  3]
 [ 2  5 27 65 20  9]
 [ 0  3  0  6 29  2]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6724862999999459,0.0005274503125001218,1469.3046875,0.4062119355317885,0.3056911369477005,0.5411081349206349,0.24375,0.6987770847092815,"[[ 2  0  0  0  0  0]
 [ 7  2  2  0  0  0]
 [19 33 55 11  4 14]
 [17 28 23 14  9 37]
 [ 0  6  0  0  3 31]
 [ 0  1  0  0  0  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.46914779999997336,0.0004933740624991856,2075.65625,0.4050249740047534,0.4685826586144099,0.5911587322952278,0.415625,0.759642148712396,"[[ 1  1  0  0  0  0]
 [ 3  4  4  0  0  0]
 [ 8 23 74 18  7  6]
 [ 7 14 27 37 25 18]
 [ 0  3  1  4 16 16]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.690067700000327,0.0005484743750002963,2148.60546875,0.40376095513963156,0.30265921994011163,0.525176419496894,0.2375,0.6999285706750122,"[[ 2  0  0  0  0  0]
 [ 7  2  2  0  0  0]
 [20 31 53 15  3 14]
 [17 32 18 14 11 36]
 [ 0  6  0  0  3 31]
 [ 0  1  0  0  0  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.46029989999988175,0.0004943496875000619,2148.44921875,0.40343322935234704,0.4619017199130835,0.6012667025179971,0.40625,0.7581059973205828,"[[ 1  1  0  0  0  0]
 [ 4  5  2  0  0  0]
 [13 17 75 16  9  6]
 [ 6 15 29 36 29 13]
 [ 0  5  0  1 12 22]
 [ 0  0  0  1  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",7,0.5142602000005354,0.00046404718749784026,2273.40234375,0.3986422125668449,0.5220275409379747,0.5680650343590976,0.496875,0.7647924141948799,"[[ 1  1  0  0  0  0]
 [ 3  4  4  0  0  0]
 [ 1 21 78 29  6  1]
 [ 1  9 36 55 24  3]
 [ 0  5  0 10 21  4]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",7,0.5806109999994078,0.0004985996875007004,2273.36328125,0.3964145127748069,0.4829100352898646,0.5973943246008321,0.41875,0.7569515116724028,"[[ 1  1  0  0  0  0]
 [ 3  3  4  1  0  0]
 [14 30 60 26  2  4]
 [12 13 23 52 18 10]
 [ 1  5  1  4 17 12]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5176745999999639,0.0004981149999998991,1468.98046875,0.39427408273915626,0.4110721478370122,0.5770903730703258,0.35625,0.7506861725896159,"[[ 1  1  0  0  0  0]
 [ 3  6  2  0  0  0]
 [18 24 66 15  7  6]
 [ 8 17 32 29 28 14]
 [ 0  5  0  0 11 24]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.39948140000069543,0.00047060687500106725,2297.921875,0.39315443033273917,0.5283978458309274,0.5881976137724958,0.496875,0.7762316594982848,"[[ 0  0  2  0  0  0]
 [ 3  5  3  0  0  0]
 [ 4 15 80 33  3  1]
 [ 6 11 27 49 24 11]
 [ 0  5  0  6 24  5]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.41459889999987354,0.0004778384375015321,2163.84375,0.3908399249851456,0.5609795959307832,0.6062398483788234,0.53125,0.7792444132024278,"[[ 0  0  2  0  0  0]
 [ 3  4  4  0  0  0]
 [ 3 16 79 34  1  3]
 [ 4  7 26 63 21  7]
 [ 0  2  1  8 23  6]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5200414000000819,0.0005117890624987354,2148.44140625,0.3900308229352347,0.40839539454564433,0.5612351711846945,0.353125,0.7456221459071615,"[[ 1  1  0  0  0  0]
 [ 3  6  2  0  0  0]
 [16 21 67 18  7  7]
 [11 17 29 28 27 16]
 [ 0  4  0  0 10 26]
 [ 0  0  0  1  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.512912299999698,0.000502007187500908,2298.41015625,0.38984699940582296,0.4169161960936167,0.5516751422475107,0.359375,0.7497663690037772,"[[ 1  1  0  0  0  0]
 [ 3  6  2  0  0  0]
 [17 21 66 23  5  4]
 [ 9 17 28 32 22 20]
 [ 0  5  0  1  9 25]
 [ 0  0  0  1  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5442035999999462,0.00045443499999962,1469.35546875,0.3897787618835413,0.6162329814531295,0.6358438263125763,0.603125,0.7962323138094889,"[[ 0  0  2  0  0  0]
 [ 2  1  7  1  0  0]
 [ 1 11 91 27  5  1]
 [ 1  7 26 73 18  3]
 [ 0  1  0 11 27  1]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.4108031000000665,0.00048634968750036476,2148.1796875,0.3891841206179442,0.5731869953416149,0.6260066923774954,0.540625,0.7847435622361981,"[[ 0  2  0  0  0  0]
 [ 3  3  5  0  0  0]
 [ 3 14 83 31  3  2]
 [ 5  7 26 60 21  9]
 [ 0  3  0  5 26  6]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.5961637000000337,0.00047270468749900375,2326.18359375,0.3858103089720737,0.47130390694519575,0.5771173600322372,0.421875,0.7523818887455053,"[[ 0  2  0  0  0  0]
 [ 2  4  5  0  0  0]
 [19 15 71 24  6  1]
 [16 10 29 40 28  5]
 [ 2  3  0  2 18 15]
 [ 0  0  0  0  1  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",7,0.5447156999998697,0.0005108078125005023,2273.41796875,0.38237893642305404,0.3659739330889947,0.5786440592953158,0.296875,0.7379481136979823,"[[ 1  1  0  0  0  0]
 [ 2  4  3  0  2  0]
 [25 30 58 12  4  7]
 [17 26 24 24 12 25]
 [ 0  4  1  1  6 28]
 [ 0  0  0  0  1  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",7,2.414023299999826,0.00042855968750075133,2273.546875,0.3815104166666667,0.5852299261227832,0.5759650034650035,0.6,0.7531618868815162,"[[  1   0   1   0   0   0]
 [  2   0   6   3   0   0]
 [  1   1 102  29   3   0]
 [  0   1  47  69  11   0]
 [  0   0   4  16  20   0]
 [  0   0   0   0   3   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.4977734000003693,0.0004712493749991609,2323.33203125,0.3810448232323232,0.378791860213783,0.5486716933762168,0.321875,0.6991202276742498,"[[ 1  0  0  0  0  1]
 [ 4  3  4  0  0  0]
 [12 30 68 13  2 11]
 [12 31 33 22  8 22]
 [ 0  8  0  5  7 20]
 [ 0  1  0  0  0  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5948411999997916,0.0004886090625007,2171.0078125,0.3808535724896019,0.5380326331562614,0.6114253612404665,0.49375,0.7655493381729648,"[[ 0  2  0  0  0  0]
 [ 1  5  5  0  0  0]
 [ 4 23 74 28  3  4]
 [ 3  9 28 58 18 12]
 [ 0  3  0  5 20 12]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.567482899999959,0.00048615218750001075,2163.84375,0.3801656268568033,0.5150734896862763,0.589046690757662,0.471875,0.7643862434509654,"[[ 0  2  0  0  0  0]
 [ 2  6  3  0  0  0]
 [ 4 23 70 33  3  3]
 [ 5  9 28 56 19 11]
 [ 0  3  0  6 18 13]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.5459822000002532,0.0005106062500004783,2173.19140625,0.37743751856803326,0.4043120812594621,0.587954004107217,0.35,0.7357218672267487,"[[ 1  1  0  0  0  0]
 [ 3  5  3  0  0  0]
 [17 20 71 13  9  6]
 [13 22 26 23 29 15]
 [ 1  4  0  0 11 24]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.606642799999463,0.0004898343749999868,2173.2421875,0.3772383764111706,0.5133034332718045,0.5913566303983504,0.471875,0.7600510087105303,"[[ 0  2  0  0  0  0]
 [ 1  5  4  1  0  0]
 [10 13 77 29  2  5]
 [12  9 27 46 26  8]
 [ 0  5  0  4 22  9]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.5812559999999394,0.00048444937499994014,2211.02734375,0.3770865827391563,0.4955217816221338,0.5828099755527211,0.45,0.7629582527623522,"[[ 0  2  0  0  0  0]
 [ 1  6  4  0  0  0]
 [ 5 25 66 30  5  5]
 [ 2 12 28 51 21 14]
 [ 0  4  0  4 20 12]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.5125773999998273,0.0005043456249993028,2075.6953125,0.37679552881758765,0.39400937520186885,0.5567756373931942,0.334375,0.7320671169240315,"[[ 1  1  0  0  0  0]
 [ 3  6  2  0  0  0]
 [19 25 63 15  7  7]
 [11 19 27 28 27 16]
 [ 1  3  0  3  8 25]
 [ 0  0  0  1  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",8,0.5090506000005917,0.00048489843749734975,2341.21875,0.3746801656268568,0.3909632301109296,0.5671994294512677,0.34375,0.7266376235222793,"[[ 1  1  0  0  0  0]
 [ 3  5  3  0  0  0]
 [15 21 73 12  8  7]
 [15 22 29 19 25 18]
 [ 1  3  0  0 11 25]
 [ 0  0  0  1  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.5234301999998934,0.0005088515625004675,2164.53125,0.37390030822935233,0.4072944322297002,0.5645790808258788,0.340625,0.749067609036898,"[[ 1  1  0  0  0  0]
 [ 3  6  2  0  0  0]
 [20 24 60 20  7  5]
 [10 15 27 35 13 28]
 [ 0  4  1  1  6 28]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",8,0.461650300000656,0.0004732909375007921,2341.25390625,0.3731111668152109,0.4500010396953683,0.5614226117351118,0.40625,0.757293646609147,"[[ 0  2  0  0  0  0]
 [ 2  4  4  1  0  0]
 [11 17 77 19  6  6]
 [10 16 31 31 27 13]
 [ 1  3  0  4 16 16]
 [ 0  0  0  0  1  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5303063000001202,0.0005195074999988947,2170.99609375,0.3731037396019014,0.4109333494424628,0.5888915428780654,0.346875,0.7451457573795884,"[[ 1  1  0  0  0  0]
 [ 3  6  2  0  0  0]
 [16 23 67 14 10  6]
 [12 16 28 31 18 23]
 [ 1  4  1  0  5 29]
 [ 0  1  0  0  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,2.282181799999762,0.0004053462499996385,2075.1171875,0.3727890114379085,0.6246660710547565,0.6190275638708896,0.63125,0.7645924158407927,"[[ 0  0  2  0  0  0]
 [ 1  0  9  1  0  0]
 [ 2  2 98 30  3  1]
 [ 1  0 34 81 11  1]
 [ 0  1  2 14 22  1]
 [ 0  0  0  1  1  1]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 3), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.0029187999998612213,0.000283655937499816,1453.14453125,0.37230392156862746,0.5928192718749546,0.5927153813755061,0.596875,0.7443014760171331,"[[ 1  0  0  1  0  0]
 [ 0  0  7  4  0  0]
 [ 2  3 93 34  3  1]
 [ 0  5 35 80  8  0]
 [ 0  1  6 14 17  2]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",7,0.7000795999992988,0.0005269112499973972,2273.21875,0.3719599487522281,0.3352442597878924,0.658984965556173,0.271875,0.7021277133177624,"[[ 0  2  0  0  0  0]
 [ 1  6  3  0  1  0]
 [18 46 57  4  1 10]
 [15 41 21 15 10 26]
 [ 1  7  0  0  6 26]
 [ 0  0  0  0  0  3]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.5841889999992418,0.0004665143750003153,2323.5078125,0.37128035873440285,0.5229661933980212,0.5742610698125404,0.490625,0.7162740528487423,"[[ 1  0  0  0  1  0]
 [ 5  2  4  0  0  0]
 [ 5 12 77 27  7  8]
 [ 2 15 37 55 17  2]
 [ 0  5  1  8 22  4]
 [ 0  0  1  1  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 3), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.0028807000001052074,0.00035002625000046805,1452.9921875,0.37123161764705875,0.5897036556348692,0.5903740763546799,0.59375,0.7499642108561813,"[[ 1  0  0  1  0  0]
 [ 1  0  6  4  0  0]
 [ 2  5 90 36  3  0]
 [ 0  3 35 82  8  0]
 [ 0  1  5 15 17  2]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 3), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.0027449999997770647,0.0002770365625025306,2159.41015625,0.37107843137254903,0.5900592581221611,0.5908486133917168,0.59375,0.744760704632803,"[[ 1  0  0  1  0  0]
 [ 1  0  5  5  0  0]
 [ 2  5 92 34  3  0]
 [ 1  3 36 80  8  0]
 [ 0  1  7 13 17  2]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.6167150000001129,0.0005154374999989386,2326.19921875,0.3701699903446227,0.3314385842650864,0.565310367235994,0.275,0.7099847869824893,"[[ 1  1  0  0  0  0]
 [ 2  4  4  1  0  0]
 [17 31 61  7 10 10]
 [17 33 23 15 18 22]
 [ 2  5  0  1  5 27]
 [ 0  0  0  0  1  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6912372999995569,0.0005540834374983206,2170.390625,0.36712529708853237,0.2798918476222664,0.4972158394592606,0.225,0.6981085507027274,"[[ 2  0  0  0  0  0]
 [ 6  3  2  0  0  0]
 [19 37 48 12  9 11]
 [17 28 24 12 22 25]
 [ 0  6  0  0  6 28]
 [ 0  1  0  0  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,1.3995693000001665,0.00042937343749969157,2148.44921875,0.36599543226381465,0.6430670048077937,0.6435867456841053,0.64375,0.7899006025363964,"[[ 0  0  2  0  0  0]
 [ 2  2  6  0  1  0]
 [ 1  3 95 32  5  0]
 [ 1  3 29 82 12  1]
 [ 0  0  2 10 27  1]
 [ 0  0  0  2  1  0]]"
"LogisticRegression(C=0.01, n_jobs=-1)","OrderedDict([('C', 1000.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.05461430000013934,2.7927187500154104e-05,2037.39453125,0.36413909313725495,0.5853596786840585,0.5913694714630121,0.60625,0.7579568520091688,"[[  1   0   1   0   0   0]
 [  0   0   9   2   0   0]
 [  1   0 101  34   0   0]
 [  0   0  46  79   3   0]
 [  0   0   1  26  13   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6180214000005435,0.0001089371874996914,2345.20703125,0.3635569852941176,0.7093758934122334,0.6979244663382593,0.728125,0.8609124791573983,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 112  24   0   0]
 [  0   0  27  97   4   0]
 [  0   0   2  14  24   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.4630453999998281,0.0005114731249989291,2211.01953125,0.3621188911170529,0.4987794861692033,0.6152907606615521,0.440625,0.7675639808609291,"[[ 0  2  0  0  0  0]
 [ 2  5  4  0  0  0]
 [ 3 26 67 26  7  7]
 [ 5 15 20 47 21 20]
 [ 0  4  0  3 21 12]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.46570199999996476,0.0004976828125002441,1469.76953125,0.36173592543077837,0.48911875309477615,0.5886313612616099,0.440625,0.7767235110607362,"[[ 0  2  0  0  0  0]
 [ 2  5  4  0  0  0]
 [ 3 24 72 26  5  6]
 [ 4 13 26 42 23 20]
 [ 0  4  0  4 21 11]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.45370249999996304,0.000514610624998113,2164.14453125,0.3615521019013666,0.4962034137721544,0.587099993746437,0.446875,0.7699009335930822,"[[ 0  2  0  0  0  0]
 [ 3  5  3  0  0  0]
 [ 3 22 71 32  5  3]
 [ 4 13 26 46 19 20]
 [ 0  4  1  2 20 13]
 [ 0  0  0  0  2  1]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.025), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.8245006000001922,0.00012421406249956134,2230.515625,0.3613357843137255,0.7037554833431174,0.691400767582256,0.721875,0.8644696590725369,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 107  27   2   0]
 [  0   0  24 100   4   0]
 [  0   0   1  15  24   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.025), ('gamma', 0.1), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.863059400000111,0.00012535749999926794,2242.17578125,0.3610753676470588,0.7094283108287728,0.7003476821192053,0.728125,0.8675507998480996,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 107  28   1   0]
 [  0   0  22 103   3   0]
 [  0   0   2  15  23   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.7), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.8683567000000494,0.00011418187499998567,2016.52734375,0.3596200980392157,0.7061969933958985,0.6948119226630977,0.725,0.8593277329425915,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 109  26   1   0]
 [  0   0  24 100   4   0]
 [  0   0   2  15  23   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",7,0.48543179999978747,0.000494073749999302,2273.53515625,0.3590676990493167,0.43644078351810905,0.6075551563217879,0.35625,0.7458774288077742,"[[ 1  1  0  0  0  0]
 [ 4  3  3  1  0  0]
 [21 32 58 18  3  4]
 [21 19 20 38 16 14]
 [ 2  5  0  3 13 17]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.3383484999999382,0.0004055706249999957,1468.85546875,0.35847398618538323,0.6485948450650967,0.6507996652737507,0.646875,0.7878761604573398,"[[ 0  1  1  0  0  0]
 [ 1  2  3  5  0  0]
 [ 0  4 98 29  4  1]
 [ 1  4 27 83 12  1]
 [ 0  1  1 13 24  1]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7034036999998534,0.00011355468749982834,1993.5859375,0.3584712009803921,0.704807727717282,0.6983325453112688,0.721875,0.8614608776415509,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 107  28   0   0]
 [  0   0  24 101   3   0]
 [  0   0   1  16  23   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.8235440000003109,0.00012188843750067235,2241.0546875,0.35839460784313726,0.7056503664806913,0.6967786894655147,0.721875,0.861900300103487,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 108  26   1   0]
 [  0   1  23 100   4   0]
 [  0   0   1  16  23   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6880544000005102,0.00011229124999942997,2340.65625,0.35831801470588237,0.7033159446428789,0.6947209841791123,0.721875,0.8568655975563345,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 109  26   1   0]
 [  0   0  27  99   2   0]
 [  0   0   1  16  23   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 1.0), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.8598240999999689,0.00011423781249959575,2353.078125,0.35768995098039214,0.6890055362286313,0.6779394375199744,0.70625,0.8590208863002546,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 107  29   0   0]
 [  0   0  30  94   4   0]
 [  0   0   2  13  25   0]
 [  0   0   0   2   1   0]]"
AdaBoostClassifier(algorithm='SAMME'),"OrderedDict([('algorithm', 'SAMME.R')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.08044360000008055,0.00012803500000018174,1734.84765625,0.35723039215686275,0.4342500715379824,0.4217700035145267,0.475,0.5411884426691336,"[[ 2  0  0  0  0  0]
 [ 2  0  5  4  0  0]
 [ 9  0 62 65  0  0]
 [ 3  0 37 88  0  0]
 [ 0  0  6 34  0  0]
 [ 0  0  0  3  0  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6255283000000418,0.0001125540625004362,2004.33984375,0.3571691176470588,0.7007489530763449,0.6933946270213875,0.71875,0.8552295085818576,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 107  29   0   0]
 [  0   0  25 100   3   0]
 [  0   0   1  16  23   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.1), ('lambda', 0.01), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.8793413000003056,0.00012363124999978937,2242.296875,0.35628063725490194,0.6943840579710145,0.6870631407269339,0.709375,0.8644766061871157,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 105  29   1   0]
 [  0   1  26  98   3   0]
 [  0   0   0  16  24   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.9), ('eta', 0.01), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7755801000002975,0.00011716000000063786,2240.9296875,0.35602022058823524,0.6988278388278389,0.6906573317259925,0.715625,0.8647408663121954,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 105  29   1   0]
 [  0   0  23 101   4   0]
 [  0   0   0  17  23   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.025), ('gamma', 0.1), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7970172999998795,0.00011994562499921813,2242.03125,0.3558670343137254,0.6999811836779345,0.6920680164963147,0.715625,0.8639543475972309,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 107  28   0   0]
 [  0   1  23  99   5   0]
 [  0   0   0  17  23   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 1.0), ('eta', 0.1), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7174254999999903,0.00011476531250025346,2351.33984375,0.3557138480392157,0.6971380813642437,0.6870139995139996,0.715625,0.8581553519502648,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 109  27   0   0]
 [  0   0  27  97   4   0]
 [  0   0   2  15  23   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.7), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.8644512000000759,0.00011123250000082408,2353.33984375,0.3556372549019608,0.6967063835041364,0.6837589928057553,0.715625,0.8530131163065265,"[[  0   1   1   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 110  26   0   0]
 [  0   0  26  96   6   0]
 [  0   0   3  14  23   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.4627441999991788,0.0004927596874978235,2326.046875,0.3551716614676173,0.4557665015827036,0.5828535843479092,0.403125,0.7602074505263899,"[[ 0  2  0  0  0  0]
 [ 4  3  4  0  0  0]
 [18 17 76 16  6  3]
 [16  8 31 33 26 14]
 [ 2  2  0  4 15 17]
 [ 0  0  0  0  1  2]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.9385515999997551,0.00011999687500008349,2230.16015625,0.3550551470588235,0.6887997273982676,0.6751918158567776,0.70625,0.8598084386762987,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  29   3   0]
 [  0   0  24  98   6   0]
 [  0   0   1  15  24   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",7,0.46573720000014873,0.0005279771874995732,2273.16015625,0.354782196969697,0.5051658733635589,0.5844095125553888,0.45625,0.7674071921250212,"[[ 1  1  0  0  0  0]
 [ 4  2  4  1  0  0]
 [ 9 24 68 27  5  3]
 [ 8  9 29 54 20  8]
 [ 0  4  0  7 21  8]
 [ 0  0  0  0  3  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.8712887000001501,0.00011895749999979444,2133.37890625,0.35448835784313726,0.6952402326442619,0.6821514423076923,0.7125,0.8559544532171675,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 108  26   2   0]
 [  0   1  25  97   5   0]
 [  0   0   2  15  23   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.7), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7135463000004165,0.00011618499999883624,2351.95703125,0.3541513480392157,0.6998988738720928,0.6942396334690855,0.71875,0.8548402689511427,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 109  27   0   0]
 [  0   0  27  99   2   0]
 [  0   0   2  16  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 1.0), ('eta', 0.025), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7536263000001782,0.00011602624999937917,2240.94140625,0.3538143382352941,0.7073276261105442,0.7022437250762373,0.725,0.8619915973802122,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   1 110  25   0   0]
 [  0   1  23 101   3   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.025), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.8424286999998003,0.00012271343750001052,2297.1328125,0.35349264705882355,0.6927517202384376,0.6855648451910186,0.709375,0.8521348974759253,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  31   1   0]
 [  0   1  24 100   3   0]
 [  0   0   2  15  23   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5479531999999381,0.0004745759374998215,2170.359375,0.35335756461675577,0.6245348586752127,0.6391291569395705,0.6125,0.786912540225625,"[[ 0  1  1  0  0  0]
 [ 2  2  7  0  0  0]
 [ 0 11 90 31  3  1]
 [ 0  8 28 77 12  3]
 [ 0  1  2  9 27  1]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 1.0), ('eta', 0.05), ('gamma', 1.0), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.9001505000005636,0.00011042562500165331,2356.9609375,0.353109681372549,0.690866471836621,0.6793998357963875,0.709375,0.8548922152097035,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 109  26   1   0]
 [  0   0  29  95   4   0]
 [  0   0   2  15  23   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.48730889999933424,0.00048784187500245936,2173.2109375,0.3521311460190137,0.4701636873945142,0.5871976735257985,0.425,0.7490797327436114,"[[ 0  2  0  0  0  0]
 [ 1  5  4  1  0  0]
 [15 14 75 20  7  5]
 [ 8 15 32 35 26 12]
 [ 1  4  0  0 20 15]
 [ 0  0  0  0  2  1]]"
"LogisticRegression(C=0.01, n_jobs=-1)","OrderedDict([('C', 100.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.05820259999973132,2.7370937499426872e-05,2037.6875,0.3519761029411765,0.5677311814556332,0.5759761530398323,0.590625,0.7577206100463213,"[[  1   0   1   0   0   0]
 [  0   0   9   2   0   0]
 [  1   0 100  35   0   0]
 [  0   0  48  77   3   0]
 [  0   0   1  28  11   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.864763000000039,0.00012152656249995176,2025.9609375,0.3518841911764706,0.689196440256511,0.6789884627964833,0.70625,0.8660796514264877,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 108  27   1   0]
 [  0   1  27  95   5   0]
 [  0   0   2  15  23   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.015), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.860626400000001,0.00011884562499915318,2296.1171875,0.35170036764705886,0.6950060168471721,0.684912884270918,0.7125,0.8538503899206745,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 107  27   2   0]
 [  0   1  24  99   4   0]
 [  0   0   1  17  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.1), ('lambda', 1.0), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.8392180000000735,0.00012231437500034303,2015.296875,0.35170036764705886,0.6951422807390104,0.6865038282912764,0.7125,0.8683010485118261,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 107  28   1   0]
 [  0   1  24  99   4   0]
 [  0   0   1  17  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.9165290000000823,0.00011736874999996871,2362.9453125,0.3506893382352941,0.6784853291038858,0.6650598729227761,0.696875,0.8574534173154058,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 110  25   1   0]
 [  0   0  33  89   6   0]
 [  0   0   2  14  24   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.9292938999997205,0.00011640218750130771,2362.83984375,0.3506893382352941,0.6784853291038858,0.6650598729227761,0.696875,0.8574534173154058,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 110  25   1   0]
 [  0   0  33  89   6   0]
 [  0   0   2  14  24   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.1), ('gamma', 1.0), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.8915876000000935,0.00011171468750035274,2138.328125,0.3506587009803921,0.6850700333405813,0.6705254570351402,0.703125,0.8483770162346198,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 107  27   2   0]
 [  0   0  27  95   6   0]
 [  0   0   2  15  23   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.8968099000003349,0.00011494343750086954,2139.421875,0.35058210784313726,0.6848825576712261,0.6694459822955496,0.703125,0.8513772184876283,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 108  27   1   0]
 [  0   0  27  94   7   0]
 [  0   0   3  14  23   0]
 [  0   0   0   0   3   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.7), ('eta', 0.01), ('gamma', 0.1), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6889554000008502,0.00011627937500122699,2284.55859375,0.3504748774509803,0.6913050204997294,0.6852744075251305,0.709375,0.8497939560719636,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 106  30   0   0]
 [  0   0  26  99   3   0]
 [  0   0   1  17  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.685595299999477,0.00011149062500237505,2341.06640625,0.34998468137254907,0.6961543897798316,0.6895238095238094,0.715625,0.8551551852442488,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 109  27   0   0]
 [  0   0  26  99   3   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.025), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7988350999999057,0.00011594218749877427,2240.6875,0.34932598039215684,0.690406162464986,0.6839999176774051,0.70625,0.8618395059583761,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 104  30   1   0]
 [  0   1  23 100   4   0]
 [  0   0   1  17  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.8228695000000243,0.00011795874999975808,2017.0078125,0.349249387254902,0.6891838046347232,0.6823412135539795,0.70625,0.8572355096630553,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 105  30   1   0]
 [  0   1  25  99   3   0]
 [  0   0   2  16  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7034513999997216,0.0001171993750006095,2339.6953125,0.34886642156862746,0.6870621676141574,0.6737330837892312,0.70625,0.851659159275086,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 110  23   3   0]
 [  0   0  30  94   4   0]
 [  0   0   2  16  22   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",7,0.4888008000007176,0.0005103415625001162,2273.3125,0.3488399621212121,0.4718161771280374,0.5859794499063531,0.415625,0.7599009191597934,"[[ 1  1  0  0  0  0]
 [ 3  3  5  0  0  0]
 [ 6 28 68 21  7  6]
 [ 6 16 28 41 21 16]
 [ 0  5  0  4 20 11]
 [ 0  0  0  0  3  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 25), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.7148739999997815,0.00011543843749990401,2130.68359375,0.3486060049019608,0.6916591721030498,0.6777242910863601,0.7125,0.8526239648303419,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 110  24   2   0]
 [  0   0  27  97   4   0]
 [  0   0   2  17  21   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.48295299999972485,0.0005206618750008829,2327.5546875,0.3482861705288176,0.4525661505513696,0.5799223847253222,0.4,0.7699557498793717,"[[ 0  2  0  0  0  0]
 [ 2  5  4  0  0  0]
 [16 27 64 20  3  6]
 [10 15 29 36 26 12]
 [ 0  4  0  3 22 11]
 [ 0  0  0  0  2  1]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.7004236000002493,0.0001137131250004586,2122.70703125,0.3479779411764706,0.6787760574677072,0.6634703881552622,0.696875,0.8488390063204516,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 108  28   0   0]
 [  0   0  28  92   8   0]
 [  0   0   3  14  23   0]
 [  0   0   0   0   3   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.8170270000000528,0.00011301624999902061,2121.48046875,0.34764093137254903,0.6854469626683682,0.6724171604125522,0.703125,0.8546193646965294,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 109  26   1   0]
 [  0   1  27  94   6   0]
 [  0   0   3  15  22   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.46886080000012953,0.0005049378124994064,2148.65234375,0.347213866607249,0.482625830208775,0.5957067660840931,0.434375,0.7690854295332605,"[[ 0  2  0  0  0  0]
 [ 2  5  4  0  0  0]
 [ 4 22 78 18  8  6]
 [ 5 14 29 38 23 19]
 [ 0  4  1  4 17 14]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.4051300999999512,0.0004787568750003857,2210.921875,0.34705046791443844,0.5375063507889175,0.592817678513243,0.509375,0.7737298365561883,"[[ 0  1  1  0  0  0]
 [ 2  5  4  0  0  0]
 [ 3 14 79 31  6  3]
 [ 3  7 25 54 29 10]
 [ 0  3  1  8 25  3]
 [ 0  0  0  0  3  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7019387999998798,0.0001104456249997554,1995.26171875,0.34704350490196073,0.6953117695025821,0.6874149659863946,0.715625,0.8507455981815634,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 110  25   1   0]
 [  0   0  26  99   3   0]
 [  0   0   2  18  20   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",7,1.4167607000008502,0.000439232812502155,2273.38671875,0.34683461452762926,0.5536556426569051,0.5829218182810666,0.54375,0.7485054253412528,"[[ 0  0  2  0  0  0]
 [ 3  4  3  1  0  0]
 [ 1 15 88 26  6  0]
 [ 0  5 39 57 26  1]
 [ 0  3  2  8 25  2]
 [ 0  0  1  0  2  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.8537355000000844,0.00012153249999968807,2012.08984375,0.34672181372549016,0.6833829915406604,0.67716878657276,0.7,0.8610368958842821,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  31   1   0]
 [  0   1  26  98   3   0]
 [  0   0   1  17  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.7), ('eta', 0.025), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.8263870000000679,0.00012094687500052714,2230.6484375,0.34672181372549016,0.6843522706430223,0.6764507746126937,0.7,0.8657719453506683,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 104  30   1   0]
 [  0   1  24  98   5   0]
 [  0   0   1  17  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.1), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.9043119999996634,0.00011750562499912576,2304.015625,0.34672181372549016,0.6822778967713089,0.6709400636522547,0.7,0.8488447701837115,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  31   1   0]
 [  0   0  23  98   7   0]
 [  0   0   1  17  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.015), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.8299969999998211,0.00012321531250165664,2361.8984375,0.3464920343137255,0.6820836879798475,0.6753969448685692,0.7,0.8477421572797577,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 107  29   0   0]
 [  0   0  30  95   3   0]
 [  0   0   1  17  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,1.0077774000001227,0.0001166449999999486,2364.0859375,0.3464920343137255,0.6815716362424602,0.671212064962065,0.7,0.8549661475784254,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 107  28   1   0]
 [  0   0  29  95   4   0]
 [  0   0   3  15  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 3), ('subsample', 0.8)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5577289000002565,0.00011451656249903409,2337.2265625,0.3463388480392157,0.6813294729261822,0.6722555289102051,0.7,0.8473869486950724,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 109  27   0   0]
 [  0   0  31  93   4   0]
 [  0   0   3  15  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 15), ('min_child_weight', 3), ('subsample', 1.0)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6850602999993498,0.00011628624999957538,2340.9453125,0.3460018382352941,0.6877893584079151,0.681975222066386,0.70625,0.8594443425682721,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   1 110  25   0   0]
 [  0   0  30  95   3   0]
 [  0   0   4  15  21   0]
 [  0   0   1   1   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 7), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6251320999999734,0.00011420812500091415,2359.27734375,0.34560355392156855,0.673722894571603,0.6682167832167832,0.690625,0.8326501627615757,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 105  31   0   0]
 [  0   0  33  93   2   0]
 [  0   0   2  15  23   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6259724999999889,0.00011244937500123341,2287.078125,0.3455729166666666,0.680162853462553,0.6728710362863681,0.696875,0.8395104129775278,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  32   2   0]
 [  0   1  25  99   3   0]
 [  0   0   2  16  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5875266000002739,0.00011313749999999345,2226.49609375,0.3455269607843137,0.6732946075043789,0.6629431734111536,0.690625,0.8514662120701549,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 106  30   0   0]
 [  0   0  31  92   5   0]
 [  0   0   1  16  23   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.8681127999998353,0.0001226571874980209,2297.1484375,0.34541973039215684,0.680078754476795,0.6688574510923084,0.696875,0.8550100403479812,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  29   3   0]
 [  0   1  25  97   5   0]
 [  0   0   1  17  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.01), ('gamma', 0.1), ('lambda', 0.01), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.8702030000004015,0.00012739968749997388,2296.34375,0.34541973039215684,0.680078754476795,0.6688574510923084,0.696875,0.8550100403479812,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  29   3   0]
 [  0   1  25  97   5   0]
 [  0   0   1  17  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7344913000006272,0.00011884312500001215,2358.27734375,0.345343137254902,0.6788753453185431,0.668115013065752,0.696875,0.845320975261733,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 105  30   1   0]
 [  0   0  27  96   5   0]
 [  0   0   2  16  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.8841460000003281,0.0001125862499975483,2295.46875,0.345343137254902,0.6787558724926279,0.6667433023597408,0.696875,0.8415337404406019,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 105  29   2   0]
 [  0   0  27  96   5   0]
 [  0   0   2  16  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.8739684000001944,0.00012048187499971163,2172.53125,0.34531249999999997,0.6844560252769056,0.6763995726495727,0.703125,0.8553645256909252,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  31   3   0]
 [  0   0  23 102   3   0]
 [  0   0   1  18  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.025), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.8804330000002665,0.0001264062499998886,2173.7421875,0.34531249999999997,0.6844560252769056,0.6763995726495727,0.703125,0.8553645256909252,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  31   3   0]
 [  0   0  23 102   3   0]
 [  0   0   1  18  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7822648999999728,0.00011495781249948323,2352.08984375,0.3451133578431372,0.6785431716546266,0.668239807975369,0.696875,0.8436357020384635,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 108  28   0   0]
 [  0   0  30  93   5   0]
 [  0   0   1  17  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.9083140000002459,0.00011517906249878252,2242.19921875,0.34508272058823525,0.6844313427621413,0.6759632395534889,0.703125,0.8525709708172565,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 105  30   1   0]
 [  0   0  25  99   4   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.1), ('gamma', 0.05), ('lambda', 1.0), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.630364699999518,0.00011718687499921998,2345.3671875,0.3446997549019608,0.6836960844263842,0.6734915378955114,0.703125,0.8535885197564357,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 110  25   1   0]
 [  0   0  30  94   4   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5768672000003789,0.00011391468749764045,2338.203125,0.34440870098039217,0.6637707277144064,0.6507054093567252,0.68125,0.8457359682730002,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 107  29   0   0]
 [  0   0  34  87   7   0]
 [  0   0   2  14  24   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7410319999999047,0.00012005624999744668,2358.53515625,0.34419424019607847,0.6759548148272632,0.666891618165368,0.69375,0.838054469693691,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  31   2   0]
 [  0   0  28  97   3   0]
 [  0   0   2  16  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.015), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.5565517999998519,0.0001153174999998896,2153.3125,0.3441176470588235,0.6758297673549472,0.6641587620963879,0.69375,0.8343913632614303,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 104  29   3   0]
 [  0   0  28  96   4   0]
 [  0   0   2  16  22   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.4951500999995915,0.00045093656250116965,2326.00390625,0.3441078988413547,0.5559253245598255,0.6044507602654775,0.528125,0.778370781352905,"[[ 0  1  1  0  0  0]
 [ 2  4  5  0  0  0]
 [ 7 18 76 29  5  1]
 [ 4  9 27 63 23  2]
 [ 0  2  0 10 26  2]
 [ 0  0  0  0  3  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.1), ('lambda', 0.01), ('max_depth', 25), ('min_child_weight', 3), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7358054999995147,0.00012589156249873668,2294.62890625,0.34404105392156864,0.6760842937445386,0.6623573059360731,0.69375,0.8479487482217701,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 105  29   2   0]
 [  0   0  25  95   8   0]
 [  0   0   1  17  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5737933999998859,0.00011227937499995733,1992.04296875,0.34388786764705886,0.6756269821877816,0.6643211878433554,0.69375,0.8522613777667292,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 107  29   0   0]
 [  0   0  29  93   6   0]
 [  0   0   2  16  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6917716999998902,0.00012072124999988887,2005.47265625,0.3438572303921568,0.6825190317696231,0.675188163565647,0.7,0.8563972823063162,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 104  30   1   0]
 [  0   0  25  99   4   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.01), ('gamma', 0.7), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.7344121999994968,0.00011306250000018281,2216.94921875,0.34373468137254903,0.6737536310032742,0.6591509953606728,0.69375,0.8381083975339092,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 109  25   2   0]
 [  0   0  32  91   5   0]
 [  0   0   3  15  22   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.025), ('gamma', 0.7), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.8473523000002388,0.00011750781249872944,2353.42578125,0.3435508578431372,0.6811731695534512,0.673165639113915,0.7,0.8507855012986625,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 108  28   0   0]
 [  0   0  29  95   4   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.45767589999923075,0.000492510624999909,2297.9296875,0.3434900475341652,0.486459965991913,0.5947000509140855,0.4375,0.7660484329318977,"[[ 0  2  0  0  0  0]
 [ 4  4  3  0  0  0]
 [ 3 25 75 22  7  4]
 [ 7 11 30 40 25 15]
 [ 0  4  0  2 20 14]
 [ 0  0  0  0  2  1]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6296013999999559,0.00011563656250075382,2161.26953125,0.34330575980392153,0.6675618128274696,0.657474033237456,0.684375,0.8384028410611757,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  34   1   0]
 [  0   0  28  95   5   0]
 [  0   0   2  15  23   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.1), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.8176316999997653,0.00012174312500121687,2361.6015625,0.34329044117647056,0.686911382747905,0.684412547151082,0.70625,0.8561191326057214,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 108  28   0   0]
 [  0   0  28  98   2   0]
 [  0   0   1  19  20   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.8041267999997217,0.00011937968750146411,2285.22265625,0.34289215686274516,0.6741913826245957,0.6643128450259926,0.690625,0.8502334306758532,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  31   2   0]
 [  0   1  26  96   5   0]
 [  0   0   1  17  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.1), ('gamma', 1.0), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 3), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6965865000001941,0.00011355093750040624,2227.65234375,0.34281556372549016,0.6739282858374596,0.6641924679005453,0.690625,0.8481300485486434,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 104  30   1   0]
 [  0   0  28  95   5   0]
 [  0   0   2  16  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.6604010000000926,0.00011580187500044303,2134.59765625,0.3427389705882353,0.672670094864958,0.6615893822495145,0.690625,0.8470246353413937,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 105  30   1   0]
 [  0   0  30  94   4   0]
 [  0   0   3  15  22   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 1.0), ('eta', 0.025), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6668535999997403,0.00010882625000050439,2229.9296875,0.3422487745098039,0.6778296640293544,0.666592423669534,0.696875,0.8521424560807336,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 108  26   2   0]
 [  0   0  30  94   4   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6991006999996898,0.00011381687500033877,2282.9453125,0.34198835784313725,0.6842911300243528,0.6757334257334258,0.703125,0.8474813712748068,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 108  25   2   0]
 [  0   0  28  97   3   0]
 [  0   0   3  17  20   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.025), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.9317980999999236,0.00012010812500022894,2131.26953125,0.3419117647058824,0.6834977519257265,0.6705172413793103,0.703125,0.8568515115072275,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 109  26   1   0]
 [  0   1  25  96   6   0]
 [  0   0   2  18  20   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.8430913000001965,0.0001204559374997416,2173.375,0.34189644607843145,0.6702500510308227,0.6626662773664832,0.6875,0.8555550014567995,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 99 34  3  0]
 [ 0  0 26 99  3  0]
 [ 0  0  0 18 22  0]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.5612525000001369,0.000489485625000441,2075.29296875,0.3413951091800356,0.5692968487507104,0.6081022473573902,0.55,0.7790220704119033,"[[ 0  0  2  0  0  0]
 [ 3  3  4  0  1  0]
 [ 2 16 87 24  6  1]
 [ 3  7 33 59 23  3]
 [ 0  2  0  9 27  2]
 [ 0  0  0  1  2  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 30), ('max_features', None), ('min_samples_leaf', 1), ('min_samples_split', 5), ('n_estimators', 300)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5138804000000619,0.0009276350000000377,1748.78125,0.3413296568627451,0.6769829344156282,0.6738877217553688,0.69375,0.8647649635355064,"[[  0   1   1   0   0   0]
 [  1   0   7   3   0   0]
 [  0   0 103  32   1   0]
 [  0   0  28  98   2   0]
 [  0   0   1  18  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.6), ('eta', 0.01), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.643877400000747,0.00011582406249885935,2360.71875,0.3412837009803922,0.6697639147046676,0.6631028907169725,0.6875,0.8458440042146732,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 107  29   0   0]
 [  0   0  34  91   3   0]
 [  0   0   2  16  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6630316000000676,0.00011562656250134751,2339.515625,0.3412837009803922,0.6694230986897853,0.6593732261116366,0.6875,0.8505081074643913,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 107  29   0   0]
 [  0   0  32  91   5   0]
 [  0   0   3  15  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.1), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.9574932999994417,0.00011414843749832926,2305.28515625,0.3412530637254902,0.6752590541608694,0.6620981748910958,0.69375,0.8413242317789729,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  29   3   0]
 [  0   0  25  97   6   0]
 [  0   0   3  16  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 1.0), ('lambda', 0.01), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.9113862999993216,0.00011202093749886898,2306.77734375,0.34109987745098036,0.6751872540604934,0.6674223958706718,0.69375,0.8383191915673047,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 106  29   1   0]
 [  0   0  30  95   3   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6654465999999957,0.00011483749999996462,2010.54296875,0.34102328431372547,0.6770349193184926,0.669090231170768,0.69375,0.8527322408786221,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   2 107  26   1   0]
 [  0   0  30  94   4   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6641147000000274,0.00011428718749968425,1994.234375,0.34102328431372547,0.6770349193184926,0.669090231170768,0.69375,0.8527322408786221,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   2 107  26   1   0]
 [  0   0  30  94   4   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 1.0), ('eta', 0.025), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.8596768000006705,0.00011554124999975101,2356.93359375,0.3408700980392157,0.6745326968992218,0.6647005772005772,0.69375,0.8529480259786115,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 109  26   1   0]
 [  0   0  32  92   4   0]
 [  0   0   3  16  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.025), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6920572000001357,0.00011134781249992898,2003.33984375,0.3408394607843137,0.6818726836712449,0.6747407006139401,0.7,0.8566013094328933,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   1 106  28   1   0]
 [  0   0  26  98   4   0]
 [  0   0   0  20  20   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6871232000000873,0.00010902812500006576,1995.1015625,0.3408394607843137,0.6818726836712449,0.6747407006139401,0.7,0.8566013094328933,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   1 106  28   1   0]
 [  0   0  26  98   4   0]
 [  0   0   0  20  20   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5324227999999493,0.0004596884374990395,2148.31640625,0.3408269273618538,0.5858761046536938,0.6045450617930456,0.575,0.7943774940675765,"[[ 0  0  2  0  0  0]
 [ 2  2  6  0  1  0]
 [ 1 10 87 34  3  1]
 [ 1  7 29 67 21  3]
 [ 0  1  0 10 28  1]
 [ 0  0  0  1  2  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.1), ('gamma', 0.7), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.8821656999998595,0.00011517406250050044,2371.3984375,0.3406862745098039,0.6806371638924456,0.6755262915977202,0.7,0.8465386203784373,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 108  28   0   0]
 [  0   0  29  96   3   0]
 [  0   0   2  18  20   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 1.0), ('eta', 0.015), ('gamma', 0.7), ('lambda', 1.0), ('max_depth', 9), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5643643999999313,0.00010923812499967767,1982.3046875,0.340640318627451,0.6738123410283655,0.662684995717141,0.69375,0.84925886025727,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 112  23   1   0]
 [  0   0  34  89   5   0]
 [  0   0   3  16  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 7), ('subsample', 0.9)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5544197999997778,0.00011502499999949123,2338.46484375,0.3405637254901961,0.6735568675630789,0.6611396042485087,0.69375,0.8486946459722493,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 113  21   2   0]
 [  0   0  35  88   5   0]
 [  0   0   1  18  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6609043999997084,0.00011393531250121214,2347.34375,0.3402113970588235,0.6668131868131868,0.6551628352490421,0.684375,0.8350412250693051,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 104  30   2   0]
 [  0   0  30  93   5   0]
 [  0   0   2  16  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 1.0), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.7401209999998173,0.00011802718750004715,2135.51953125,0.34013480392156864,0.6665640720718043,0.652084861824407,0.684375,0.8465351831834876,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 105  29   2   0]
 [  0   0  30  92   6   0]
 [  0   0   2  16  22   0]
 [  0   0   0   0   3   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 1.0), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.7316174999996292,0.0001151003125016814,2216.0078125,0.3399509803921568,0.6733244877618693,0.6640653988868275,0.690625,0.8441918731791723,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 104  31   1   0]
 [  0   1  27  96   4   0]
 [  0   0   2  17  21   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,1.4017793000002712,0.0004248331250011006,2170.59375,0.3399370543672014,0.6217093373493976,0.6225155260741386,0.621875,0.7797503615744559,"[[ 0  0  2  0  0  0]
 [ 2  1  7  1  0  0]
 [ 0  4 98 32  1  1]
 [ 1  6 36 74 10  1]
 [ 0  0  1 12 26  1]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.5359921999997823,0.00045775312500211384,2173.46484375,0.33980197192513373,0.5842605835240275,0.6233827243018419,0.559375,0.7752161799401436,"[[ 0  1  1  0  0  0]
 [ 2  3  5  1  0  0]
 [ 7 14 84 24  5  2]
 [ 1  7 29 67 22  2]
 [ 0  2  0 10 25  3]
 [ 0  0  0  0  3  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7808384999998452,0.0001164643749973493,2295.96875,0.33969056372549017,0.6788103999014228,0.6681925080625155,0.696875,0.8508209519121911,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 104  28   3   0]
 [  0   0  24  99   5   0]
 [  0   0   2  18  20   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.665186399999584,0.00010973250000176905,2339.96484375,0.3396446078431372,0.6719298225268373,0.662377151799687,0.690625,0.8451511117577437,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 108  28   0   0]
 [  0   0  31  92   5   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.025), ('gamma', 0.05), ('lambda', 1.0), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7631602999999814,0.0001181384375001926,2173.74609375,0.3396139705882353,0.6786825398505846,0.6713040315389309,0.696875,0.8543087361335695,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 105  28   2   0]
 [  0   0  27  98   3   0]
 [  0   0   2  18  20   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 7), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5553544999997939,0.00010992687499964405,2226.390625,0.33946078431372545,0.6773227359494965,0.6682449458742562,0.696875,0.8491851225981808,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 107  28   1   0]
 [  0   0  28  96   4   0]
 [  0   0   4  16  20   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.05), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.6)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7265741999999591,0.00011732374999979811,2014.1640625,0.33946078431372545,0.6780022316457683,0.6701608391608392,0.696875,0.8549191226016326,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 107  29   0   0]
 [  0   0  27  96   5   0]
 [  0   0   0  20  20   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,1.4422150999998848,0.0004143037500000446,2298.25390625,0.33926442736185386,0.5928523342731833,0.6179119348385289,0.578125,0.7714441752317684,"[[ 0  0  2  0  0  0]
 [ 3  2  5  1  0  0]
 [ 2 10 87 29  8  0]
 [ 3  6 28 69 21  1]
 [ 0  2  0  9 27  2]
 [ 0  0  0  1  2  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7094197000001259,0.00011475593749992186,2159.6953125,0.3388786764705882,0.6694081244049508,0.6594627028590967,0.6875,0.8362346565213594,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  32   3   0]
 [  0   0  26  98   4   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.566823199999817,0.0001127978124998208,2122.73046875,0.3385723039215686,0.6692740954604561,0.6590428672649976,0.6875,0.8480583941142159,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 105  30   1   0]
 [  0   0  30  94   4   0]
 [  0   0   2  17  21   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.7388270999999804,0.00011320218749801824,2216.796875,0.3384957107843137,0.6700591016548463,0.658033474821532,0.6875,0.8349017924583746,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 106  28   2   0]
 [  0   1  29  93   5   0]
 [  0   0   2  17  21   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 7), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.49702690000003713,0.00011264968749884474,2124.19921875,0.3384497549019608,0.6614488808227466,0.6445757020757021,0.68125,0.838444719724831,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 110  24   2   0]
 [  0   0  33  86   9   0]
 [  0   0   2  16  22   0]
 [  0   0   0   0   3   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6456239000008281,0.00011937031249829034,2352.91796875,0.3384191176470588,0.668950013611956,0.6611320778419044,0.6875,0.8404922941941084,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 107  28   1   0]
 [  0   0  33  92   3   0]
 [  0   0   3  16  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5659261999999217,0.00011271250000106647,2338.109375,0.3379289215686274,0.673884349559086,0.6663611046646554,0.69375,0.8528647936720002,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 110  26   0   0]
 [  0   0  32  92   4   0]
 [  0   0   3  17  20   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.5884150000001682,0.0005167631250003524,2327.62890625,0.337808229352347,0.4397519171600882,0.5514350346993637,0.3875,0.7552638870414321,"[[ 0  2  0  0  0  0]
 [ 2  5  4  0  0  0]
 [17 29 58 25  3  4]
 [11 15 31 40 24  7]
 [ 0  5  0  4 20 11]
 [ 0  0  0  0  2  1]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 1.0), ('eta', 0.025), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 0.6)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.8008340000001226,0.00012292843750003613,2136.51953125,0.3377604166666666,0.6613192512443378,0.6470710478094286,0.678125,0.8512657016953822,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 102  32   2   0]
 [  0   0  26  93   9   0]
 [  0   0   2  16  22   0]
 [  0   0   0   0   3   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.025), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7034192999999505,0.00012183999999990647,2358.33203125,0.3377604166666666,0.6610692074647727,0.653564180618975,0.678125,0.8463453795564565,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  33   1   0]
 [  0   0  32  93   3   0]
 [  0   0   3  15  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 1.0), ('eta', 0.025), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.6)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.7505848000000697,0.00012432781249884783,2135.359375,0.33760723039215684,0.6619627636110795,0.6491463935125907,0.678125,0.8479502246370215,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 104  31   1   0]
 [  0   1  28  91   8   0]
 [  0   0   2  16  22   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7036146000000372,0.00011440562500126816,2346.1640625,0.337530637254902,0.6607069143446853,0.6512320567701511,0.678125,0.8337552557952529,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 105  31   0   0]
 [  0   0  33  90   5   0]
 [  0   0   2  16  22   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7166285000002972,0.00011209124999993492,2293.5546875,0.3374234068627451,0.6663674843476428,0.6566256378756379,0.684375,0.8382725712733337,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  31   2   0]
 [  0   0  29  95   4   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.580377000000226,0.0001122909374998926,2280.453125,0.33727022058823525,0.6661063188526295,0.6556547619047619,0.684375,0.8375761296711562,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 105  29   2   0]
 [  0   0  31  93   4   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6298274999999194,0.00011677468750121988,2353.5703125,0.33727022058823525,0.6660051911206767,0.6554101304101303,0.684375,0.8388825805819587,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 105  30   1   0]
 [  0   0  30  93   5   0]
 [  0   0   3  16  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.7243229000005158,0.00011491593749894946,2215.9765625,0.33727022058823525,0.6672324073592849,0.6547131128280321,0.684375,0.8418388084528209,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 105  29   2   0]
 [  0   1  28  93   6   0]
 [  0   0   2  17  21   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.1), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.7708619999998518,0.00012107999999955155,2137.15625,0.3372549019607843,0.6856187981265381,0.6761297539149889,0.70625,0.865252185842141,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 112  24   0   0]
 [  0   1  26  96   5   0]
 [  0   0   2  20  18   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6192786000001433,0.00011193999999932202,2240.28125,0.33719362745098036,0.6671984459491431,0.6589567714567715,0.684375,0.8415339356377254,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 106  29   0   0]
 [  0   0  31  92   5   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5637471000000005,0.00011087843750061666,1993.640625,0.3370098039215686,0.6739109184410728,0.6676762426762427,0.690625,0.85149015068461,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   2 105  29   0   0]
 [  0   0  27  96   5   0]
 [  0   0   2  18  20   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,2.1832595000000765,0.00040058031249969874,1469.7890625,0.33697916666666666,0.6542582417582417,0.6473620129870131,0.6625,0.7908082221927558,"[[  0   1   1   0   0   0]
 [  1   0   6   4   0   0]
 [  1   1 102  28   4   0]
 [  1   2  32  86   6   1]
 [  0   0   3  12  24   1]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 15), ('max_features', 'log2'), ('min_samples_leaf', 1), ('min_samples_split', 5), ('n_estimators', 800)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.0376917999999478,0.0022711103125004684,1746.74609375,0.3368259803921569,0.6780205203941667,0.6853897342669899,0.696875,0.8698406033923523,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 104  32   0   0]
 [  0   0  28 100   0   0]
 [  0   0   1  20  19   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.5159695000002102,0.0004486646874994449,2297.9921875,0.33679952094474147,0.5591505747868768,0.5987967963894644,0.5375,0.7855619989321047,"[[ 0  0  2  0  0  0]
 [ 3  3  5  0  0  0]
 [ 1 15 79 37  4  0]
 [ 3 11 22 63 27  2]
 [ 0  2  1  8 27  2]
 [ 0  0  0  1  2  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.025), ('gamma', 0.7), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5450829999999769,0.00010883031249946385,1984.96875,0.3366268382352941,0.670724869301406,0.6599321371060501,0.690625,0.8514018354974443,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 110  25   1   0]
 [  0   0  32  91   5   0]
 [  0   0   3  17  20   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.722677300000214,0.00011406281250003758,2216.49609375,0.33644301470588234,0.6762734781027464,0.6657398671191694,0.696875,0.8421906067568342,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 109  25   2   0]
 [  0   0  30  95   3   0]
 [  0   0   3  18  19   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6251968999999917,0.00011895406250062024,2168.30859375,0.33627450980392154,0.6646769416092518,0.6558726017785809,0.68125,0.8402389392091301,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   1 101  32   2   0]
 [  0   0  27  96   5   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.1), ('lambda', 1.0), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.8988711000001786,0.00012131468749885244,2218.08203125,0.33619791666666665,0.663444616996995,0.654065247187825,0.68125,0.8445383078894617,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 102  32   2   0]
 [  0   0  30  95   3   0]
 [  0   0   2  17  21   0]
 [  0   0   0   1   2   0]]"
HistGradientBoostingClassifier(),"OrderedDict([('warm_start', True)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,5.021799600000122,0.0004303915625001764,2034.98046875,0.33612132352941176,0.6658274044795783,0.6564821116080108,0.68125,0.849587585052317,"[[  0   1   1   0   0   0]
 [  1   0   7   3   0   0]
 [  0   0 103  32   1   0]
 [  0   1  26  94   7   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
HistGradientBoostingClassifier(),"OrderedDict([('warm_start', False)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,4.973482600000352,0.00042645406249874895,2035.1171875,0.33612132352941176,0.6658274044795783,0.6564821116080108,0.68125,0.849587585052317,"[[  0   1   1   0   0   0]
 [  1   0   7   3   0   0]
 [  0   0 103  32   1   0]
 [  0   1  26  94   7   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,2.249105399999735,0.00043535875000060286,2148.3984375,0.33609068627450983,0.6431461496832521,0.6348899101625383,0.653125,0.7886936195043825,"[[  0   0   2   0   0   0]
 [  1   0   9   1   0   0]
 [  1   1 100  32   2   0]
 [  1   1  34  84   7   1]
 [  0   0   2  12  25   1]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.49801879999995435,0.00010911031249918323,2288.18359375,0.3360447303921568,0.6643241022113746,0.6551293103448275,0.68125,0.830082332943497,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  30   2   0]
 [  0   1  30  93   4   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6639878999999382,0.00011157249999982355,1998.80859375,0.33596813725490193,0.6632923136521385,0.6531937883797827,0.68125,0.8455555583341001,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 105  31   0   0]
 [  0   0  30  92   6   0]
 [  0   0   1  18  21   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.5133246999994299,0.00045639187499944,2323.66015625,0.33592264557338086,0.3606793383907987,0.5300108002260983,0.303125,0.6863755805057326,"[[ 1  0  0  0  0  1]
 [ 2  4  4  1  0  0]
 [19 25 65 16  3  8]
 [20 35 27 18 13 15]
 [ 1  7  0  1  8 23]
 [ 0  1  0  0  1  1]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', None), ('max_features', 'sqrt'), ('min_samples_leaf', 1), ('min_samples_split', 2), ('n_estimators', 500)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6981243000000177,0.001454267500000128,1750.79296875,0.33544730392156863,0.6756702530905955,0.6767605633802818,0.69375,0.8749064300028566,"[[  0   1   1   0   0   0]
 [  1   0   7   3   0   0]
 [  0   0 105  31   0   0]
 [  0   0  28  98   2   0]
 [  0   0   1  20  19   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.7), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.5442173999999795,0.00010850187500182074,2347.19921875,0.3352941176470588,0.6727034851398372,0.6701458756636299,0.69375,0.8279896727807914,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 107  29   0   0]
 [  0   0  30  96   2   0]
 [  0   0   5  16  19   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7411299999998846,0.00011473531250061342,2166.40625,0.33520220588235294,0.6604988324426185,0.6519389857042805,0.678125,0.8422754635046875,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 98 35  3  0]
 [ 0  0 26 98  4  0]
 [ 0  0  2 17 21  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6596305000002758,0.0001154581249977582,2281.1328125,0.33489583333333334,0.6604212282348035,0.6498529855742095,0.678125,0.8383483753935627,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 102  32   2   0]
 [  0   0  29  94   5   0]
 [  0   0   3  16  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.5738712999996096,0.00011331437499961794,2158.2890625,0.33489583333333334,0.6602941901483276,0.6494464074513335,0.678125,0.8323195646656574,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  31   3   0]
 [  0   0  30  94   4   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",8,0.5015700000003562,0.0004421778125021092,2341.171875,0.334823418003565,0.5676447075429958,0.6003954810948248,0.546875,0.7766020724599023,"[[ 0  1  1  0  0  0]
 [ 2  3  6  0  0  0]
 [ 3 14 81 34  2  2]
 [ 2  8 28 66 24  0]
 [ 0  3  0  9 25  3]
 [ 0  0  0  0  3  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 20), ('max_features', 'log2'), ('min_samples_leaf', 1), ('min_samples_split', 2), ('n_estimators', 500)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6950665000001663,0.0014471787499999778,1748.87890625,0.3347120098039216,0.6679146987703865,0.6721308419390718,0.684375,0.8746233057949988,"[[  0   1   1   0   0   0]
 [  1   0   7   3   0   0]
 [  0   0 101  35   0   0]
 [  0   0  29  98   1   0]
 [  0   0   1  19  20   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.1), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 5), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.4920446000000993,0.00010509843749986202,2232.97265625,0.3346660539215686,0.6613744701549579,0.6568678294935174,0.678125,0.8358911109317008,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 105  30   1   0]
 [  0   1  34  91   2   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 25), ('min_child_weight', 7), ('subsample', 1.0)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5422249000002921,0.00011661343749835851,2339.65234375,0.3345128676470588,0.6595547405651812,0.6476658874510113,0.678125,0.8513248378676741,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 107  28   1   0]
 [  0   0  33  89   6   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5712149000000863,0.00011217312500093613,2280.59765625,0.33448223039215685,0.666738926264543,0.6568800247371677,0.684375,0.8374740641608451,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 104  29   2   0]
 [  0   0  28  95   5   0]
 [  0   0   2  18  20   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.8773450000003322,0.0001220043750009836,2174.7109375,0.33437500000000003,0.6712422553971849,0.6641797679206438,0.690625,0.8520611398739797,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  31   3   0]
 [  0   0  25 100   3   0]
 [  0   0   1  20  19   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.6071513000006235,0.00011195531249938995,2209.35546875,0.33425245098039214,0.6652007729404219,0.6505947050110507,0.684375,0.8349346437927918,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 107  26   3   0]
 [  0   1  29  92   6   0]
 [  0   0   3  17  20   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.903482200000326,0.00012287468750002973,2220.3203125,0.33417585784313725,0.6663097990930659,0.6534684684684684,0.684375,0.8481908115697445,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 108  26   2   0]
 [  0   1  30  91   6   0]
 [  0   0   2  18  20   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.7), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.5618737999998302,0.00010882562500000859,2123.6328125,0.3340992647058824,0.6647440794499618,0.6508169934640523,0.684375,0.8420331339054105,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 109  25   2   0]
 [  0   0  32  90   6   0]
 [  0   0   4  16  20   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 15), ('max_features', 'sqrt'), ('min_samples_leaf', 1), ('min_samples_split', 2), ('n_estimators', 300)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.4138817000000472,0.0009109153124995828,1730.84375,0.33388480392156866,0.6778418114066349,0.6806699272065513,0.696875,0.8739552693813037,"[[  0   1   1   0   0   0]
 [  1   0   7   3   0   0]
 [  0   0 105  31   0   0]
 [  0   0  26 100   2   0]
 [  0   0   1  21  18   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.5747199000002183,0.00011433406250063171,2122.65234375,0.33328737745098036,0.6558686400050373,0.6395687887375867,0.675,0.8434328158331447,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 106  28   2   0]
 [  0   0  30  89   9   0]
 [  0   0   3  16  21   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.1), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.8204722000000402,0.00011921593749946169,2123.1015625,0.33328737745098036,0.659867157490397,0.6481878477742449,0.675,0.8565311389955068,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   1 106  27   2   0]
 [  0   1  31  89   6   1]
 [  0   0   3  16  21   0]
 [  0   0   0   0   3   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 1.0), ('max_depth', 7), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.5881478999999672,0.00011002093749823416,2205.16015625,0.33313419117647053,0.6563915094339622,0.6434882827506723,0.675,0.8416852452326895,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 108  28   0   0]
 [  0   0  34  87   7   0]
 [  0   0   2  17  21   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.1), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 7), ('min_child_weight', 3), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5399846999998772,0.00010919843750016867,2003.0,0.3331035539215686,0.6629776560165089,0.6570020362828582,0.68125,0.8423289733961374,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 105  31   0   0]
 [  0   0  31  93   4   0]
 [  0   0   1  19  20   0]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 25), ('max_features', 'log2'), ('min_samples_leaf', 2), ('min_samples_split', 2), ('n_estimators', 120)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.1741959000000861,0.0004379943750002724,1721.78515625,0.33307291666666666,0.6681415797317438,0.6724657416923604,0.6875,0.8630614993698987,"[[  0   0   1   1   0   0]
 [  0   0   7   4   0   0]
 [  0   0 102  34   0   0]
 [  0   0  28  99   1   0]
 [  0   0   1  20  19   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7156758000000991,0.0001155884374995253,2167.83203125,0.3329963235294118,0.6691419050263815,0.6633557297499068,0.6875,0.8394033108599498,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 103  30   2   0]
 [  0   0  27  98   3   0]
 [  0   0   2  19  19   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.1), ('gamma', 0.7), ('lambda', 1.0), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5961121000000276,0.00010999031250022995,2008.875,0.3329197303921569,0.6680590019299697,0.6610445514750151,0.6875,0.8489913125459758,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  30   2   0]
 [  0   0  28  97   3   0]
 [  0   0   2  19  19   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.6197971000001417,0.00011135718749955004,2130.390625,0.33276654411764706,0.6667078916372203,0.6563121402407116,0.6875,0.8496310907752405,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 106  29   1   0]
 [  0   0  29  95   4   0]
 [  0   0   3  18  19   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.6)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.6056841999998142,0.00011315375000009453,2130.33203125,0.33268995098039217,0.6679709763480425,0.6559763648019434,0.6875,0.8433057316018058,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 107  28   1   0]
 [  0   0  28  94   6   0]
 [  0   0   2  19  19   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 30), ('max_features', 'sqrt'), ('min_samples_leaf', 1), ('min_samples_split', 2), ('n_estimators', 500)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6930809999998928,0.0014717737499999827,1750.53515625,0.3326593137254902,0.6750101347927435,0.6813788426763111,0.69375,0.8755543548998421,"[[  0   1   1   0   0   0]
 [  1   0   7   3   0   0]
 [  0   0 104  32   0   0]
 [  0   0  27 100   1   0]
 [  0   0   1  21  18   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,1.352763999999297,0.00041564874999835413,2326.2421875,0.33255486853832444,0.6045724101343216,0.6242912768992732,0.590625,0.7792247377258261,"[[ 0  1  0  1  0  0]
 [ 2  2  7  0  0  0]
 [ 1 11 93 25  6  0]
 [ 3  5 28 71 20  1]
 [ 0  2  0 13 23  2]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,1.5625356999998985,0.0004220559374999766,2210.921875,0.33241700089126563,0.5702487447611935,0.5750221631205673,0.56875,0.7587841570252439,"[[ 0  0  2  0  0  0]
 [ 1  2  7  1  0  0]
 [ 1  8 88 35  2  2]
 [ 0  4 40 66 17  1]
 [ 0  0  4  9 26  1]
 [ 0  0  0  1  2  0]]"
MultinomialNB(fit_prior=False),"OrderedDict([('fit_prior', False)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.001661399999875357,2.62724999998909e-05,2012.0234375,0.3321723670528817,0.33708456462891945,0.5315133933638146,0.3125,0.6661739144718999,"[[ 0  2  0  0  0  0]
 [ 0  6  3  1  1  0]
 [ 4 41 54 10 18  9]
 [ 4 33 26 15 46  4]
 [ 0  6  1  1 24  8]
 [ 0  1  0  0  1  1]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 7), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5516028000001825,0.00010683843750030065,2281.15234375,0.3319546568627451,0.6597871801724502,0.6521044519320381,0.678125,0.8345166645598943,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  31   2   0]
 [  0   0  31  94   3   0]
 [  0   0   2  18  20   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7962135000000217,0.00011249656249958661,2012.0703125,0.3319546568627451,0.6620206270276396,0.6563267813267813,0.678125,0.844222453975559,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   2 103  31   0   0]
 [  0   0  29  94   5   0]
 [  0   0   1  19  20   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 9), ('min_child_weight', 7), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5334112000000459,0.00011332218749942058,2227.6171875,0.3318321078431372,0.6532531194295901,0.6404411764705882,0.671875,0.8430766266683533,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 108  28   0   0]
 [  0   0  34  86   8   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7376785999999811,0.00011667437500051392,2168.296875,0.33177083333333335,0.6651036904711668,0.6571981613158083,0.684375,0.8406451881154371,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  31   3   0]
 [  0   0  27  98   3   0]
 [  0   0   2  19  19   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,2.18991189999997,0.0004127406250006516,2170.69140625,0.33169424019607846,0.6414356619407989,0.6358674242424243,0.65,0.7798505367959532,"[[  0   0   2   0   0   0]
 [  2   0   8   1   0   0]
 [  0   0 103  32   1   0]
 [  1   4  34  81   7   1]
 [  0   0   3  12  24   1]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.1), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.6158971000004385,0.00011513031249990035,2209.94140625,0.33164828431372545,0.6579038742690059,0.643380530129672,0.678125,0.8409156076486681,"[[  0   0   2   0   0   0]
 [  0   0   8   2   1   0]
 [  0   0 107  28   1   0]
 [  0   0  32  90   6   0]
 [  0   0   3  17  20   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,2.2876365000001897,0.0004585990625002978,2173.2734375,0.33151041666666664,0.6447702341548509,0.6342409079016222,0.65625,0.7839514171191845,"[[  0   1   0   1   0   0]
 [  1   0   9   1   0   0]
 [  2   1 102  29   2   0]
 [  0   0  31  85  11   1]
 [  0   0   5  12  23   0]
 [  0   0   0   0   3   0]]"
DecisionTreeClassifier(criterion='entropy'),"OrderedDict([('criterion', 'entropy')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity')",7,0.008444999999483116,2.645812500077227e-05,2341.546875,0.3313739416221034,0.6435016491666341,0.6386344664677466,0.65,0.7271004090858262,"[[  0   1   1   0   0   0]
 [  1   1   7   2   0   0]
 [  0   2 101  30   3   0]
 [  0   2  25  87  13   1]
 [  0   0   4  15  19   2]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.01), ('max_depth', 5), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5080177999998341,0.00010340874999883453,2344.9140625,0.33125,0.6456595124398504,0.6367289498580889,0.6625,0.8344536152923258,"[[  0   1   1   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 102  33   1   0]
 [  0   0  36  88   4   0]
 [  0   0   2  16  22   0]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', None), ('max_features', 'sqrt'), ('min_samples_leaf', 1), ('min_samples_split', 10), ('n_estimators', 500)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6576178999998774,0.0014357706250002877,1747.90625,0.33120404411764703,0.6695311419337802,0.6725573562758436,0.690625,0.8587004269240482,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 106  30   0   0]
 [  0   0  30  97   1   0]
 [  0   0   2  20  18   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.9), ('eta', 0.01), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.6)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.7548979000002873,0.00011762468750049493,2136.23828125,0.33098958333333334,0.6527405321062096,0.6409891756360079,0.66875,0.846483151922555,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 102  33   1   0]
 [  0   1  28  91   8   0]
 [  0   0   2  17  21   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.1), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5200279999999111,0.00010341718750055407,2287.375,0.3307598039215686,0.6506682531701063,0.6372498831229546,0.66875,0.8215782420735398,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 105  28   3   0]
 [  0   0  34  88   6   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6800285999997868,0.00011151875000052769,2280.84375,0.3307291666666667,0.6570138610519209,0.649967365967366,0.675,0.835290382426656,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  33   1   0]
 [  0   0  30  94   4   0]
 [  0   0   2  18  20   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.025), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 25), ('min_child_weight', 7), ('subsample', 0.9)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.5598316999994495,0.00011707187499894189,2345.6875,0.3306832107843137,0.6504931718380542,0.6389762843639006,0.66875,0.8278436678301693,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 106  29   1   0]
 [  0   0  35  87   6   0]
 [  0   0   4  15  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.025), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6154844000002413,0.00011528750000024956,2353.37890625,0.33049938725490197,0.656533373026038,0.6500752558699578,0.675,0.8389789744633032,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 105  30   1   0]
 [  0   0  34  91   3   0]
 [  0   0   3  17  20   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.1), ('lambda', 0.01), ('max_depth', 7), ('min_child_weight', 3), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.54642769999964,0.0001089687499998604,2118.80078125,0.33049938725490197,0.6566728799211204,0.6429492365254322,0.675,0.8436147181474002,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 105  30   1   0]
 [  0   1  28  91   8   0]
 [  0   0   3  17  20   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.025), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.6335377000000335,0.00012041749999980311,2126.3046875,0.330422794117647,0.6561234104125815,0.6447729422894987,0.675,0.8481272272156497,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 106  28   2   0]
 [  0   0  34  90   4   0]
 [  0   0   3  17  20   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.6)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.8020616000003429,0.00011201406250052059,2348.55078125,0.33034620098039214,0.6562204196415874,0.6449346504559271,0.675,0.8476291661827228,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 107  28   1   0]
 [  0   0  33  89   6   0]
 [  0   0   1  19  20   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6837541999993846,0.00012013718749983581,2348.54296875,0.3303155637254902,0.6621907922949897,0.6571192528735632,0.68125,0.8341623758232573,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  31   1   0]
 [  0   0  30  95   3   0]
 [  0   0   2  19  19   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7937333999998373,0.00011134874999925159,2294.140625,0.3300857843137255,0.6614681267806268,0.6533325611564123,0.68125,0.8322221459919248,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 107  27   2   0]
 [  0   0  33  92   3   0]
 [  0   0   2  19  19   0]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', None), ('max_features', 'sqrt'), ('min_samples_leaf', 1), ('min_samples_split', 5), ('n_estimators', 500)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6693489000001591,0.0014543137499998693,1732.80078125,0.3300551470588235,0.6689604038386678,0.6719000857298729,0.6875,0.8701503243872111,"[[  0   1   1   0   0   0]
 [  1   0   7   3   0   0]
 [  0   0 104  32   0   0]
 [  0   0  28  98   2   0]
 [  0   0   1  21  18   0]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', None), ('max_features', 'sqrt'), ('min_samples_leaf', 2), ('min_samples_split', 2), ('n_estimators', 500)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6563754999999674,0.001452866875000325,1733.203125,0.3299785539215686,0.6668206053594558,0.6705812013348165,0.6875,0.8669502267451017,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 105  31   0   0]
 [  0   0  30  97   1   0]
 [  0   0   1  21  18   0]
 [  0   0   0   2   1   0]]"
GradientBoostingClassifier(),"OrderedDict([('loss', 'deviance')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.149583899999925,6.351562499986584e-05,2014.0546875,0.3297640931372549,0.654541605172535,0.6502628533438393,0.665625,0.8174450374193153,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  1   3 101  30   1   0]
 [  0   1  31  91   4   1]
 [  0   0   1  18  21   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.01), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.7511445999998614,0.00011109531250212968,2216.453125,0.3295343137254902,0.6468056677325014,0.6327502860854236,0.665625,0.8360390122913769,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 104  30   2   0]
 [  0   0  34  88   6   0]
 [  0   0   2  17  21   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 1.0), ('eta', 0.05), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7255767999995442,0.00011159812500238786,2292.72265625,0.32950367647058826,0.6539608067209431,0.6443850050658562,0.671875,0.8351439602138349,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  33   2   0]
 [  0   0  29  94   5   0]
 [  0   0   2  18  20   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.6757215999996333,0.00010949343750041863,2203.83984375,0.32945772058823525,0.6465734070662744,0.6323811337228202,0.665625,0.8251527522002859,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 105  30   1   0]
 [  0   0  34  87   7   0]
 [  0   0   3  16  21   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.683167499999854,0.00011268187499950955,2124.25,0.32945772058823525,0.6478325069378056,0.633239637859203,0.665625,0.8423664422415497,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 105  30   1   0]
 [  0   0  32  87   9   0]
 [  0   0   3  16  21   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', None), ('max_features', None), ('min_samples_leaf', 1), ('min_samples_split', 2), ('n_estimators', 800)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.3285381999999117,0.002259384687500443,1748.63671875,0.3293964460784314,0.6609879032258064,0.6648295454545454,0.678125,0.8697378623656205,"[[ 0  1  1  0  0  0]
 [ 1  0  7  3  0  0]
 [ 0  0 99 37  0  0]
 [ 0  0 27 99  2  0]
 [ 0  0  2 19 19  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.01), ('gamma', 0.1), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,1.0699193000000378,0.00012998031249935593,2207.265625,0.32927389705882354,0.6544318174221215,0.6413254333991661,0.671875,0.8445916780061165,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 104  29   3   0]
 [  0   1  30  91   6   0]
 [  0   0   3  17  20   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.6), ('eta', 0.025), ('gamma', 0.1), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.6)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6551173999996536,0.00011336531250094595,2236.91796875,0.32859987745098035,0.6643343643590466,0.6577729885057471,0.684375,0.8466665708748493,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 106  29   1   0]
 [  0   0  29  95   4   0]
 [  0   0   1  21  18   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.025), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 5), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.4920431999998982,0.00010300250000057076,2352.46875,0.32838541666666665,0.6452087658057806,0.6369264475743349,0.6625,0.8205840045020476,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 102  32   2   0]
 [  0   0  36  89   3   0]
 [  0   0   2  17  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.025), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.6)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7699636999996073,0.00011337093749830274,2360.59765625,0.3280484068627451,0.6507827260458839,0.6448264290673456,0.66875,0.8337445793592815,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  33   0   0]
 [  0   0  33  91   4   0]
 [  0   0   4  16  20   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 1.0), ('lambda', 1.0), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7384708999998111,0.0001113915625012396,2164.3125,0.3280484068627451,0.6507886787205727,0.640497334503003,0.66875,0.832275313381075,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 103  31   2   0]
 [  0   0  32  91   5   0]
 [  0   0   2  18  20   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.8897096999999121,0.00011393781250035317,2357.52734375,0.32797181372549017,0.6506003536583859,0.6412412412412413,0.66875,0.8322836866656494,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  31   1   0]
 [  0   0  33  90   5   0]
 [  0   0   2  18  20   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 5), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5147746000002371,0.00010962656249944303,2286.5078125,0.32778799019607846,0.6559159041415376,0.645641827612271,0.675,0.8292203967346493,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  30   3   0]
 [  0   0  30  94   4   0]
 [  0   0   3  18  19   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 9), ('min_child_weight', 5), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.5095449999998891,0.00010889031249803339,2209.61328125,0.32766544117647056,0.648436950144389,0.6364572169986183,0.66875,0.8225863045104559,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 108  28   0   0]
 [  0   0  36  86   6   0]
 [  0   0   3  17  20   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.1), ('gamma', 1.0), ('lambda', 1.0), ('max_depth', 25), ('min_child_weight', 3), ('subsample', 1.0)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7031434000000445,0.0001183568750008135,2347.6484375,0.32763480392156863,0.6559897834229735,0.6505097721491832,0.675,0.8393831254550737,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 105  30   1   0]
 [  0   0  33  92   3   0]
 [  0   0   2  19  19   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.1), ('lambda', 0.01), ('max_depth', 7), ('min_child_weight', 5), ('subsample', 1.0)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.43562569999994594,0.00010899031250062307,2346.5703125,0.3274816176470588,0.6554184217443708,0.649488287250384,0.675,0.8262554026140597,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 107  28   1   0]
 [  0   0  35  90   3   0]
 [  0   0   4  17  19   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6623634999996284,0.0004508253125010242,2170.28515625,0.32734375,0.6402304481280318,0.6315011265866429,0.653125,0.796150843841226,"[[  0   0   2   0   0   0]
 [  1   0   8   2   0   0]
 [  1   1 102  31   1   0]
 [  1   1  34  85   7   0]
 [  0   0   3  15  22   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,1.368195700000797,0.00042626499999869337,2173.5078125,0.32719195632798576,0.6034311301765636,0.6125105850314353,0.596875,0.770813461701007,"[[ 0  1  0  1  0  0]
 [ 1  1  9  0  0  0]
 [ 3  8 91 29  4  1]
 [ 0  4 33 74 16  1]
 [ 0  2  2 10 25  1]
 [ 0  0  0  1  2  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 15), ('max_features', 'sqrt'), ('min_samples_leaf', 2), ('min_samples_split', 5), ('n_estimators', 800)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.0403279999998176,0.002238492500000433,1744.8046875,0.32711397058823527,0.6657058946962431,0.6708827772348643,0.6875,0.8638449556750419,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 105  31   0   0]
 [  0   0  29  98   1   0]
 [  0   0   2  21  17   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6478060000001733,0.00043537562499977865,1469.8046875,0.3270067401960784,0.6442455577503172,0.6333824817172744,0.659375,0.7967353137433505,"[[  0   0   2   0   0   0]
 [  1   0   7   3   0   0]
 [  0   0 103  31   2   0]
 [  1   1  32  87   7   0]
 [  0   0   1  18  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.6740792000000511,0.00011197375000051579,2204.65625,0.3270067401960784,0.6418944749934538,0.6298633748801534,0.659375,0.8386633236513441,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 103  32   1   0]
 [  0   0  35  87   6   0]
 [  0   0   3  16  21   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.7), ('lambda', 1.0), ('max_depth', 9), ('min_child_weight', 7), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.5340572999994038,0.00010838687499870048,2203.859375,0.3267769607843137,0.6401710637198517,0.6247361676466154,0.659375,0.8178946683988284,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 106  28   2   0]
 [  0   0  35  84   9   0]
 [  0   0   3  16  21   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 1.0), ('eta', 0.025), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.6)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5695203000004767,0.00011607187499862448,2341.0,0.32659313725490197,0.647473926254414,0.6395709714220115,0.665625,0.8422151375406207,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 105  31   0   0]
 [  0   0  35  88   5   0]
 [  0   0   2  18  20   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.5590839999999844,0.00011144218750018809,2159.015625,0.32656250000000003,0.6532035891779252,0.6424521120008643,0.671875,0.8324233997315046,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  31   3   0]
 [  0   0  29  94   5   0]
 [  0   0   2  19  19   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.6837476000000606,0.00011045593750083071,2125.08203125,0.3264859068627451,0.6539942054023206,0.644654035235046,0.671875,0.8508692536581091,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 103  32   1   0]
 [  0   1  29  93   5   0]
 [  0   0   3  18  19   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7596057999999175,0.00012086625000051754,2174.88671875,0.32622549019607844,0.6595156173355777,0.6513040902078524,0.678125,0.8498513032115638,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 103  29   3   0]
 [  0   0  28  96   4   0]
 [  0   0   1  21  18   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.1), ('gamma', 0.5), ('lambda', 1.0), ('max_depth', 7), ('min_child_weight', 3), ('subsample', 0.6)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5094007000000147,0.00010665468749948559,2004.09765625,0.3261029411764706,0.6525676638176637,0.6448610081541883,0.671875,0.8333459204271616,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 108  28   0   0]
 [  0   0  35  88   5   0]
 [  0   0   1  20  19   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",8,2.0394084999998086,0.00040165937500091786,2341.3671875,0.3260723039215686,0.6329214828941555,0.6259188034188033,0.64375,0.7783882501002741,"[[  0   1   0   1   0   0]
 [  1   0  10   0   0   0]
 [  1   0 105  27   2   1]
 [  1   1  38  78   9   1]
 [  0   0   3  13  23   1]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6736612999998215,0.00011062437500015676,2162.48828125,0.3260110294117647,0.6396261528326745,0.6274649234693878,0.65625,0.8294761693458561,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 99 33  4  0]
 [ 0  0 32 90  6  0]
 [ 0  0  1 18 21  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 1.0), ('lambda', 1.0), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.6)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.67050990000007,0.00010818249999999807,2207.6171875,0.3257046568627451,0.6377301674300851,0.6248826766401449,0.65625,0.816226940581184,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 103  32   1   0]
 [  0   0  36  86   6   0]
 [  0   0   3  16  21   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.4234745000003386,0.00010369656250190929,2345.51953125,0.3257046568627451,0.6390511776160175,0.6326562556190888,0.65625,0.8101825939405236,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 103  32   1   0]
 [  0   0  39  86   3   0]
 [  0   0   3  16  21   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",8,1.3208826000000045,0.000446590937499991,2341.421875,0.3256600935828877,0.6007760466048332,0.6128962955832348,0.59375,0.7766276138034912,"[[ 0  1  0  1  0  0]
 [ 1  1  9  0  0  0]
 [ 1  9 94 28  4  0]
 [ 1  5 32 70 19  1]
 [ 0  2  2  9 25  2]
 [ 0  0  0  1  2  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.5), ('lambda', 1.0), ('max_depth', 7), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.5573586000000432,0.00011084718749998501,2161.62890625,0.32559742647058826,0.6448638273491215,0.6349950396825397,0.6625,0.8308666009781833,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  33   2   0]
 [  0   0  32  91   5   0]
 [  0   0   2  18  20   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.7492643000005046,0.00010890437499995187,2216.32421875,0.3255208333333333,0.6447712747070659,0.6316868279569893,0.6625,0.832034198870779,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 102  32   2   0]
 [  0   0  31  90   7   0]
 [  0   0   3  17  20   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6419974999998885,0.0004397737499999721,2148.53515625,0.3253829656862745,0.6290812003842029,0.6202952563868056,0.640625,0.7997113115735541,"[[ 0  0  2  0  0  0]
 [ 1  0  9  1  0  0]
 [ 1  1 97 35  2  0]
 [ 1  1 34 85  7  0]
 [ 0  0  0 17 23  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.5662136000000828,0.0001123662499992406,2346.1796875,0.32536764705882354,0.6442299162111149,0.6334295175023652,0.6625,0.8309070652637738,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  30   2   0]
 [  0   0  35  88   5   0]
 [  0   0   3  17  20   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 17), ('min_child_weight', 7), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.514478600000075,0.00011530031249975536,2130.3984375,0.32532169117647053,0.6374641605606881,0.6230069930069929,0.65625,0.8255694071890318,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 108  27   1   0]
 [  0   0  38  81   9   0]
 [  0   0   1  18  21   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.5095036000002438,0.0004781650000012405,2327.66015625,0.32509748217468803,0.5286734253065775,0.5733068981230744,0.503125,0.7691981744698239,"[[ 0  1  1  0  0  0]
 [ 2  4  4  0  1  0]
 [ 4 20 76 33  3  0]
 [ 1 11 30 58 26  2]
 [ 0  3  0 11 23  3]
 [ 0  0  0  0  3  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.05), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 1), ('subsample', 0.6)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5598199000000932,0.00010888687500028027,1995.171875,0.3248468137254902,0.6555533689387437,0.6516602956799746,0.675,0.8387322567388698,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  31   1   0]
 [  0   0  31  94   3   0]
 [  0   0   1  21  18   0]
 [  0   0   0   2   1   0]]"
DecisionTreeClassifier(criterion='entropy'),"OrderedDict([('criterion', 'entropy')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.010487700000112454,2.711312499954488e-05,1602.84765625,0.3247103386809269,0.6276923413184125,0.6223009195665445,0.634375,0.713753432599036,"[[  0   1   1   0   0   0]
 [  1   1   5   4   0   0]
 [  0   2 103  27   3   1]
 [  0   4  30  80  13   1]
 [  0   0   4  17  19   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.7774131999995006,0.00011047593749822227,2217.3125,0.32469362745098035,0.6538628038628039,0.6441264367816093,0.675,0.8275447668871063,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 106  28   2   0]
 [  0   0  32  92   4   0]
 [  0   0   3  19  18   0]
 [  0   0   0   2   1   0]]"
DecisionTreeClassifier(criterion='entropy'),"OrderedDict([('criterion', 'gini')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.006842699999879187,2.6061249999997927e-05,1603.0546875,0.3234695298573975,0.614782523510972,0.6158545882658775,0.615625,0.7079616751751491,"[[ 0  1  1  0  0  0]
 [ 0  1  4  3  2  1]
 [ 2  3 92 31  8  0]
 [ 2  1 27 83 15  0]
 [ 0  1  4 14 21  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.1), ('gamma', 0.7), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.6)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5365583999998762,0.00010829906250009458,1987.07421875,0.3232383578431372,0.6516839992702061,0.6465822603605825,0.671875,0.8361316651447825,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 108  27   1   0]
 [  0   0  36  89   3   0]
 [  0   0   1  21  18   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.6), ('eta', 0.025), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 25), ('min_child_weight', 3), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.641443800000161,0.00011154031249986929,2165.75,0.3231311274509804,0.6575053291839653,0.6480386484610043,0.678125,0.8283214951417802,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 106  29   1   0]
 [  0   0  28  94   6   0]
 [  0   0   2  21  17   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 7), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.603733299999476,0.00011004250000041793,2359.4453125,0.3229166666666667,0.6386830266904069,0.6313076923076923,0.65625,0.8196720685582669,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 102  33   1   0]
 [  0   0  36  88   4   0]
 [  0   0   2  18  20   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",8,0.4047971999998481,0.0004593431250015101,2341.25,0.32275373217468806,0.5260114454269209,0.586670266454104,0.490625,0.7806354287892506,"[[ 0  2  0  0  0  0]
 [ 2  4  5  0  0  0]
 [ 9 13 76 33  2  3]
 [ 8  6 28 53 28  5]
 [ 0  4  0  5 24  7]
 [ 0  0  0  0  3  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.7), ('lambda', 0.01), ('max_depth', 5), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.43529709999984334,0.00010542500000099153,2202.30078125,0.3225796568627451,0.6427285804591791,0.6303616266284051,0.6625,0.8024329949125237,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 103  31   2   0]
 [  0   0  32  90   6   0]
 [  0   0   3  18  19   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.42942489999995814,0.00010281968750049941,1996.41796875,0.32234987745098037,0.6433730735074416,0.6360048735205385,0.6625,0.828587395791188,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 106  28   2   0]
 [  0   0  38  87   3   0]
 [  0   0   1  20  19   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.025), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6792803000003005,0.00010916781250074337,2155.66015625,0.32231924019607844,0.6492754699488644,0.6382911095472672,0.66875,0.8398370575068344,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  30   3   0]
 [  0   0  30  93   5   0]
 [  0   0   3  19  18   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.015), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.5968056000001525,0.00011297124999885,2359.17578125,0.3222426470588235,0.6491010772826227,0.6424490898225613,0.66875,0.8285502074364757,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 104  30   2   0]
 [  0   0  33  92   3   0]
 [  0   0   2  20  18   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.01), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 7), ('subsample', 0.6)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.46024529999999686,0.00010763562499960244,1985.265625,0.3221660539215686,0.6495066558401615,0.6477153175139752,0.66875,0.8330081698757136,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 105  31   0   0]
 [  0   0  34  91   3   0]
 [  0   0   2  20  18   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.5625858000003063,0.00011294218750208529,2345.16796875,0.32182904411764707,0.6540185160420678,0.6497298004997815,0.675,0.8292520583983229,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 106  29   1   0]
 [  0   0  32  93   3   0]
 [  0   0   4  19  17   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.7), ('lambda', 0.01), ('max_depth', 5), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.443179599999894,0.00010188156250023894,2279.89453125,0.3215379901960784,0.6353363391376451,0.6263002993595099,0.653125,0.8075008271142069,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  31   2   0]
 [  0   0  38  86   4   0]
 [  0   0   2  18  20   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.6481094000000667,0.0005433453124993548,2327.4453125,0.32145814765300057,0.37432598948296325,0.5868620569547991,0.3,0.7303919996234434,"[[ 0  2  0  0  0  0]
 [ 3  5  3  0  0  0]
 [13 37 55 13  4 14]
 [16 26 22 26 13 25]
 [ 1  6  0  2  8 23]
 [ 0  0  0  0  1  2]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.5688926000002539,0.00011146312500045496,2201.21484375,0.3213082107843137,0.6343687944314993,0.6209423640875255,0.653125,0.8281622058009596,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 106  28   2   0]
 [  0   0  38  83   7   0]
 [  0   0   3  17  20   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.6892286000002059,0.00011658000000238644,2203.484375,0.32112438725490194,0.639410570346849,0.6258417902701432,0.659375,0.8332171573969761,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 105  29   2   0]
 [  0   0  34  87   7   0]
 [  0   0   3  18  19   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 5), ('min_child_weight', 7), ('subsample', 0.8)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.41344850000041333,0.00010234718749870808,2338.33203125,0.3208946078431372,0.63977667173968,0.6325681341719078,0.659375,0.8201407109207624,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 108  28   0   0]
 [  0   0  39  84   5   0]
 [  0   0   3  18  19   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.9240205000005517,0.0001199140625004702,2360.3671875,0.32068014705882353,0.6511875938092075,0.6472892584469766,0.671875,0.8304513365833479,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 104  31   1   0]
 [  0   0  31  94   3   0]
 [  0   0   4  19  17   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.42541929999970307,0.00010249562500064258,2338.9375,0.3200827205882353,0.6318004872187383,0.6245164809405315,0.65,0.8236106755086785,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 105  31   0   0]
 [  0   0  41  83   4   0]
 [  0   0   2  18  20   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.6545385999997961,0.00011530124999978853,2203.97265625,0.32005208333333335,0.6379212705891151,0.6247688512024528,0.65625,0.82705245344739,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 102  32   2   0]
 [  0   0  32  89   7   0]
 [  0   0   5  16  19   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.4337304000000586,0.00010242218750136089,2279.31640625,0.3198988970588235,0.6375535424481868,0.6288064713064714,0.65625,0.8117371313059543,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 104  31   1   0]
 [  0   0  36  87   5   0]
 [  0   0   3  18  19   0]
 [  0   0   0   2   1   0]]"
GradientBoostingClassifier(),"OrderedDict([('loss', 'deviance')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,1.1533580999998776,9.043593749993306e-05,2157.55859375,0.3198988970588235,0.6406577915552977,0.6344210978644491,0.65625,0.8063145471019009,"[[  0   0   1   0   1   0]
 [  0   0   8   3   0   0]
 [  2   1 104  28   1   0]
 [  0   1  36  87   4   0]
 [  0   0   2  19  19   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.693833999999697,0.0001118528124990803,2161.73828125,0.3198682598039216,0.6437301677027459,0.6327897669706181,0.6625,0.8338869080791351,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 101  32   3   0]
 [  0   0  29  93   6   0]
 [  0   0   3  19  18   0]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 25), ('max_features', None), ('min_samples_leaf', 5), ('min_samples_split', 5), ('n_estimators', 800)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.18929090000006,0.002180524374999493,1725.66796875,0.3194546568627451,0.6478129492934956,0.6497907496331866,0.66875,0.8395143177001219,"[[  0   0   1   1   0   0]
 [  0   0   7   4   0   0]
 [  0   0 103  32   1   0]
 [  0   0  33  94   1   0]
 [  0   0   3  20  17   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.46770569999989675,0.00046726500000033867,2323.578125,0.3189366087344028,0.4947988822530361,0.5824564389512232,0.440625,0.7156811847223002,"[[ 1  0  0  0  0  1]
 [ 4  2  4  1  0  0]
 [10 17 77 20  7  5]
 [ 8 15 34 50 11 10]
 [ 0  6  1  7 11 15]
 [ 0  0  1  0  2  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.1), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 0.6)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7757865000003221,0.00010965312499990886,2294.1328125,0.3184895833333333,0.6403184659863106,0.632517006802721,0.659375,0.8285658014981625,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  32   2   0]
 [  0   0  33  91   4   0]
 [  0   0   3  19  18   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.5675888000005216,0.00011049781249994339,2201.40234375,0.3182598039215686,0.6398498260352964,0.6285085247287585,0.659375,0.8337087692269677,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 105  30   1   0]
 [  0   0  34  88   6   0]
 [  0   0   3  19  18   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.6), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 5), ('subsample', 0.6)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.3932683000000452,0.00010163875000017697,1986.65625,0.3181832107843137,0.6398549836601306,0.6332648669796557,0.659375,0.8142868814406979,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 106  30   0   0]
 [  0   0  36  87   5   0]
 [  0   0   1  21  18   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6725808000001052,0.00012079656249994742,2161.37109375,0.31809129901960786,0.6283278676963222,0.6173974245985115,0.64375,0.8320827861914791,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 97 35  3  0]
 [ 0  0 31 89  8  0]
 [ 0  0  2 18 20  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.7), ('eta', 0.1), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 7), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.4496486000000459,0.00010543281250008363,1982.95703125,0.3178462009803921,0.6450189753320682,0.6410353535353536,0.665625,0.8272524466518494,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 107  29   0   0]
 [  0   0  35  89   4   0]
 [  0   0   2  21  17   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 5), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.49477870000009716,0.0001032006249999995,2209.05859375,0.31778492647058826,0.6263322533267811,0.6133367261592328,0.64375,0.8111197956182592,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  33   2   0]
 [  0   1  35  85   7   0]
 [  0   0   3  17  20   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.4196010000005117,0.00010315812500039101,2202.87890625,0.3177083333333333,0.6260486737763193,0.6147957043376121,0.64375,0.8059820526788315,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  32   2   0]
 [  0   0  39  84   5   0]
 [  0   0   3  17  20   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.5465460999998868,0.0004613284374997306,2211.05859375,0.3169911430481283,0.5561516866239317,0.587068114911473,0.5375,0.7732291153907443,"[[ 0  1  1  0  0  0]
 [ 1  2  8  0  0  0]
 [ 2 11 82 33  6  2]
 [ 1  7 28 63 25  4]
 [ 0  3  2  7 25  3]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.4769149000003381,0.0004823606249999557,2327.3984375,0.31651533719548425,0.4306175319919827,0.5643217893217893,0.371875,0.7490247773266263,"[[ 0  2  0  0  0  0]
 [ 2  5  4  0  0  0]
 [23 21 64 21  5  2]
 [17 13 31 34 22 11]
 [ 1  4  0  1 15 19]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.7420951000003697,0.0005191521875005378,2211.11328125,0.3161764705882353,0.25105127360562146,0.1868084104145255,0.3875,0.3405968645681009,"[[  2   0   0   0   0   0]
 [  5   0   6   0   0   0]
 [ 14   0 122   0   0   0]
 [ 18   0 110   0   0   0]
 [  3   0  37   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,1.3494402999995145,0.0004529621875008161,2327.49609375,0.31611798128342244,0.5976664499795151,0.6249089543203384,0.578125,0.7726738911313358,"[[ 0  1  1  0  0  0]
 [ 2  2  6  0  1  0]
 [ 1 15 90 23  7  0]
 [ 0  7 24 74 23  0]
 [ 0  3  2 14 19  2]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.4218167999997604,0.0004836128124992456,2173.4140625,0.31575172682709446,0.5339009577621485,0.5915831550045089,0.5,0.7844209369373119,"[[ 0  1  1  0  0  0]
 [ 2  3  5  1  0  0]
 [10 13 75 30  6  2]
 [ 5  8 29 57 25  4]
 [ 0  3  0  5 25  7]
 [ 0  0  0  0  3  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 30), ('max_features', None), ('min_samples_leaf', 5), ('min_samples_split', 10), ('n_estimators', 120)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.19435810000004494,0.0004326374999997995,1719.0546875,0.3154411764705882,0.6440341718909242,0.6484759577531063,0.665625,0.8385817230039334,"[[  0   0   1   1   0   0]
 [  0   0   7   4   0   0]
 [  0   0 101  34   1   0]
 [  0   0  31  96   1   0]
 [  0   0   3  21  16   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.534044800000629,0.00046773218749933675,2164.04296875,0.31542864304812834,0.5615862498187123,0.5936317920585162,0.540625,0.7727694811217981,"[[ 0  0  2  0  0  0]
 [ 3  2  5  1  0  0]
 [ 1 16 82 31  6  0]
 [ 2 11 26 65 22  2]
 [ 0  1  1 13 24  1]
 [ 0  0  0  0  3  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.7), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 7), ('subsample', 0.7)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.4676207999991675,0.0001046959375003098,2345.38671875,0.3153186274509804,0.6377382803018689,0.6288322180279112,0.659375,0.8149499562622621,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 106  28   2   0]
 [  0   0  36  88   4   0]
 [  0   0   3  20  17   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.7122984999996333,0.0004941831249993811,2325.8125,0.3151041666666667,0.6201877583263976,0.6050153856445247,0.6375,0.7873361389861717,"[[  0   0   2   0   0   0]
 [  1   0  10   0   0   0]
 [  0   0 102  29   5   0]
 [  0   0  37  82   9   0]
 [  0   0   0  20  20   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.1), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 0.6)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.8253439999998591,0.00010995062500001041,2229.328125,0.3150582107843137,0.64442459585148,0.6392040301436275,0.665625,0.8423039717265061,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 106  30   0   0]
 [  0   0  32  91   5   0]
 [  0   0   2  22  16   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.5), ('lambda', 1.0), ('max_depth', 9), ('min_child_weight', 5), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.8206635000005917,0.0001232525000006035,2202.7265625,0.31495098039215685,0.6183380166256879,0.6038825757575758,0.6375,0.8152491185353578,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 104  30   2   0]
 [  0   0  40  80   8   0]
 [  0   0   3  17  20   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.8194031999996696,0.00011321687500043254,2176.3515625,0.31495098039215685,0.6496993798450579,0.6461185588604944,0.671875,0.8271685621730749,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  31   1   0]
 [  0   0  28  96   4   0]
 [  0   0   2  23  15   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.6527516999999534,0.0004376937499998235,2211.03515625,0.3149050245098039,0.6147022850424213,0.6097652125923794,0.628125,0.7823172712865105,"[[ 0  0  2  0  0  0]
 [ 1  0  9  1  0  0]
 [ 1  1 91 42  1  0]
 [ 0  0 34 89  5  0]
 [ 0  0  2 17 21  0]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,2.157817100000102,0.00043284343749974143,2326.0703125,0.314797794117647,0.6265529768676525,0.6208053800772685,0.6375,0.7851326226262126,"[[  0   1   0   1   0   0]
 [  2   0   9   0   0   0]
 [  1   0 106  26   3   0]
 [  2   1  40  78   7   0]
 [  0   0   2  16  20   2]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,1.4085377999999764,0.00042780625000204964,2163.96875,0.314477495543672,0.5712776860749369,0.5802145594752696,0.565625,0.7672019085563705,"[[ 0  1  1  0  0  0]
 [ 3  1  6  1  0  0]
 [ 1 10 87 33  5  0]
 [ 0  5 38 68 17  0]
 [ 0  1  1 12 25  1]
 [ 0  0  1  0  2  0]]"
DecisionTreeClassifier(criterion='entropy'),"OrderedDict([('criterion', 'gini')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity')",7,0.005506499999683001,2.6251562499624014e-05,2341.3359375,0.3143243092691622,0.5973009889692218,0.5974543579422177,0.6,0.6919912815112205,"[[ 0  2  0  0  0  0]
 [ 1  1  6  2  1  0]
 [ 0  2 89 35  9  1]
 [ 2  1 29 82 14  0]
 [ 0  0  2 18 20  0]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,1.46803460000001,0.0004303962500003422,2075.37890625,0.3140332553475936,0.5858856529114578,0.5963455877569607,0.578125,0.7683090007001241,"[[ 0  0  2  0  0  0]
 [ 1  1  7  1  1  0]
 [ 3  9 86 31  6  1]
 [ 1  1 30 75 19  2]
 [ 0  1  1 13 23  2]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 5), ('min_child_weight', 7), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.4110443000008672,0.00010156062500072948,2202.96875,0.3131280637254902,0.6266431545394927,0.6137469414643328,0.646875,0.8013413565551673,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  30   2   0]
 [  0   0  37  85   6   0]
 [  0   0   3  19  18   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",8,0.5792241999997714,0.0004189571875002684,2341.484375,0.31306678921568626,0.6117972625652159,0.5999816840455259,0.625,0.7831171937916537,"[[ 0  1  1  0  0  0]
 [ 1  0 10  0  0  0]
 [ 1  0 98 33  4  0]
 [ 1  0 37 81  9  0]
 [ 0  0  0 19 21  0]
 [ 0  0  0  1  2  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 25), ('max_features', None), ('min_samples_leaf', 5), ('min_samples_split', 5), ('n_estimators', 500)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7407559000000674,0.0014347415625003634,1720.95703125,0.31276041666666665,0.6379868214318026,0.6417195586368518,0.659375,0.8420627953469882,"[[  0   0   1   1   0   0]
 [  0   0   7   4   0   0]
 [  0   0 102  33   1   0]
 [  0   0  34  93   1   0]
 [  0   0   3  21  16   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.7926099999999678,0.00011050062500004288,2137.8515625,0.3126072303921568,0.6376740686465683,0.6266262180547895,0.659375,0.8377550511353175,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  31   1   0]
 [  0   0  31  91   6   0]
 [  0   0   2  22  16   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.025), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 7), ('subsample', 0.6)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.4441221000006408,0.00010559656249995442,2279.8046875,0.3123927696078432,0.6202062980669301,0.610048185941043,0.6375,0.8106267610360595,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 100  35   1   0]
 [  0   0  36  85   7   0]
 [  0   0   3  18  19   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.5266589999991993,0.00047602343749986176,2323.6171875,0.3122706847890671,0.31179799650481266,0.5108030167455224,0.259375,0.6851372833403566,"[[ 1  0  0  0  0  1]
 [ 2  4  4  0  1  0]
 [28 22 61 10  3 12]
 [23 34 26 10  8 27]
 [ 3  2  0  1  6 28]
 [ 0  1  0  1  0  1]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.4288558999996894,0.00010425437499890222,2122.94140625,0.3120863970588235,0.6177681841967557,0.6043680475642501,0.6375,0.8233614896769483,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  30   2   0]
 [  0   0  40  81   7   0]
 [  0   0   4  17  19   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7369641000000229,0.0005445978125003137,1469.6484375,0.3112745098039216,0.25118103448275864,0.1901853354978355,0.375,0.3043968997084786,"[[  2   0   0   0   0   0]
 [  6   0   5   0   0   0]
 [ 18   0 118   0   0   0]
 [ 24   0 104   0   0   0]
 [  6   0  34   0   0   0]
 [  0   0   3   0   0   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 25), ('max_features', 'log2'), ('min_samples_leaf', 1), ('min_samples_split', 15), ('n_estimators', 300)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.41071450000004006,0.0008481971874999772,1750.2109375,0.3107077205882353,0.6443998921760227,0.6597530545517123,0.66875,0.8472196764494602,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 105  31   0   0]
 [  0   0  33  95   0   0]
 [  0   0   2  24  14   0]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 8), ('max_features', None), ('min_samples_leaf', 1), ('min_samples_split', 5), ('n_estimators', 1200)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.7061433000001216,0.0031887949999998,1731.55859375,0.31046262254901963,0.6334141673805014,0.6434146809578646,0.653125,0.835460518121873,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 98 38  0  0]
 [ 0  0 32 95  1  0]
 [ 0  0  3 21 16  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.42114230000015596,0.00010360218749951854,2160.46875,0.3103400735294118,0.6275937971193446,0.6225808020647211,0.646875,0.8119175590246129,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 103  32   1   0]
 [  0   0  37  87   4   0]
 [  0   0   2  21  17   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.44664659999989453,0.00010418906249896054,2122.7421875,0.3100337009803921,0.6252112150139619,0.6115232066014091,0.646875,0.820224834180453,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 107  27   2   0]
 [  0   0  38  83   7   0]
 [  0   0   4  19  17   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",8,0.453372699999818,0.00047089343750030823,2340.94921875,0.30979045974450387,0.41504317980920247,0.5608898308089403,0.371875,0.7421477120263209,"[[ 0  2  0  0  0  0]
 [ 2  5  3  1  0  0]
 [15 15 77 15  9  5]
 [14 18 33 23 28 12]
 [ 1  4  0  0 13 22]
 [ 0  0  0  0  2  1]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.46750969999993686,0.0001026143750010533,2161.78125,0.30926776960784313,0.624730621383213,0.6181978534657107,0.64375,0.8102356046018592,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 100  34   2   0]
 [  0   0  35  89   4   0]
 [  0   0   2  21  17   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6577277000001231,0.0004315146875001119,2075.546875,0.30874693627450983,0.6098286256180993,0.5999856851393666,0.621875,0.7801763059409736,"[[  0   0   2   0   0   0]
 [  1   0   9   1   0   0]
 [  3   0 100  30   3   0]
 [  1   1  37  79  10   0]
 [  0   0   1  19  20   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,2.127193599999373,0.0004082062500003758,2298.06640625,0.30778186274509806,0.6080417735661674,0.6060498176392574,0.6125,0.7785646365062183,"[[ 0  0  2  0  0  0]
 [ 2  0  7  2  0  0]
 [ 0  2 99 34  1  0]
 [ 3  4 35 76  9  1]
 [ 0  0  2 16 21  1]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,2.197182700000667,0.00041877906249965235,2327.69921875,0.3076593137254902,0.6253185027899856,0.6143888888888889,0.640625,0.7789217078513446,"[[  0   0   1   1   0   0]
 [  2   0   8   0   1   0]
 [  1   0 104  31   0   0]
 [  0   2  33  84   9   0]
 [  0   0   4  19  17   0]
 [  0   0   0   0   3   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.6), ('eta', 0.025), ('gamma', 0.7), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.5607243999997991,0.00011150874999970029,2117.38671875,0.3076593137254902,0.6199677942575523,0.6087437562437563,0.640625,0.8289844708273941,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 104  32   0   0]
 [  0   0  37  84   7   0]
 [  0   0   4  19  17   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.39291900000080204,0.0004639984375018003,2326.16796875,0.30706745766488414,0.5087233989834615,0.5826222053808261,0.465625,0.7813448172939378,"[[ 0  1  1  0  0  0]
 [ 3  4  4  0  0  0]
 [15 14 70 31  5  1]
 [10  6 25 53 28  6]
 [ 0  4  0  7 22  7]
 [ 0  0  0  0  3  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', None), ('max_features', 'sqrt'), ('min_samples_leaf', 5), ('min_samples_split', 2), ('n_estimators', 500)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6593709000001127,0.0014692006250001555,1722.55078125,0.3068780637254902,0.6354206963249516,0.6456001082251083,0.659375,0.8406250051049025,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 104  31   1   0]
 [  0   0  35  93   0   0]
 [  0   0   2  24  14   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 5), ('min_child_weight', 7), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.4175875000000815,0.00010390937500091014,2161.7734375,0.3066636029411765,0.6188288813659839,0.6108503401360543,0.6375,0.8092666729747832,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 100  34   2   0]
 [  0   0  36  87   5   0]
 [  0   0   3  20  17   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.753349800000251,0.0005301996875004989,2171.03125,0.30637254901960786,0.24819922128487998,0.19019230769230772,0.3625,0.3374015155340783,"[[  2   0   0   0   0   0]
 [  6   0   5   0   0   0]
 [ 22   0 114   0   0   0]
 [ 27   0 101   0   0   0]
 [  8   0  32   0   0   0]
 [  0   0   3   0   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.01), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.6)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6599685000001045,0.00011448937499949352,2166.3828125,0.30606617647058826,0.6293674919861216,0.6249353599603487,0.65,0.8263100369850035,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  35   0   0]
 [  0   0  30  92   6   0]
 [  0   0   2  23  15   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.6606591999998273,0.00044013031250074165,2173.4609375,0.3060355392156863,0.606164471570832,0.5923669467787114,0.621875,0.7766772878966799,"[[ 0  0  2  0  0  0]
 [ 1  0 10  0  0  0]
 [ 0  0 98 33  5  0]
 [ 1  0 36 82  9  0]
 [ 0  0  1 20 19  0]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.7360570999999254,0.0005343865625007993,2164.4375,0.30514705882352944,0.2429537308569567,0.18491987179487182,0.359375,0.28476115045879047,"[[  2   0   0   0   0   0]
 [  6   0   5   0   0   0]
 [ 23   0 113   0   0   0]
 [ 25   0 103   0   0   0]
 [  4   0  36   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.6135607000005621,0.00043158093749866565,2327.41796875,0.3051011029411765,0.6208009093380118,0.6112925170068026,0.640625,0.7777532239632643,"[[  0   0   2   0   0   0]
 [  1   0   9   0   1   0]
 [  0   0 100  36   0   0]
 [  0   0  33  89   6   0]
 [  0   0   3  21  16   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.6172386999996888,0.00042496062499992605,2298.13671875,0.3041360294117647,0.6148128467277404,0.6071570800479634,0.63125,0.7975240102229088,"[[ 0  0  2  0  0  0]
 [ 2  0  8  1  0  0]
 [ 0  1 99 34  2  0]
 [ 0  0 36 86  6  0]
 [ 0  0  1 22 17  0]
 [ 0  0  0  2  1  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 20), ('max_features', 'log2'), ('min_samples_leaf', 5), ('min_samples_split', 15), ('n_estimators', 120)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.1579613999999765,0.00044101031250036725,1722.36328125,0.30412071078431374,0.6289965163918311,0.6341268783014513,0.653125,0.8314937878866422,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 106  30   0   0]
 [  0   0  37  89   2   0]
 [  0   0   2  24  14   0]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 8), ('max_features', None), ('min_samples_leaf', 2), ('min_samples_split', 15), ('n_estimators', 1200)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.670859500000006,0.003200556250000375,1722.3125,0.3041053921568628,0.61909454990742,0.6344082850187178,0.6375,0.8237959384542537,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 96 40  0  0]
 [ 0  0 36 92  0  0]
 [ 0  0  2 22 16  0]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.37315570000009757,0.00045091249999984484,2170.42578125,0.3034620098039216,0.6226312778454393,0.6189837008628956,0.64375,0.7953910382197656,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   1 101  33   1   0]
 [  0   0  35  90   3   0]
 [  0   0   1  24  15   0]
 [  0   0   0   1   2   0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 5), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.0028427000006558956,0.0003551371875005316,2167.453125,0.301992814171123,0.5921883614973661,0.5898219030467643,0.60625,0.7715718470588355,"[[ 0  1  0  1  0  0]
 [ 0  1  8  2  0  0]
 [ 0  2 97 36  1  0]
 [ 0  0 38 81  9  0]
 [ 0  0  2 23 15  0]
 [ 0  0  0  3  0  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 1.0), ('eta', 0.025), ('gamma', 0.7), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 7), ('subsample', 0.6)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.46622359999992113,0.00010904187499960472,2153.8359375,0.3014246323529412,0.6124635167310991,0.6063299733038755,0.63125,0.8072210487059952,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 97 37  2  0]
 [ 0  0 34 89  5  0]
 [ 0  0  2 22 16  0]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.37223260000018854,0.0004481537499998467,2148.3203125,0.30134803921568626,0.6122359490581866,0.6092956462932876,0.63125,0.7983904102646056,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  1 98 36  1  0]
 [ 0  0 36 88  4  0]
 [ 0  0  0 24 16  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.6), ('eta', 0.025), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 5), ('min_child_weight', 3), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.42651740000019345,0.00010153093749920572,2202.16796875,0.3008884803921568,0.6096334971334971,0.6007598039215686,0.63125,0.7976106797024343,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  30   2   0]
 [  0   0  42  82   4   0]
 [  0   0   4  20  16   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.7244523999997909,0.0005249915625000767,2298.05859375,0.3002450980392157,0.24037312895797353,0.18547857142857144,0.346875,0.32714184119567546,"[[  2   0   0   0   0   0]
 [  7   0   4   0   0   0]
 [ 27   0 109   0   0   0]
 [ 29   0  99   0   0   0]
 [  5   0  35   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.6877027999998973,0.0005407950000005712,2327.65625,0.29996750594177063,0.3263370092919506,0.6144095144212625,0.25625,0.6955478437142883,"[[ 0  2  0  0  0  0]
 [ 2  6  2  0  1  0]
 [16 44 54  7  2 13]
 [17 38 18 18  5 32]
 [ 1  8  0  0  2 29]
 [ 0  0  0  1  0  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,2.423554999999851,0.00040827125000078015,2210.609375,0.2998621323529412,0.5909414185296187,0.5852020202020202,0.6,0.7603072039114948,"[[ 0  0  1  1  0  0]
 [ 1  0  8  2  0  0]
 [ 1  2 97 32  3  1]
 [ 0  3 42 75  8  0]
 [ 0  0  5 14 20  1]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,2.232742899999721,0.00042076406249975663,2163.62109375,0.29960171568627453,0.5974285685171599,0.5911682298640437,0.60625,0.7712857464101621,"[[ 0  1  1  0  0  0]
 [ 3  0  6  2  0  0]
 [ 1  1 97 34  3  0]
 [ 0  3 40 78  7  0]
 [ 0  0  2 19 19  0]
 [ 0  0  0  0  3  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.025), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 7), ('subsample', 0.6)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.4329370000000381,0.0001050596875003862,2161.828125,0.2994791666666667,0.6137655531816115,0.6061381774865992,0.634375,0.802242035976348,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  32   2   0]
 [  0   0  37  86   5   0]
 [  0   0   2  23  15   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.3637079000000085,0.00044568687499975114,2163.8359375,0.2993719362745098,0.6188553117886115,0.6264669749963867,0.640625,0.7859486311193227,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   1 100  35   0   0]
 [  0   0  36  91   1   0]
 [  0   0   1  25  14   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 20), ('max_features', 'sqrt'), ('min_samples_leaf', 10), ('min_samples_split', 5), ('n_estimators', 500)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6035503999999037,0.0013994693749999954,1724.84765625,0.29888174019607844,0.6221586977425501,0.6342352511179911,0.646875,0.814443334751196,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  32   1   0]
 [  0   0  37  91   0   0]
 [  0   0   2  25  13   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 3), ('min_child_weight', 5), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.3327251000000615,9.635593750090266e-05,2122.703125,0.29874387254901963,0.6054574008637613,0.602056993778848,0.625,0.7929636377709037,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 98 37  1  0]
 [ 0  0 39 86  3  0]
 [ 0  0  1 23 16  0]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7542384999997012,0.0005527334375003079,2148.515625,0.2985294117647059,0.23805803571428572,0.23708964646464645,0.296875,0.5866357022724786,"[[ 1  0  1  0  0  0]
 [ 0  0  7  0  4  0]
 [ 1  0 60  0 75  0]
 [ 0  0 45  0 83  0]
 [ 0  0  6  0 34  0]
 [ 0  0  1  0  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.36892679999982647,0.00044949312500008887,1469.8203125,0.298483455882353,0.6131138235913431,0.6122886830000327,0.63125,0.801275877559997,"[[ 0  0  2  0  0  0]
 [ 1  0  9  1  0  0]
 [ 0  1 98 36  1  0]
 [ 0  1 35 89  3  0]
 [ 0  0  1 24 15  0]
 [ 0  0  0  1  2  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 15), ('max_features', 'sqrt'), ('min_samples_leaf', 10), ('min_samples_split', 15), ('n_estimators', 800)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.9568047999998726,0.0021821715624994907,1718.9921875,0.29839154411764707,0.6262257667120534,0.6455034608854644,0.653125,0.816774320036893,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 106  30   0   0]
 [  0   0  37  91   0   0]
 [  0   0   2  26  12   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.6525818000000072,0.00046924625000031026,2323.61328125,0.2977370209447415,0.41647471715054457,0.5551036953242836,0.346875,0.6987177313038857,"[[ 1  0  0  0  0  1]
 [ 3  3  4  1  0  0]
 [14 28 62 20  5  7]
 [16 28 27 33 12 12]
 [ 0  6  0  4 12 18]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.4674300000006042,0.0005044731249995493,2325.90625,0.29765671420083184,0.4149561800652732,0.5434510281385281,0.36875,0.7426580245964938,"[[ 0  2  0  0  0  0]
 [ 3  4  4  0  0  0]
 [23 12 75 18  5  3]
 [20 14 33 24 27 10]
 [ 2  3  0  2 14 19]
 [ 0  0  0  0  2  1]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 20), ('max_features', 'sqrt'), ('min_samples_leaf', 10), ('min_samples_split', 10), ('n_estimators', 800)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.963321599999972,0.002146798437500053,1718.09765625,0.2973192401960784,0.6237752862827342,0.6441606238771844,0.65,0.8151639436627865,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  33   0   0]
 [  0   0  35  93   0   0]
 [  0   0   2  26  12   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.36104440000008253,0.00045047093749985836,2210.60546875,0.2970741421568628,0.6122033407756554,0.617046165884194,0.634375,0.7813586512277393,"[[ 0  0  2  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 96 39  1  0]
 [ 0  0 34 93  1  0]
 [ 0  0  1 25 14  0]
 [ 0  0  0  1  2  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 9), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.0028680000000349537,0.0002926765625005601,1453.11328125,0.29689031862745097,0.5909728858098424,0.5814164272030651,0.60625,0.7623050406527321,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 95 39  1  0]
 [ 0  0 38 81  9  0]
 [ 0  0  4 18 18  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 3), ('min_child_weight', 5), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.3308177000001251,9.627031250047935e-05,1994.7109375,0.29653799019607846,0.6125203697935712,0.6293400670481476,0.634375,0.8003222880448483,"[[  0   1   1   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 103  33   0   0]
 [  0   0  42  86   0   0]
 [  0   0   2  24  14   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 3), ('min_child_weight', 5), ('subsample', 0.7)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.33471779999945284,9.653124999999818e-05,2338.30859375,0.29653799019607846,0.6125105853051058,0.6239975798011512,0.634375,0.7973604996544412,"[[  0   1   1   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 103  33   0   0]
 [  0   0  41  86   1   0]
 [  0   0   1  25  14   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.4109362000008332,0.000528073437499188,2327.55859375,0.29620655080213903,0.4983237644939772,0.5742040503069915,0.453125,0.7776774373888278,"[[ 0  2  0  0  0  0]
 [ 2  4  5  0  0  0]
 [16 16 69 28  4  3]
 [ 7  8 28 52 27  6]
 [ 0  4  0  8 20  8]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.349392799999805,0.00044680843750199983,2298.2578125,0.2960324754901961,0.6044815650818002,0.6048067296996663,0.625,0.7867497687674723,"[[ 0  0  2  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 96 39  1  0]
 [ 0  0 36 89  3  0]
 [ 0  0  2 23 15  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 3), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.002753599999778089,0.0003303453124999578,2167.38671875,0.2953751671122995,0.5901574147309019,0.5869843599288643,0.596875,0.7591650306968158,"[[ 0  0  1  1  0  0]
 [ 1  1  6  3  0  0]
 [ 1  6 95 28  5  1]
 [ 1  1 35 81 10  0]
 [ 0  0  5 20 14  1]
 [ 0  0  1  2  0  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', None), ('max_features', 'sqrt'), ('min_samples_leaf', 10), ('min_samples_split', 2), ('n_estimators', 500)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6239310999999361,0.0013967571874999862,1750.37890625,0.29463848039215684,0.6175706646294881,0.6257309941520468,0.64375,0.8163344672709403,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  31   1   0]
 [  0   0  37  90   1   0]
 [  0   0   2  26  12   0]
 [  0   0   0   2   1   0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 13), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.0028437999999368913,0.00038456406250020336,2159.3671875,0.294515931372549,0.5858135297538283,0.5804177710463209,0.6,0.750383563075717,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 92 42  1  0]
 [ 0  0 39 82  7  0]
 [ 0  0  1 21 18  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 3), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.002777599999717495,0.0002774831250007992,2167.3515625,0.2937667112299465,0.5850062092086049,0.5795104396615158,0.59375,0.7591373686332741,"[[ 0  0  1  1  0  0]
 [ 0  1  6  4  0  0]
 [ 1  5 99 25  5  1]
 [ 1  1 38 76 12  0]
 [ 0  0  7 18 14  1]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 7), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.003792499999917709,0.00029346062500010814,1452.82421875,0.2928002450980392,0.5874253828608668,0.5783927382141667,0.603125,0.7527338808629176,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 1  0 94 39  2  0]
 [ 0  0 38 82  8  0]
 [ 0  0  4 19 17  0]
 [ 0  0  0  2  1  0]]"
"StackingClassifier(estimators=[('e1',
                                SVC(C=0.001, class_weight='balanced',
                                    probability=True)),
                               ('e2',
                                KNeighborsClassifier(n_jobs=-1,
                                                     n_neighbors=15)),
                               ('e3', LogisticRegression(C=0.01, n_jobs=-1))],
                   n_jobs=-1)","OrderedDict([('stack_method', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7519451999996818,0.0007450887500013437,2067.21875,0.29278492647058824,0.6025143985106411,0.6019174593576295,0.625,0.7756190439767485,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 101  35   0   0]
 [  0   0  39  85   4   0]
 [  0   0   3  23  14   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 3), ('min_child_weight', 5), ('subsample', 0.7)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.32715639999969426,9.664843749987995e-05,2345.23046875,0.29270833333333335,0.6022136123757498,0.6048287666212194,0.625,0.7876217561540433,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 102  33   1   0]
 [  0   0  42  84   2   0]
 [  0   0   3  23  14   0]
 [  0   0   0   2   1   0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7447652999999264,3.694656249990658e-05,2191.61328125,0.29159007352941174,0.5950445866652303,0.5979167499606068,0.615625,0.7661511550129598,"[[  0   1   1   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 103  33   0   0]
 [  0   0  46  79   3   0]
 [  0   0   1  24  15   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.3685426000001826,0.0004554728125015117,2173.5546875,0.29064031862745093,0.598393678484886,0.5953534100308293,0.61875,0.7942409404385904,"[[ 0  0  2  0  0  0]
 [ 1  0  9  1  0  0]
 [ 0  0 95 40  1  0]
 [ 0  0 35 89  4  0]
 [ 0  0  2 24 14  0]
 [ 0  0  0  1  2  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 13), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.003571199999896635,0.00029583437499951514,2159.3984375,0.290609681372549,0.5762813907576716,0.5687497026782742,0.590625,0.7561410660937694,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 92 42  1  0]
 [ 0  0 41 79  8  0]
 [ 0  0  2 20 18  0]
 [ 0  0  0  2  1  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 30), ('max_features', 'sqrt'), ('min_samples_leaf', 10), ('min_samples_split', 10), ('n_estimators', 120)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.1548149000000194,0.00041724156249998143,1714.734375,0.2904718137254902,0.6130313505276821,0.635362554112554,0.640625,0.8130377579441191,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  32   0   0]
 [  0   0  38  90   0   0]
 [  0   0   2  27  11   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 3), ('min_child_weight', 5), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",8,0.33050660000026255,9.558374999869556e-05,2201.44140625,0.2902573529411765,0.5966922560617501,0.5936110122753958,0.61875,0.7778930370272805,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 100  34   2   0]
 [  0   0  42  84   2   0]
 [  0   0   2  24  14   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.7361824999998134,0.0005241593750000106,2211.08984375,0.2897058823529412,0.2105108204992034,0.24389307926425832,0.259375,0.5497845397348081,"[[ 1  0  1  0  0  0]
 [ 0  0  7  0  4  0]
 [ 1  0 46  0 89  0]
 [ 1  0 29  0 98  0]
 [ 0  0  4  0 36  0]
 [ 0  0  1  0  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.6281926000001476,0.0004518231250017379,2164.0078125,0.28840379901960783,0.5867438575368994,0.58118465993466,0.6,0.7827234237894404,"[[ 0  1  1  0  0  0]
 [ 2  0  7  2  0  0]
 [ 0  1 97 35  3  0]
 [ 2  0 41 79  6  0]
 [ 0  0  2 22 16  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 9), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.0027812999996967847,0.00028716406250168803,2159.21875,0.28829656862745096,0.5883544606529819,0.5809553608677513,0.60625,0.7657980995405264,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 95 40  1  0]
 [ 0  0 36 84  8  0]
 [ 0  0  2 23 15  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 15), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.002577200000814628,0.00037692187500226737,2167.359375,0.28795955882352947,0.5945363494095889,0.5901249568906748,0.6125,0.7672205989902164,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 96 39  0  0]
 [ 0  0 34 86  8  0]
 [ 0  0  2 24 14  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.025), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 3), ('min_child_weight', 3), ('subsample', 0.8)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.3481982000002972,0.00010128531249904426,2345.53515625,0.2876531862745098,0.5915943948974993,0.59231893837157,0.6125,0.7905483644804137,"[[  0   1   1   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 100  35   1   0]
 [  0   0  43  82   3   0]
 [  0   0   2  24  14   0]
 [  0   0   0   2   1   0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 5), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.0028702999998131418,0.0003460528125003748,2159.5078125,0.28748468137254907,0.5815730388950872,0.5726310242406822,0.596875,0.7492550390905118,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  2 92 39  3  0]
 [ 0  0 36 83  9  0]
 [ 0  0  6 18 16  0]
 [ 0  0  1  2  0  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 7), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.002959299999929499,0.00036615687500045623,2159.12109375,0.28714767156862747,0.58707160477512,0.5846223884810842,0.603125,0.7604685631184549,"[[ 0  1  1  0  0  0]
 [ 0  0  5  6  0  0]
 [ 0  2 93 40  1  0]
 [ 0  0 37 85  6  0]
 [ 0  0  4 21 15  0]
 [ 0  0  0  2  1  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 5), ('max_features', 'sqrt'), ('min_samples_leaf', 2), ('min_samples_split', 10), ('n_estimators', 120)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.15278969999985748,0.0004279293749995361,1713.85546875,0.2866421568627451,0.6042775297430065,0.6270680476491671,0.63125,0.7895848064306231,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  33   0   0]
 [  0   0  40  88   0   0]
 [  0   0   2  27  11   0]
 [  0   0   0   2   1   0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 15), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.0029417999999168387,0.00038097374999921383,2159.171875,0.28644301470588235,0.5725495201574045,0.5694940476190478,0.5875,0.7471207787139826,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 92 41  2  0]
 [ 0  0 45 79  4  0]
 [ 0  0  2 21 17  0]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7495124999995824,0.0005322618750000174,2170.36328125,0.2862745098039216,0.21367290026246719,0.22731173616103523,0.265625,0.41103068918964425,"[[ 1  0  1  0  0  0]
 [ 0  0  7  0  4  0]
 [ 1  0 50  0 85  0]
 [ 0  0 39  0 89  0]
 [ 0  0  6  0 34  0]
 [ 0  0  1  0  2  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.741721699999971,3.802531250016727e-05,1729.796875,0.28621323529411763,0.5717751292440747,0.5647177120704667,0.5875,0.7600680273063536,"[[ 0  1  1  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  1 95 39  1  0]
 [ 0  0 45 76  7  0]
 [ 0  0  1 22 17  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 3), ('min_child_weight', 5), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.33405320000019856,9.713750000059918e-05,2279.0859375,0.2860906862745098,0.5936303906870094,0.5950825825825825,0.615625,0.7829556221743015,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 100  35   1   0]
 [  0   0  41  84   3   0]
 [  0   0   2  25  13   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.3505611999999019,0.00044225000000039925,2327.3984375,0.2860140931372549,0.5923150383012236,0.5896520894411095,0.615625,0.78341958581241,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 101  35   0   0]
 [  0   0  41  83   4   0]
 [  0   0   2  25  13   0]
 [  0   0   0   1   2   0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7531174999999166,3.6685625001098285e-05,2191.796875,0.28520220588235295,0.5867290168736219,0.5921074319352464,0.60625,0.7611235895288513,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 98 38  0  0]
 [ 0  0 43 82  3  0]
 [ 0  0  0 26 14  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 9), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.002738899999712885,0.0002904037500002232,2167.55078125,0.2850183823529412,0.5921416666059249,0.5843456986981175,0.6125,0.7690737564197896,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 97 38  1  0]
 [ 0  0 34 86  8  0]
 [ 0  0  3 24 13  0]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7463279999999486,0.0005263787499998785,1469.4609375,0.2848039215686275,0.1929824606574936,0.2150604838709677,0.246875,0.41027147591950097,"[[ 1  0  1  0  0  0]
 [ 0  0  7  0  4  0]
 [ 1  0 42  0 93  0]
 [ 0  0 38  0 90  0]
 [ 0  0  4  0 36  0]
 [ 0  0  1  0  2  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 7), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.0026332000006732414,0.00029492312499996843,2167.17578125,0.28477328431372545,0.5806028272336295,0.577810534591195,0.596875,0.7577050590047232,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 90 44  1  0]
 [ 0  0 34 86  8  0]
 [ 0  0  3 22 15  0]
 [ 0  0  0  3  0  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 9), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.0028585000000020955,0.00038427343750058185,1453.05859375,0.28448223039215687,0.5616881326558747,0.5541620341277131,0.575,0.7415394371669837,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 87 47  1  0]
 [ 0  0 38 79 11  0]
 [ 0  0  4 18 18  0]
 [ 0  0  1  2  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",8,0.3424486000003526,0.00042992812499846876,2340.96484375,0.2841299019607843,0.5825268817204299,0.5809897106538069,0.603125,0.7871206546859413,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 95 40  1  0]
 [ 0  0 41 84  3  0]
 [ 0  0  1 25 14  0]
 [ 0  0  0  1  2  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7354964999999538,3.638687500000515e-05,1729.4453125,0.28405330882352947,0.5836523444421109,0.5890897718910965,0.603125,0.7684538028383592,"[[ 0  1  1  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 96 40  0  0]
 [ 0  0 42 83  3  0]
 [ 0  0  1 25 14  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 15), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.0028981999994357466,0.00030178250000005845,2159.14453125,0.2837622549019608,0.5651467843349763,0.5578181818181818,0.58125,0.746615340045534,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 93 41  1  0]
 [ 0  0 46 76  6  0]
 [ 0  0  2 21 17  0]
 [ 0  0  0  1  2  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 3), ('min_child_weight', 5), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.3363537999998698,9.705093750085325e-05,2159.70703125,0.2833792892156863,0.5924761897246924,0.6032787949616932,0.615625,0.7864935376592247,"[[ 0  1  1  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 98 37  1  0]
 [ 0  0 40 87  1  0]
 [ 0  0  2 26 12  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 5), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.002869799999643874,0.00027271281250023093,2159.06640625,0.28316482843137253,0.5788193600880108,0.5686591545427753,0.59375,0.755561496332381,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  2 94 36  4  0]
 [ 0  0 37 81 10  0]
 [ 0  0  5 19 15  1]
 [ 0  0  1  2  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",7,0.6026771999995617,0.00043504374999940864,2273.0078125,0.2825520833333333,0.5740220910877315,0.5644228940080702,0.59375,0.762759893957109,"[[  0   0   2   0   0   0]
 [  1   0   9   1   0   0]
 [  0   0 102  34   0   0]
 [  0   0  46  73   9   0]
 [  0   1   4  20  15   0]
 [  0   0   0   1   2   0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 11), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.0030758999998852232,0.00029137875000060374,1453.08203125,0.28235294117647053,0.5691747852892208,0.5576704313501943,0.584375,0.7509157047009467,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 91 43  2  0]
 [ 0  0 35 80 13  0]
 [ 0  0  4 20 16  0]
 [ 0  0  0  1  2  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.5)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7516082000001916,3.727218749958183e-05,2191.546875,0.28203125,0.5849899230184691,0.5907649559956856,0.60625,0.7651939913355559,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   1 102  33   0   0]
 [  0   0  46  79   3   0]
 [  0   0   1  26  13   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.533156799999233,0.0005164703125018378,2327.38671875,0.2816195038621509,0.3718884932195908,0.5561153018608376,0.315625,0.741102909526882,"[[ 0  2  0  0  0  0]
 [ 2  5  4  0  0  0]
 [28 22 64 12  5  5]
 [19 19 32 20 18 20]
 [ 1  4  0  1 11 23]
 [ 0  0  0  0  2  1]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 5), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.0029137000001355773,0.000280035624999897,1452.96484375,0.28120404411764705,0.5669285814325284,0.5566125086800076,0.58125,0.732772364268142,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  2 89 41  4  0]
 [ 0  0 37 81 10  0]
 [ 0  0  6 18 16  0]
 [ 0  0  0  2  1  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.1)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7664380999999594,3.912843749986905e-05,2191.69921875,0.2811121323529412,0.5822926053660245,0.5884690299961044,0.603125,0.7619785121006994,"[[ 0  1  1  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 97 39  0  0]
 [ 0  0 42 83  3  0]
 [ 0  0  1 26 13  0]
 [ 0  0  0  2  1  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.1)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7332091999999193,3.641781249967835e-05,1729.6875,0.28106617647058824,0.576147431713598,0.5808963939959144,0.596875,0.7657608610800206,"[[  0   1   1   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 101  35   0   0]
 [  0   0  49  76   3   0]
 [  0   0   1  25  14   0]
 [  0   0   0   2   1   0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7422996999998759,4.1330312500065246e-05,1729.46875,0.28106617647058824,0.5763820224719101,0.5898178408492718,0.596875,0.7683390093351021,"[[  0   1   1   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 101  35   0   0]
 [  0   0  51  76   1   0]
 [  0   0   1  25  14   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",7,0.3571529000000737,0.00044804406250023023,2273.57421875,0.28095894607843136,0.5807563538596341,0.5788957369118776,0.603125,0.7757272201673995,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 99 37  0  0]
 [ 0  0 43 81  4  0]
 [ 0  0  1 26 13  0]
 [ 0  0  0  1  2  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 17), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.002644000000145752,0.00031449937499985483,2167.46875,0.2809283088235294,0.5884077825263938,0.5903040696034327,0.609375,0.7642129416729372,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  1 96 39  0  0]
 [ 0  0 36 87  5  0]
 [ 0  0  2 26 12  0]
 [ 0  0  0  2  1  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.5)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7474586999999246,4.135000000005107e-05,1729.5546875,0.28088235294117647,0.5815521673703818,0.5869785274092065,0.603125,0.7664470127498354,"[[  0   1   1   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 100  36   0   0]
 [  0   0  45  80   3   0]
 [  0   0   1  26  13   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.367525999999998,0.000481875937501286,2325.90625,0.27996323529411765,0.5786143775705265,0.573093447905478,0.6,0.7914982724616885,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 95 40  1  0]
 [ 0  0 39 84  5  0]
 [ 0  0  1 26 13  0]
 [ 0  0  0  1  2  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 7), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.00289159999988442,0.00041992468749967314,1453.1171875,0.27979473039215685,0.5683327742368333,0.5640787623066104,0.584375,0.7418183351566288,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 1  0 87 46  2  0]
 [ 0  0 36 85  7  0]
 [ 0  0  4 21 15  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 13), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.0029420000000754953,0.0004207068749998655,1453.22265625,0.27956495098039214,0.5684592763076406,0.56811677169776,0.584375,0.7388935025399463,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 90 44  1  0]
 [ 0  0 40 82  6  0]
 [ 0  0  4 21 15  0]
 [ 0  0  0  3  0  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 9), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.002907000000050175,0.00037005843749966517,2159.18359375,0.27956495098039214,0.5683917765186555,0.5643262987012987,0.584375,0.7448498775568957,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 90 45  0  0]
 [ 0  0 37 82  9  0]
 [ 0  0  5 20 15  0]
 [ 0  0  1  2  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.5)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7186220999999477,3.521156249988167e-05,1729.48046875,0.2786151960784314,0.5697004657522541,0.574160462828363,0.590625,0.7661298486786129,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 99 37  0  0]
 [ 0  0 49 76  3  0]
 [ 0  0  1 25 14  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 11), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.0029236000000310014,0.000279177187499613,2159.21484375,0.2784160539215686,0.5656209987195903,0.5599358974358973,0.58125,0.7644285608111303,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  1 88 46  1  0]
 [ 0  0 36 83  9  0]
 [ 0  0  3 22 15  0]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.3659051999998155,0.000446114999999736,2075.6796875,0.27824754901960785,0.5807163658474142,0.5874836615545487,0.603125,0.782762299335509,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  1 97 37  1  0]
 [ 0  0 42 84  2  0]
 [ 0  0  1 27 12  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 7), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.0028355999993436853,0.00026553718749937615,2159.12890625,0.27800245098039217,0.5713616129876933,0.5642753148623478,0.5875,0.760225272363662,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 90 43  2  0]
 [ 0  0 34 84 10  0]
 [ 0  0  3 23 14  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 13), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.0028784999999516003,0.00030062031250039923,1452.83203125,0.27737438725490193,0.5576588286265706,0.5489308905754016,0.571875,0.7404329422525928,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 88 46  1  0]
 [ 0  0 38 79 11  0]
 [ 0  0  4 20 16  0]
 [ 0  0  0  1  2  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 3), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.0029287999996086,0.0003283228125013693,2159.0625,0.2771446078431372,0.568391598973406,0.5684414825684085,0.571875,0.7323864815317844,"[[ 0  0  1  1  0  0]
 [ 1  0  5  5  0  0]
 [ 2  5 91 36  2  0]
 [ 1  3 38 76 10  0]
 [ 0  1  6 15 16  2]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 17), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.002979399999958332,0.0003293234375000509,1452.9296875,0.27696078431372545,0.5624616727563552,0.560038263110919,0.578125,0.734729764754146,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 90 45  0  0]
 [ 0  0 41 80  7  0]
 [ 0  0  4 21 15  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 5), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.0026308000005883514,0.0003063887499990869,2167.1484375,0.27657781862745096,0.5623386213647976,0.5570818764568765,0.578125,0.7456711964626269,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  2 95 37  2  0]
 [ 0  0 46 75  7  0]
 [ 0  0  2 23 15  0]
 [ 0  0  0  3  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.1)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7535713000002033,4.1917499999044594e-05,2191.703125,0.2765625,0.5768865121806298,0.593064182194617,0.6,0.7563759067100708,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  34   0   0]
 [  0   0  49  78   1   0]
 [  0   0   1  27  12   0]
 [  0   0   0   2   1   0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 15), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.0029931999999917025,0.0003150928124995289,1452.7890625,0.27581188725490197,0.5601370839887989,0.5530335808158389,0.575,0.7400087379672766,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 88 47  0  0]
 [ 0  0 36 81 11  0]
 [ 0  0  4 21 15  0]
 [ 0  0  0  1  2  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 17), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.0028628999998545623,0.0003128690625004538,2159.35546875,0.27561274509803924,0.5527134341560662,0.5438808373590982,0.56875,0.7467498813531653,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  1 94 41  0  0]
 [ 0  0 47 72  9  0]
 [ 0  0  3 21 16  0]
 [ 0  0  0  1  2  0]]"
"VotingClassifier(estimators=[('e1',
                              SVC(C=0.001, class_weight='balanced',
                                  probability=True)),
                             ('e2',
                              KNeighborsClassifier(n_jobs=-1, n_neighbors=15)),
                             ('e3', LogisticRegression(C=0.01, n_jobs=-1))],
                 n_jobs=-1, voting='soft')","OrderedDict([('voting', 'soft')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.3594255999996676,0.0007213837499989495,2061.8671875,0.2755208333333333,0.5924866440019427,0.6122627372627372,0.625,0.7771116850465234,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 102  34   0   0]
 [  0   0  37  90   1   0]
 [  0   0   3  29   8   0]
 [  0   0   0   2   1   0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 7), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.002630699999826902,0.0003731818749997728,2167.52734375,0.2753982843137255,0.5663094153208739,0.5622505307855626,0.58125,0.7521893934216007,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  2 90 43  1  0]
 [ 0  0 36 82 10  0]
 [ 0  0  2 24 14  0]
 [ 0  0  0  3  0  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 17), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.0028394000000844244,0.0003888962499985382,2159.3671875,0.2753982843137255,0.5636108135947395,0.5610784605465456,0.58125,0.7469921560363803,"[[ 0  0  2  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 90 43  2  0]
 [ 0  0 41 82  5  0]
 [ 0  0  2 24 14  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 15), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.002865199999860124,0.0004244506249996505,1452.86328125,0.2751378676470588,0.5692822827578925,0.5702663341025292,0.5875,0.7358047282914966,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 90 45  0  0]
 [ 0  0 37 85  6  0]
 [ 0  0  4 23 13  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 13), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.0026516999996601953,0.00038650468750063284,2167.4375,0.2750612745098039,0.5699453551912568,0.569680222453945,0.5875,0.7608421615670281,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 91 43  1  0]
 [ 0  0 37 84  7  0]
 [ 0  0  2 25 13  0]
 [ 0  0  0  3  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.5)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7712707999999111,3.746250000062901e-05,2191.81640625,0.27467830882352945,0.5668741746840219,0.5732808111045046,0.5875,0.7546897786661034,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 96 40  0  0]
 [ 0  0 46 79  3  0]
 [ 0  0  0 27 13  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 11), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.002802799999699346,0.0003697018749988956,2167.55859375,0.2745710784313726,0.574499568707241,0.5689235764235764,0.59375,0.7596742705818815,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 94 39  2  0]
 [ 0  0 36 84  8  0]
 [ 0  0  2 26 12  0]
 [ 0  0  0  3  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.5)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7250014999999621,3.638968750010463e-05,1729.80078125,0.2744178921568628,0.5723408461842625,0.5899429947417563,0.59375,0.7609818084369758,"[[ 0  1  1  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 96 40  0  0]
 [ 0  0 45 82  1  0]
 [ 0  0  1 27 12  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 11), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.0028127000000495173,0.0003628303124997956,2159.125,0.27372855392156864,0.5424922560699972,0.5339846743295018,0.55625,0.7431389344311954,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 88 45  2  0]
 [ 0  0 46 73  9  0]
 [ 0  0  4 19 17  0]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.764535799999976,0.0005280662500013022,2075.6328125,0.27328431372549017,0.2091386897001304,0.16973264076272712,0.278125,0.33533815961471275,"[[ 2  0  0  0  0  0]
 [ 9  0  2  0  0  0]
 [49  0 87  0  0  0]
 [37  0 91  0  0  0]
 [ 4  0 36  0  0  0]
 [ 1  0  2  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7635755000001154,0.0005337659375001635,2148.61328125,0.27328431372549017,0.2091386897001304,0.16973264076272712,0.278125,0.3276126869884979,"[[ 2  0  0  0  0  0]
 [ 9  0  2  0  0  0]
 [49  0 87  0  0  0]
 [37  0 91  0  0  0]
 [ 4  0 36  0  0  0]
 [ 1  0  2  0  0  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 17), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.0026511000005484675,0.0003732534374989882,2167.578125,0.2732689950980392,0.5699861181221605,0.5666241039426524,0.590625,0.7637568235629465,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  1 94 41  0  0]
 [ 0  0 38 83  7  0]
 [ 0  0  2 26 12  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 11), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.0026403000001664623,0.0002979543750001312,2167.22265625,0.2731924019607843,0.5712655773670583,0.5649035604917958,0.590625,0.764620515284698,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 95 39  1  0]
 [ 0  0 38 82  8  0]
 [ 0  0  2 26 12  0]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.7554778999992777,0.0005331412499998578,2173.46875,0.27205882352941174,0.23005278526504944,0.20091475553432075,0.275,0.3116931911017507,"[[ 2  0  0  0  0  0]
 [ 7  0  4  0  0  0]
 [50  0 86  0  0  0]
 [62  0 66  0  0  0]
 [16  0 24  0  0  0]
 [ 1  0  2  0  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.1)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7521569999998974,5.2834687499370146e-05,1729.5078125,0.271890318627451,0.5663588850174215,0.5742920006971071,0.5875,0.7640917162130658,"[[ 0  1  1  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 95 41  0  0]
 [ 0  0 44 81  3  0]
 [ 0  0  1 27 12  0]
 [ 0  0  0  2  1  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.1)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7443574999999782,3.714062500037585e-05,1729.58203125,0.2718137254901961,0.5661401970860286,0.57375,0.5875,0.767425217583537,"[[ 0  1  1  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 96 40  0  0]
 [ 0  0 45 80  3  0]
 [ 0  0  1 27 12  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 11), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.002903000000060274,0.00040978749999993626,1453.1953125,0.2713848039215686,0.5604180790960452,0.5645910639909125,0.578125,0.7425392394118812,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 88 46  1  0]
 [ 0  0 39 84  5  0]
 [ 0  0  4 23 13  0]
 [ 0  0  1  2  0  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 15), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.0027177000001756824,0.00030362218749928614,2167.2109375,0.2712316176470588,0.5598232309386978,0.5581901748040988,0.578125,0.7618448191020284,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 90 44  1  0]
 [ 0  0 40 82  6  0]
 [ 0  0  1 26 13  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 9), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.002655100000083621,0.0003726765625003736,2167.58984375,0.271078431372549,0.560878234046782,0.5576202138058692,0.578125,0.7472328943202582,"[[ 0  1  1  0  0  0]
 [ 0  0  5  6  0  0]
 [ 0  1 92 42  1  0]
 [ 0  0 40 80  8  0]
 [ 0  0  2 25 13  0]
 [ 0  0  1  2  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.747682199999872,3.676249999955417e-05,2191.765625,0.26916360294117647,0.5538492537999364,0.5568110755460716,0.575,0.754839852378002,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 100  36   0   0]
 [  0   0  53  71   4   0]
 [  0   0   1  26  13   0]
 [  0   0   0   2   1   0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 5), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.002864999999928841,0.0003610862500003975,1453.3203125,0.26893382352941175,0.5569114752388774,0.5513961643051382,0.571875,0.7422640509305605,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  4 86 42  4  0]
 [ 0  0 36 84  8  0]
 [ 0  0  7 20 13  0]
 [ 0  0  0  3  0  0]]"
QuadraticDiscriminantAnalysis(),"OrderedDict([('priors', None)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.0019407999998293235,2.9226875000176733e-05,2366.2421875,0.2682138480392157,0.5621875814492562,0.557091892267196,0.578125,0.7290579579225982,"[[ 0  1  1  0  0  0]
 [ 0  0  9  1  1  0]
 [ 0  2 92 41  1  0]
 [ 0  1 38 81  8  0]
 [ 0  0  1 26 12  1]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.675964600000043,0.0004511003125003299,2327.58203125,0.2680912990196079,0.550680661709513,0.5452291105121294,0.571875,0.7615951892104956,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 97 39  0  0]
 [ 0  0 49 73  6  0]
 [ 0  0  1 26 13  0]
 [ 0  0  0  1  2  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 13), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.0028507999995781574,0.0002958809375002147,2167.11328125,0.26780024509803924,0.5642293207687371,0.5603444384254244,0.584375,0.7633812268822167,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 94 40  1  0]
 [ 0  0 39 82  7  0]
 [ 0  0  1 28 11  0]
 [ 0  0  0  2  1  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.1)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7507955999999467,3.7475624999672164e-05,2191.7421875,0.26721813725490196,0.5532590932060338,0.5609287461093819,0.578125,0.7551079674560515,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 105  31   0   0]
 [  0   0  57  68   3   0]
 [  0   0   1  27  12   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6610635999995793,0.0004584700000009434,2170.97265625,0.2668964460784314,0.5691420696392437,0.5723506069094304,0.596875,0.7601157022900387,"[[ 0  0  2  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 99 37  0  0]
 [ 0  0 42 83  3  0]
 [ 0  0  1 30  9  0]
 [ 0  0  0  1  2  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', None), ('max_features', 'sqrt'), ('min_samples_leaf', 1), ('min_samples_split', 100), ('n_estimators', 500)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5965284000001247,0.0013949953124999582,1731.9296875,0.26614583333333336,0.5755553595442995,0.6219928956393924,0.609375,0.7829641008562168,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  34   0   0]
 [  0   0  42  86   0   0]
 [  0   0   2  31   7   0]
 [  0   0   0   3   0   0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.1)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7417222000003676,3.0600312500439485e-05,2155.62890625,0.26611519607843137,0.5582063182638344,0.5621503086554401,0.58125,0.7462029024673453,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 99 36  1  0]
 [ 0  0 49 76  3  0]
 [ 0  0  0 29 11  0]
 [ 0  0  0  2  1  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.5)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7331927000000178,4.156531250032458e-05,2191.50390625,0.2657322303921568,0.5559409888357256,0.5635854341736695,0.58125,0.7525088797179843,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  32   0   0]
 [  0   0  54  71   3   0]
 [  0   0   1  28  11   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",8,0.7057678000001033,0.0005095009374997516,2341.203125,0.2647058823529412,0.2253258193241637,0.20490044593960258,0.25625,0.3540432751300597,"[[ 2  0  0  0  0  0]
 [ 7  0  4  0  0  0]
 [56  0 80  0  0  0]
 [71  0 57  0  0  0]
 [17  0 23  0  0  0]
 [ 1  0  2  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.7301499000004696,0.0005219340624989854,2298.35546875,0.2647058823529412,0.2044042042042042,0.17269045850356982,0.25625,0.293367726843318,"[[ 2  0  0  0  0  0]
 [10  0  1  0  0  0]
 [56  0 80  0  0  0]
 [48  0 80  0  0  0]
 [ 7  0 33  0  0  0]
 [ 0  0  3  0  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7491522999998779,3.091718750027894e-05,2155.6640625,0.26371017156862747,0.5581301564506148,0.564724571676426,0.58125,0.7457585238628442,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 93 41  2  0]
 [ 0  0 43 83  2  0]
 [ 0  0  0 30 10  0]
 [ 0  0  0  2  1  0]]"
QuadraticDiscriminantAnalysis(),"OrderedDict([('priors', None)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.002181800000016665,3.0239062499504144e-05,2157.0234375,0.26358251633986923,0.45529080902611135,0.4838290181492687,0.478125,0.6719264720709128,"[[ 0  2  0  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  2 55 73  4  2]
 [ 0  2 24 92  8  2]
 [ 0  0  1 32  5  2]
 [ 0  0  1  1  0  1]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 17), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.0029250000000047294,0.0004164571875001855,1452.96875,0.2634650735294118,0.5465461066350112,0.5460662525879917,0.565625,0.733852285798844,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 86 48  1  0]
 [ 0  0 39 83  6  0]
 [ 0  0  4 24 12  0]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.7056217999997898,0.0005231134375009106,2326.11328125,0.2622549019607843,0.2218963631391851,0.20345385096322927,0.25,0.3190895379693003,"[[ 2  0  0  0  0  0]
 [ 7  0  4  0  0  0]
 [58  0 78  0  0  0]
 [71  0 57  0  0  0]
 [18  0 22  0  0  0]
 [ 1  0  2  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.520175399999971,0.0005110525000020516,2325.86328125,0.2619949494949495,0.3623778788220058,0.575013456312709,0.309375,0.7270595190171464,"[[ 0  2  0  0  0  0]
 [ 4  4  3  0  0  0]
 [22 22 68  9 10  5]
 [22 21 29 16 24 16]
 [ 1  3  0  0 10 26]
 [ 0  0  0  0  2  1]]"
QuadraticDiscriminantAnalysis(),"OrderedDict([('priors', None)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.002132999999957974,2.941343749967018e-05,2327.203125,0.2592064950980392,0.5386874959945375,0.5493873260130486,0.546875,0.7131185467679504,"[[ 0  0  1  1  0  0]
 [ 0  0  5  6  0  0]
 [ 0  1 77 56  1  1]
 [ 0  2 27 85 12  2]
 [ 0  0  1 24 13  2]
 [ 0  0  0  1  2  0]]"
QuadraticDiscriminantAnalysis(),"OrderedDict([('priors', None)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",7,0.001992200000131561,3.1786562499291907e-05,2319.91015625,0.2591299019607843,0.5386752260084704,0.5392340067340067,0.55,0.7221279603736148,"[[ 0  1  1  0  0  0]
 [ 0  0  9  2  0  0]
 [ 1  3 95 36  1  0]
 [ 1  4 47 68  8  0]
 [ 0  0  1 26 13  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",7,0.7159455000000889,0.0004505268750023106,2273.1796875,0.25778186274509807,0.5479102541602543,0.5476239224137931,0.575,0.7596356169642531,"[[ 0  0  2  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 99 37  0  0]
 [ 0  0 48 76  4  0]
 [ 0  0  2 29  9  0]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.7174770999999964,0.0005415624999983492,2327.55078125,0.25735294117647056,0.22721393382132957,0.2231194777923055,0.2375,0.2941831432354344,"[[ 2  0  0  0  0  0]
 [ 8  0  3  0  0  0]
 [62  0 74  0  0  0]
 [77  0 51  0  0  0]
 [29  0 11  0  0  0]
 [ 1  0  2  0  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.5)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.74916549999989,3.0560312499972045e-05,2155.7578125,0.2567401960784314,0.5416842105263158,0.5433755302226935,0.565625,0.7474560511578003,"[[ 0  1  1  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  1 99 34  2  0]
 [ 0  0 53 72  3  0]
 [ 0  0  1 29 10  0]
 [ 0  0  0  2  1  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7530973000002632,3.1075312499240226e-05,2155.54296875,0.25655637254901964,0.5459373582415771,0.5505260064739258,0.571875,0.747276579596579,"[[ 0  1  1  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 98 35  3  0]
 [ 0  0 50 76  2  0]
 [ 0  0  1 30  9  0]
 [ 0  0  0  3  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.1)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7396829999997863,3.053156249990252e-05,2155.89453125,0.25635723039215685,0.5383644587494845,0.5398999264902432,0.565625,0.7454305927959827,"[[  0   1   1   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 104  29   3   0]
 [  0   0  58  67   3   0]
 [  0   0   1  29  10   0]
 [  0   0   0   3   0   0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.1)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7333542999999736,3.072593750061969e-05,2155.78515625,0.25625000000000003,0.5443217811287171,0.5533135444661313,0.571875,0.7432462644720111,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 102  33   1   0]
 [  0   0  54  72   2   0]
 [  0   0   1  30   9   0]
 [  0   0   0   2   1   0]]"
"LogisticRegression(C=0.01, n_jobs=-1)","OrderedDict([('C', 10.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.05508389999977226,2.8878749999705634e-05,2038.0703125,0.25614276960784316,0.5505971316818774,0.5601527403414196,0.578125,0.7568890028214547,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   1 100  35   0   0]
 [  0   0  48  77   3   0]
 [  0   0   1  31   8   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.669260800000302,0.00045218843750092217,2173.3515625,0.2561121323529412,0.5541039147910934,0.5531414501613178,0.584375,0.7604255495369261,"[[ 0  0  2  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 97 38  1  0]
 [ 0  0 42 83  3  0]
 [ 0  0  1 32  7  0]
 [ 0  0  0  1  2  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 20), ('max_features', 'sqrt'), ('min_samples_leaf', 2), ('min_samples_split', 100), ('n_estimators', 800)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.9321526999999605,0.0021884668749997615,1719.2890625,0.25577512254901963,0.5561381074168799,0.6084023464458246,0.590625,0.7792828198756253,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 98 38  0  0]
 [ 0  0 43 85  0  0]
 [ 0  0  2 32  6  0]
 [ 0  0  0  3  0  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 25), ('max_features', 'log2'), ('min_samples_leaf', 5), ('min_samples_split', 100), ('n_estimators', 800)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.9478209999999763,0.002180064374999802,1744.328125,0.2556219362745098,0.5556935408710231,0.6071656050955414,0.590625,0.7775658654930893,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 100  36   0   0]
 [  0   0  45  83   0   0]
 [  0   0   2  32   6   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,1.6682002999996257,0.000498550000000364,2323.25,0.25484207887700533,0.48166141193298523,0.5328602319551009,0.446875,0.7063588204386222,"[[ 0  0  0  0  2  0]
 [ 4  1  3  2  1  0]
 [11 14 70 28  9  4]
 [ 3 16 39 51 17  2]
 [ 0  5  1 11 21  2]
 [ 0  0  2  0  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.6793318999998519,0.0004523678124996877,2184.484375,0.2545496323529412,0.5536686003072557,0.5679676511954992,0.5875,0.7628532445221701,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 97 38  1  0]
 [ 0  0 42 85  1  0]
 [ 0  0  2 32  6  0]
 [ 0  0  0  2  1  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7269390000001295,3.015249999975822e-05,2155.7734375,0.2534620098039216,0.542882090224283,0.575400557297109,0.571875,0.7410472979285291,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 101  35   0   0]
 [  0   0  53  74   1   0]
 [  0   0   1  31   8   0]
 [  0   0   0   3   0   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 8), ('max_features', 'sqrt'), ('min_samples_leaf', 10), ('min_samples_split', 100), ('n_estimators', 500)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5855715999998665,0.001434385937499627,1714.74609375,0.25317095588235294,0.5502218762022415,0.6025147088658958,0.584375,0.775016779437033,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 98 38  0  0]
 [ 0  0 45 83  0  0]
 [ 0  0  2 32  6  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.33529379999981757,0.00048664968749960734,2170.5078125,0.25265012254901964,0.5564843764502467,0.5934242424242424,0.596875,0.7730889109346104,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 98 38  0  0]
 [ 0  0 38 89  1  0]
 [ 0  0  2 34  4  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.7314667000000554,0.0005203468750011097,2298.25390625,0.25245098039215685,0.042626592890677405,0.1593581989247312,0.134375,0.3975805313902204,"[[  1   0   0   0   1   0]
 [  1   0   1   0   9   0]
 [  2   0   2   0 132   0]
 [  0   0   3   0 125   0]
 [  0   0   0   0  40   0]
 [  0   0   0   0   3   0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.5)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.728617100000065,3.0509062499106675e-05,2155.72265625,0.2522058823529412,0.5455698068701164,0.5704883227176221,0.575,0.7456309588283918,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 97 38  1  0]
 [ 0  0 47 80  1  0]
 [ 0  0  0 33  7  0]
 [ 0  0  0  3  0  0]]"
QuadraticDiscriminantAnalysis(),"OrderedDict([('priors', None)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.0020983000001706387,3.0423749999641815e-05,1740.16796875,0.25217524509803924,0.5360315811516587,0.5469547110879749,0.54375,0.7165868208113919,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  2 77 55  2  0]
 [ 0  2 27 86 11  2]
 [ 0  0  0 24 11  5]
 [ 0  0  0  2  1  0]]"
QuadraticDiscriminantAnalysis(),"OrderedDict([('priors', None)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.002190100000007078,3.076906250072397e-05,2187.86328125,0.2517463235294118,0.5240728021978022,0.5456521739130434,0.534375,0.7142557273640944,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  2 69 63  2  0]
 [ 0  1 24 90  9  4]
 [ 0  0  0 26 12  2]
 [ 0  0  0  2  1  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.5)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7158374999999069,3.0428750000055517e-05,2155.7265625,0.2513939950980392,0.5395653366241602,0.5572424242424243,0.565625,0.7445528444581864,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 94 42  0  0]
 [ 0  0 47 79  2  0]
 [ 0  0  0 32  8  0]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.7280418999998801,0.0005482446874992775,2164.07421875,0.2512254901960784,0.03737430793030451,0.23144778481012657,0.13125,0.2994097251920874,"[[  1   0   0   0   1   0]
 [  0   0   1   0  10   0]
 [  1   0   1   0 134   0]
 [  0   0   0   0 128   0]
 [  0   0   0   0  40   0]
 [  0   0   0   0   3   0]]"
QuadraticDiscriminantAnalysis(),"OrderedDict([('priors', None)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",9,0.002046900000095775,2.9918437502374217e-05,2325.7890625,0.2505361519607843,0.5362736691204277,0.5507608695652173,0.546875,0.7139178156880318,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  2 78 55  1  0]
 [ 0  2 28 87  8  3]
 [ 0  0  0 27 10  3]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.6627981000001455,0.000437839999997891,2323.57421875,0.24889705882352944,0.527945183957791,0.5295620676151939,0.553125,0.7072006826434891,"[[ 0  0  0  1  1  0]
 [ 0  0  8  3  0  0]
 [ 0  1 96 38  1  0]
 [ 0  0 54 72  2  0]
 [ 0  0  4 27  9  0]
 [ 0  0  1  0  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.6359741999995094,0.00045447749999993903,2298.22265625,0.2474417892156863,0.5444514106583072,0.605331088664422,0.584375,0.7534504405287918,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 98 38  0  0]
 [ 0  0 43 85  0  0]
 [ 0  0  1 35  4  0]
 [ 0  0  0  3  0  0]]"
QuadraticDiscriminantAnalysis(),"OrderedDict([('priors', None)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.0020384999997986597,3.097124999840162e-05,2293.8984375,0.24712009803921572,0.5213570416857947,0.5297437933908309,0.53125,0.7065040427451673,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  2 75 56  3  0]
 [ 0  2 28 84 13  1]
 [ 0  0  0 27 11  2]
 [ 0  0  0  3  0  0]]"
GaussianNB(),"OrderedDict([('priors', None)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.0018875000000662112,2.9866875000550407e-05,1735.921875,0.2463861965240642,0.5021617851326756,0.5104824687582017,0.503125,0.6823914568807001,"[[ 0  2  0  0  0  0]
 [ 0  1  7  3  0  0]
 [ 1  3 75 49  7  1]
 [ 0  5 32 75 16  0]
 [ 0  0  0 28 10  2]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.6949413000002096,0.00045050593749920156,2326.12109375,0.24520526960784314,0.5328284822165595,0.5346091298472251,0.565625,0.7537373882186097,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 100  35   1   0]
 [  0   0  50  75   3   0]
 [  0   0   1  33   6   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.32963539999991553,0.0004650665625000272,1469.0390625,0.24260110294117646,0.5425923820678884,0.6177789158525056,0.59375,0.7813449329838977,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 100  36   0   0]
 [  0   0  39  89   0   0]
 [  0   0   1  38   1   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.6870740000003934,0.000515816562500504,2326.328125,0.24240196078431375,0.2864908316676805,0.2437290640394089,0.378125,0.4969699770380641,"[[ 0  0  2  0  0  0]
 [ 0  0  6  0  5  0]
 [ 0  0 89  0 47  0]
 [ 0  0 69  0 59  0]
 [ 0  0  8  0 32  0]
 [ 0  0  1  0  2  0]]"
QuadraticDiscriminantAnalysis(),"OrderedDict([('priors', None)])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.0018989999998666462,2.9508749997830817e-05,2327.55078125,0.24139093137254905,0.5371574080895896,0.5470338802016578,0.56875,0.7114015954160037,"[[ 0  1  1  0  0  0]
 [ 1  0  7  2  1  0]
 [ 0  1 92 42  1  0]
 [ 2  0 38 86  2  0]
 [ 0  0  2 34  4  0]
 [ 0  0  1  2  0  0]]"
AdaBoostClassifier(algorithm='SAMME'),"OrderedDict([('algorithm', 'SAMME')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.07160720000001675,8.466562499975794e-05,1734.98046875,0.24057904411764705,0.5102378702720605,0.539114175002253,0.525,0.655499875956661,"[[ 0  1  1  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  5 89 42  0  0]
 [ 0  2 55 69  2  0]
 [ 0  0  7 23 10  0]
 [ 0  1  0  2  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,3.1603826999999,0.0004353375000022197,2323.6015625,0.2400735294117647,0.5219513123108499,0.5258224913575633,0.553125,0.7030672379257936,"[[ 0  0  0  2  0  0]
 [ 0  0  9  2  0  0]
 [ 1  1 99 34  1  0]
 [ 0  0 54 72  2  0]
 [ 0  0  5 29  6  0]
 [ 0  0  1  0  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.32757719999972323,0.00047693062499973846,2184.640625,0.2396752450980392,0.5300328288187965,0.5973213572854291,0.571875,0.7701360052361109,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 94 42  0  0]
 [ 0  0 42 86  0  0]
 [ 0  0  2 35  3  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",8,0.6454929000001357,0.0004489696874998117,2340.97265625,0.23965992647058823,0.5249606886073527,0.5204267734029638,0.559375,0.7452461036699931,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  34   1   0]
 [  0   0  51  73   4   0]
 [  0   0   1  34   5   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.39499320000004445,0.0004601250000000334,1469.4765625,0.23950674019607843,0.5379807184828119,0.4923185885662928,0.59375,0.7510354265428243,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 103  33   0   0]
 [  0   0  41  87   0   0]
 [  0   0   1  39   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.7353895000001103,0.0005255006249996086,2210.81640625,0.23897058823529413,0.166219859059263,0.15113538569863869,0.190625,0.3224765480057994,"[[ 2  0  0  0  0  0]
 [ 9  0  2  0  0  0]
 [77  0 59  0  0  0]
 [55  0 73  0  0  0]
 [10  0 30  0  0  0]
 [ 1  0  2  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.33069350000005215,0.00046896718749991353,2148.703125,0.23869485294117646,0.5338102192630456,0.6089496459480724,0.584375,0.7745750298370317,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 100  36   0   0]
 [  0   0  42  86   0   0]
 [  0   0   1  38   1   0]
 [  0   0   0   3   0   0]]"
QuadraticDiscriminantAnalysis(),"OrderedDict([('priors', None)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity')",7,0.0019654000006994465,3.081625000049826e-05,2295.7421875,0.23481924019607844,0.5132243177697723,0.5413248564397046,0.528125,0.7137324242102243,"[[ 0  1  1  0  0  0]
 [ 0  0  9  2  0  0]
 [ 1  3 69 60  2  1]
 [ 0  2 27 93  5  1]
 [ 0  0  0 26  7  7]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",8,0.6593902999993588,0.0005062556249981753,2341.375,0.23276979352346996,0.28471331462851573,0.5448123191058946,0.225,0.6904701366693542,"[[ 0  2  0  0  0  0]
 [ 3  6  2  0  0  0]
 [12 45 53  8  9  9]
 [17 46 15 10 12 28]
 [ 1  6  0  1  2 30]
 [ 0  1  0  0  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",8,0.31304720000025554,0.00044633624999903534,2341.28125,0.23080575980392157,0.5159391952626696,0.5912430211527877,0.565625,0.7621137769180961,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 101  35   0   0]
 [  0   0  49  79   0   0]
 [  0   0   1  38   1   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.4046520000001692,0.00046536437499895557,2148.25,0.23046875,0.5175130238888628,0.4726558837318331,0.571875,0.7521422414037319,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 102  34   0   0]
 [  0   0  47  81   0   0]
 [  0   0   1  39   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.7056358999998338,0.0005393231249996688,2173.1640625,0.2300890337195484,0.2624974548664064,0.48263204225352113,0.21875,0.6850944925708246,"[[ 0  2  0  0  0  0]
 [ 3  6  2  0  0  0]
 [11 45 54  7 10  9]
 [15 39 25  7 11 31]
 [ 1  6  0  1  2 30]
 [ 0  1  0  0  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.3279018999996879,0.00046532468750086763,2075.671875,0.2296262254901961,0.5161871685361618,0.47435294117647064,0.56875,0.758321434064597,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 96 40  0  0]
 [ 0  0 42 86  0  0]
 [ 0  0  0 40  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.3164284000004045,0.0004643034374993249,2297.89453125,0.2296262254901961,0.5159703891411209,0.4737489713546769,0.56875,0.7711914610218621,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 96 40  0  0]
 [ 0  0 42 86  0  0]
 [ 0  0  1 39  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.3135739999997895,0.00047063156250146674,2326.109375,0.22958026960784314,0.513086846269381,0.588619564362664,0.5625,0.7670279468399216,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 100  36   0   0]
 [  0   0  49  79   0   0]
 [  0   0   1  38   1   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",7,0.4180427999999665,0.0004677143750001278,2273.0078125,0.22916666666666666,0.5143521126760563,0.46945747342088795,0.56875,0.7475578865524968,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 102  34   0   0]
 [  0   0  48  80   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7470509000004313,0.0005338828124990868,2170.85546875,0.22916666666666666,0.15834754839733417,0.15713389870998568,0.165625,0.3214849758854684,"[[ 2  0  0  0  0  0]
 [ 9  0  2  0  0  0]
 [85  0 51  0  0  0]
 [66  0 62  0  0  0]
 [18  0 22  0  0  0]
 [ 2  0  1  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.7142860000003566,0.0005161987500002851,2326.20703125,0.22894013666072488,0.2673743854035616,0.5136966100732854,0.215625,0.691442134554858,"[[ 0  2  0  0  0  0]
 [ 2  6  2  0  1  0]
 [19 38 52  7 10 10]
 [19 42 19  8 15 25]
 [ 2  5  0  1  2 30]
 [ 0  1  0  0  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.3347938000006252,0.0004679528125024035,2173.4453125,0.2283547794117647,0.5102344972760925,0.5859961075725406,0.559375,0.7689141981624323,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 99 37  0  0]
 [ 0  0 49 79  0  0]
 [ 0  0  2 37  1  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.4103843000002598,0.00046174281249875546,2170.47265625,0.22801776960784315,0.5119792583207217,0.4677487401851635,0.565625,0.7451836979834432,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 100  36   0   0]
 [  0   0  47  81   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.3955588999997417,0.00045274531250072414,2164.0546875,0.22794117647058823,0.51168514932817,0.467165214333164,0.565625,0.7509082437945609,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 101  35   0   0]
 [  0   0  48  80   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.3940369000001738,0.0004582631250002578,2298.17578125,0.22663909313725492,0.5088781317843102,0.46461744363252705,0.5625,0.7513628826453287,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 101  35   0   0]
 [  0   0  49  79   0   0]
 [  0   0   1  39   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",7,0.3336970000000292,0.0004935390625007586,2273.390625,0.2265625,0.5082026708008879,0.46350240695080436,0.5625,0.7453003181258129,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 102  34   0   0]
 [  0   0  50  78   0   0]
 [  0   0   3  37   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.4147384999996575,0.0004546087500003182,2210.8125,0.2257199754901961,0.507033531543577,0.46443792766373415,0.559375,0.7447984309274065,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 96 40  0  0]
 [ 0  0 45 83  0  0]
 [ 0  0  2 38  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",7,0.32444349999968836,0.00046476281250136254,2273.21484375,0.2257199754901961,0.507033531543577,0.46443792766373415,0.559375,0.7597002887571346,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 96 40  0  0]
 [ 0  0 45 83  0  0]
 [ 0  0  2 38  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.3299483999999211,0.0005038899999988189,2327.78515625,0.22549019607843138,0.5063298490127759,0.4625932653619282,0.559375,0.7517890345223678,"[[ 0  0  2  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 99 37  0  0]
 [ 0  0 48 80  0  0]
 [ 0  0  3 37  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.3608535999992455,0.0004951725000012175,2327.7109375,0.22495404411764705,0.5041266704310182,0.4592159019484601,0.559375,0.7365314213716532,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   0 106  30   0   0]
 [  0   0  55  73   0   0]
 [  0   0   1  39   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.8432330999999067,0.0005977518750000854,2075.5625,0.22434129901960786,0.5044937428896473,0.4623313782991202,0.55625,0.7428211266380488,"[[ 0  0  2  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 97 39  0  0]
 [ 0  0 47 81  0  0]
 [ 0  0  0 40  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.333312400000068,0.0004885284374978483,2164.53125,0.22434129901960786,0.503712978710926,0.46051896558459315,0.55625,0.7497831497390098,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 97 39  0  0]
 [ 0  0 47 81  0  0]
 [ 0  0  3 37  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.6498871999992843,0.0005040881249982476,2323.484375,0.22426470588235295,0.18252469383466116,0.24071539321844343,0.153125,0.3656461686750387,"[[ 2  0  0  0  0  0]
 [ 9  0  2  0  0  0]
 [89  0 47  0  0  0]
 [96  0 32  0  0  0]
 [39  0  1  0  0  0]
 [ 2  0  1  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.33999119999998584,0.0004913500000000681,2184.234375,0.22426470588235295,0.5033064251185057,0.459630411001719,0.55625,0.7483560963292815,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 98 38  0  0]
 [ 0  0 48 80  0  0]
 [ 0  0  4 36  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.4087939999999435,0.0004467409374996123,2327.63671875,0.22418811274509806,0.5039393583954019,0.46089593343489976,0.55625,0.7516642424065011,"[[ 0  0  1  1  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 99 37  0  0]
 [ 0  0 49 79  0  0]
 [ 0  0  1 39  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.4256608000000597,0.00046013937499935766,2075.2578125,0.22411151960784315,0.5034167175106772,0.45981403344272537,0.55625,0.7396782586871882,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 100  36   0   0]
 [  0   0  50  78   0   0]
 [  0   0   1  39   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.35771219999969617,0.0005204187500027046,2173.59375,0.2238051470588235,0.5013568696675492,0.4568518736974559,0.55625,0.7382586086427351,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 104  32   0   0]
 [  0   0  54  74   0   0]
 [  0   0   4  36   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.40479359999972075,0.00045995031250072315,2326.07421875,0.22372855392156862,0.5015469372875975,0.45693806664311787,0.55625,0.7456300814824119,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   0 105  31   0   0]
 [  0   0  55  73   0   0]
 [  0   0   1  39   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.3468680999994831,0.0005019828125000459,2163.91015625,0.22372855392156862,0.5008969058808288,0.4563793103448276,0.55625,0.7354662844334882,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 105  31   0   0]
 [  0   0  55  73   0   0]
 [  0   0   2  38   0   0]
 [  0   0   1   2   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.3119248000002699,0.0004569921875003047,2327.47265625,0.22311580882352944,0.5009992962702323,0.45822784810126577,0.553125,0.7711822304100847,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 96 40  0  0]
 [ 0  0 47 81  0  0]
 [ 0  0  3 37  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.4087483000002976,0.0004944121874984831,2173.171875,0.22288602941176472,0.5005643685173886,0.457190576652602,0.553125,0.7512865014438934,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 99 37  0  0]
 [ 0  0 50 78  0  0]
 [ 0  0  1 39  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",7,0.3643277000001035,0.0004713834374996395,2273.34375,0.22257965686274508,0.4992355602561842,0.4550501587052784,0.553125,0.7322210157278755,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  33   0   0]
 [  0   0  54  74   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",8,0.3913289000001896,0.00044312874999832277,2341.07421875,0.22242647058823528,0.4982894969108561,0.45386634422555155,0.553125,0.744587309876417,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 105  31   0   0]
 [  0   0  56  72   0   0]
 [  0   0   1  39   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.40565459999925224,0.00044561656250152737,2323.484375,0.22241115196078431,0.4962782187755111,0.4885214955547436,0.5375,0.6939127654075946,"[[ 0  0  1  1  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 95 39  2  0]
 [ 0  0 52 75  1  0]
 [ 0  0  4 34  2  0]
 [ 0  0  1  1  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.35815549999915675,0.00045897968749955,2325.9296875,0.22104779411764705,0.4948388160606809,0.45053201970443346,0.55,0.7274296138945068,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   0 106  30   0   0]
 [  0   0  58  70   0   0]
 [  0   0   1  39   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.3500240000003032,0.0004680221875020152,2298.10546875,0.22012867647058823,0.493661789764381,0.45002057290646186,0.546875,0.7373552410562092,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 101  35   0   0]
 [  0   0  54  74   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"LogisticRegression(C=0.01, n_jobs=-1)","OrderedDict([('C', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.05042200000025332,2.789718749909298e-05,2037.71875,0.22005208333333334,0.49340527577937643,0.4496666666666666,0.546875,0.7400331416325008,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 102  34   0   0]
 [  0   0  55  73   0   0]
 [  0   0   1  39   0   0]
 [  0   0   1   2   0   0]]"
"GaussianProcessClassifier(copy_X_train=False, n_jobs=-1)","OrderedDict([('copy_X_train', False), ('warm_start', True)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.9455213999999614,0.008467064375000177,1950.421875,0.21997549019607843,0.4927878787878788,0.4489530494278636,0.546875,0.737578366617252,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 103  33   0   0]
 [  0   0  56  72   0   0]
 [  0   0   1  39   0   0]
 [  0   0   1   2   0   0]]"
"GaussianProcessClassifier(copy_X_train=False, n_jobs=-1)","OrderedDict([('copy_X_train', False), ('warm_start', False)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,2.9375117000001865,0.008331471874999608,2067.29296875,0.21997549019607843,0.4927878787878788,0.4489530494278636,0.546875,0.737578366617252,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 103  33   0   0]
 [  0   0  56  72   0   0]
 [  0   0   1  39   0   0]
 [  0   0   1   2   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",7,0.7146208999993178,0.0005371721874979585,2273.75,0.2193627450980392,0.16776471712538227,0.22291837466693995,0.140625,0.3237495303447998,"[[ 2  0  0  0  0  0]
 [10  0  1  0  0  0]
 [93  0 43  0  0  0]
 [95  0 33  0  0  0]
 [36  0  4  0  0  0]
 [ 2  0  1  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.32894670000041515,0.0004811921875017333,2297.87890625,0.2192861519607843,0.4925908984283369,0.4505997030786061,0.54375,0.7540810005792244,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 95 41  0  0]
 [ 0  0 49 79  0  0]
 [ 0  0  2 38  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.34359409999979107,0.00049673437500104,2210.7265625,0.2189031862745098,0.49087490451847937,0.44750578000705354,0.54375,0.7088583598730984,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 100  36   0   0]
 [  0   0  54  74   0   0]
 [  0   0   2  38   0   0]
 [  0   0   1   2   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.3297321000000011,0.0004782303125011822,2326.109375,0.21875,0.4905275779376498,0.44699999999999995,0.54375,0.7385717841465197,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  34   0   0]
 [  0   0  56  72   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.37790550000045187,0.0004759193750004442,2173.72265625,0.21875,0.4905275779376498,0.44699999999999995,0.54375,0.7281186294282187,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 102  34   0   0]
 [  0   0  56  72   0   0]
 [  0   0   1  39   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.3484011000000464,0.0005072406249993832,2148.56640625,0.21852022058823528,0.488537794299876,0.44504635682871746,0.54375,0.7123487905673416,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 105  31   0   0]
 [  0   0  59  69   0   0]
 [  0   0   2  38   0   0]
 [  0   0   1   2   0   0]]"
"LogisticRegression(C=0.01, n_jobs=-1)","OrderedDict([('C', 0.1)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.02282869999999093,2.8363124999941647e-05,2038.6015625,0.21706495098039214,0.48421875,0.44126438618925834,0.540625,0.6996227836459378,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 107  29   0   0]
 [  0   0  62  66   0   0]
 [  0   0   2  38   0   0]
 [  0   0   1   2   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.6196709000005285,0.0005023203124977727,2323.56640625,0.21703756313131314,0.24094654937321694,0.47115648674242416,0.19375,0.6640581257967486,"[[ 0  1  0  0  0  1]
 [ 4  6  1  0  0  0]
 [26 42 51  7  2  8]
 [35 59 14  3  3 14]
 [ 5 10  0  0  1 24]
 [ 0  2  0  0  0  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.7305215999995198,0.0005293903124993449,2164.57421875,0.21691176470588236,0.14353191692984973,0.162909152735729,0.134375,0.3039816169459721,"[[ 2  0  0  0  0  0]
 [10  0  1  0  0  0]
 [95  0 41  0  0  0]
 [80  0 48  0  0  0]
 [24  0 16  0  0  0]
 [ 2  0  1  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.7564504000001762,0.0005317231249989618,2173.5859375,0.21691176470588236,0.16764807692307687,0.24206429211469532,0.134375,0.35476909660723255,"[[  2   0   0   0   0   0]
 [ 10   0   1   0   0   0]
 [ 95   0  41   0   0   0]
 [104   0  24   0   0   0]
 [ 35   0   5   0   0   0]
 [  2   0   1   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.34462180000036824,0.0004995096875006766,2148.23828125,0.21668198529411764,0.48669294294294296,0.44484375,0.5375,0.747665146555908,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 95 41  0  0]
 [ 0  0 51 77  0  0]
 [ 0  0  2 38  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",7,0.3486214000004111,0.0005268943749996424,2273.56640625,0.21637561274509806,0.4859285303405609,0.4433870967741935,0.5375,0.7211355698218685,"[[ 0  0  1  1  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 99 37  0  0]
 [ 0  0 55 73  0  0]
 [ 0  0  2 38  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",8,0.324879100000544,0.000495164062499498,2341.359375,0.2159926470588235,0.4833333333333333,0.4400252525252526,0.5375,0.738241303162912,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  32   0   0]
 [  0   0  60  68   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.7010977999998431,0.0005150684374996217,2326.21875,0.21568627450980393,0.16123865533319265,0.22671768707482992,0.13125,0.3408876259008736,"[[  2   0   0   0   0   0]
 [ 10   0   1   0   0   0]
 [ 96   0  40   0   0   0]
 [104   0  24   0   0   0]
 [ 32   0   8   0   0   0]
 [  1   0   2   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,1.5315055000000939,0.00044597250000038,2323.71875,0.2142310049019608,0.48258727477477487,0.44336622807017545,0.53125,0.6842277828429066,"[[ 0  0  0  2  0  0]
 [ 0  0  5  6  0  0]
 [ 0  0 93 43  0  0]
 [ 0  0 51 77  0  0]
 [ 0  0  3 37  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.3332358000006934,0.00045881781250045606,2323.59765625,0.21407781862745098,0.4807633641526259,0.43910181278324745,0.53125,0.6867020342970946,"[[ 0  0  1  1  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 95 41  0  0]
 [ 0  0 53 75  0  0]
 [ 0  0  4 36  0  0]
 [ 0  0  1  2  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",8,0.7010998999994627,0.0005022628125004758,2341.01953125,0.2090686274509804,0.21917908505238498,0.21913282429937908,0.278125,0.3704115512454772,"[[ 0  0  2  0  0  0]
 [ 0  0  5  0  6  0]
 [ 0  0 55  0 81  0]
 [ 0  0 49  0 79  0]
 [ 0  0  6  0 34  0]
 [ 0  0  1  0  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.6885894999995799,0.0005284268749988996,2327.64453125,0.20833333333333334,0.1483001852393487,0.24496314695759466,0.1125,0.3692731333119037,"[[  2   0   0   0   0   0]
 [ 10   0   1   0   0   0]
 [102   0  34   0   0   0]
 [108   0  20   0   0   0]
 [ 37   0   3   0   0   0]
 [  2   0   1   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.5705592999993314,0.0004513725000009572,2323.60546875,0.20772058823529413,0.46706081081081086,0.42703125000000003,0.515625,0.6768017611770037,"[[ 0  0  1  1  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 93 43  0  0]
 [ 0  0 56 72  0  0]
 [ 0  0  3 37  0  0]
 [ 0  0  1  2  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.30407589999958873,0.0004663396875002945,2323.74609375,0.20664828431372548,0.4653838484546361,0.4272455089820359,0.5125,0.6634943082595619,"[[ 0  0  0  2  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 90 46  0  0]
 [ 0  0 54 74  0  0]
 [ 0  0  2 38  0  0]
 [ 0  0  1  2  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",8,0.7058257999997295,0.0005145653124998262,2341.375,0.20465686274509806,0.1318468992248062,0.205908203125,0.103125,0.3320524311948405,"[[  2   0   0   0   0   0]
 [ 10   0   1   0   0   0]
 [105   0  31   0   0   0]
 [106   0  22   0   0   0]
 [ 32   0   8   0   0   0]
 [  1   0   2   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.3007324999998673,0.0004660856250012557,2323.6796875,0.20159313725490194,0.45342465753424654,0.41535334584115075,0.5,0.6766497090470679,"[[ 0  0  1  1  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 88 48  0  0]
 [ 0  0 56 72  0  0]
 [ 0  0  4 36  0  0]
 [ 0  0  1  2  0  0]]"
"LogisticRegression(C=0.01, n_jobs=-1)","OrderedDict([('C', 0.01)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.016344600000138598,2.8289062500164162e-05,2039.09375,0.19753370098039214,0.4146856297059013,0.3986906098017209,0.496875,0.6706578477955984,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 124  12   0   0]
 [  0   0  93  35   0   0]
 [  0   0  12  28   0   0]
 [  0   0   1   2   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.36442259999967064,0.0004563896875026785,2323.6875,0.19722732843137256,0.44240607513988806,0.403,0.490625,0.6699990210576217,"[[ 0  0  1  1  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 94 42  0  0]
 [ 0  0 65 63  0  0]
 [ 0  0  3 37  0  0]
 [ 0  0  1  2  0  0]]"
MultinomialNB(fit_prior=False),"OrderedDict([('fit_prior', True)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.001782500000217624,2.6593437500110895e-05,2012.0546875,0.19140625,0.40388104646582723,0.38207132326775456,0.48125,0.6705759775503102,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 119  17   0   0]
 [  0   0  93  35   0   0]
 [  0   0  11  29   0   0]
 [  0   0   1   2   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.7484089999998105,0.00053221781249988,2173.4140625,0.18504901960784315,0.1591117459473824,0.1968776962899051,0.209375,0.3380891250220407,"[[  0   0   2   0   0   0]
 [  0   0   5   0   6   0]
 [  0   0  32   0 104   0]
 [  0   0  31   0  97   0]
 [  0   0   5   0  35   0]
 [  0   0   1   0   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.3402171000002454,0.0005164793749997898,2148.265625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.7265383444640103,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",8,0.3183751000005941,0.000490729062499895,2341.30078125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.697328154100934,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.3148025999998936,0.0005192156250004131,2148.58984375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6697797008150468,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.3413915999999517,0.0005210112500009245,2173.484375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.7188163841192041,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",8,0.301789799999824,0.0004960468749999336,2340.97265625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6741815366125192,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.6904179999992266,0.0005104321874995321,2326.109375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.3384973709703616,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.29833090000011,0.0005097284375011668,2326.125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.7108542071747097,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",8,0.31992910000008123,0.0005055846874995496,2341.3359375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.7169240329154147,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.3069939000006343,0.0005436621874991942,2164.1328125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.7160306183319036,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.33425579999993715,0.0005254124999993337,2210.82421875,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.725607804719824,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.7410277999997561,0.0005209378124988006,2211.0234375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.3328120312859922,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.7305426000002626,0.0005212581250020776,2297.94140625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.2940408311713906,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7576444000001175,0.0005431887499995014,2148.578125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.5526468018948993,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",7,0.324967800000195,0.0005180343749998428,2273.390625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.7358942919839138,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.29618269999991753,0.0005267453124986332,2327.5625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.7026556045318763,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.7491846000002624,0.0005302612500003079,2173.6328125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.5472152432898514,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.6929759999993621,0.0005174521875005667,2327.7890625,0.16666666666666666,0.02777777777777778,0.015625,0.125,0.3776501204013946,"[[  0   0   0   0   2   0]
 [  0   0   0   0  11   0]
 [  0   0   0   0 136   0]
 [  0   0   0   0 128   0]
 [  0   0   0   0  40   0]
 [  0   0   0   0   3   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",7,0.31242680000013934,0.0005123337500009484,2273.42578125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6747308505119224,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.7051797000003717,0.0005425624999986667,2327.3515625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.354440040683797,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.3189720000000307,0.000534940000000006,2327.8359375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.7348650269232152,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",7,0.7221340999994936,0.0005302268750000394,2273.25,0.16666666666666666,0.02777777777777778,0.015625,0.125,0.31992800380862335,"[[  0   0   0   0   2   0]
 [  0   0   0   0  11   0]
 [  0   0   0   0 136   0]
 [  0   0   0   0 128   0]
 [  0   0   0   0  40   0]
 [  0   0   0   0   3   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",7,0.7231823000001896,0.000528284687499081,2273.34765625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.4226482777204626,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.8128793999999289,0.000571361562499817,2075.31640625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.3182528786722889,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.32901640000000043,0.0005051225000016757,2298.0859375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.7400576167085955,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.3201091999999335,0.0005300196874998165,2325.81640625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.7156620907396762,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.7307151000004524,0.0005305218749981577,2164.1796875,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.572205375170911,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.34316299999954936,0.0005262771874981808,2170.76171875,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6799109041316663,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.2726235000000088,0.0004757418749989029,2323.46484375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.5761305789944748,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.6601371000006111,0.0005024962499987851,2323.71484375,0.16666666666666666,0.02777777777777778,0.015625,0.125,0.6316164520419949,"[[  0   0   0   0   2   0]
 [  0   0   0   0  11   0]
 [  0   0   0   0 136   0]
 [  0   0   0   0 128   0]
 [  0   0   0   0  40   0]
 [  0   0   0   0   3   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.32580890000008367,0.0005066124999999033,2075.48828125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6930061700971659,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.33478110000032757,0.0005265478125011213,2170.72265625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6949722122628489,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7535064000003331,0.0005307456250022824,2170.7109375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.5772454898864956,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.6621625999996468,0.0005107006250000268,2323.52734375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.34880940750446354,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.2847388999998657,0.00047737656250035343,2323.55859375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.5950939049382871,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.3064825999999812,0.0005113187499986793,2075.5,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6804964478791953,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.32051120000051014,0.0005176349999999275,2170.6328125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6868833584656066,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.2924062000001868,0.00048003125000093403,2323.62890625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6728374170437551,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.2754886999991868,0.00047713156250210885,2323.62890625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6826936150044928,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.3319339999998192,0.0005121009375002927,1468.84375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.70316063550774,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.31414230000018506,0.0005126234374998262,2210.8125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6898964842423129,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"LogisticRegression(C=0.01, n_jobs=-1)","OrderedDict([('C', 0.001)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.017277500000091095,2.977312500007656e-05,2038.6328125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6637189668632308,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.3172826999998506,0.0005068324999996321,2298.1328125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.7033863132838187,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.7386907000000065,0.0005249112499996044,2164.359375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.30390507318389,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.3364681000002747,0.000521477187498931,2164.34375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.7415952975391844,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",8,0.7040905000003477,0.0005147190624995801,2341.08203125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.560928811973514,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.2897419999999329,0.0004987487499988674,2326.01171875,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6430683328990391,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'volatile acidity', 'fixed acidity')",8,0.7341578000005029,0.0005186356249993196,2298.0546875,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6392090648544115,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7549756999997044,0.0005366590625015988,2170.7734375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.35857655935515853,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.31303170000001046,0.0005112871874999314,2075.48046875,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.7106774057434586,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.6903648999996221,0.0005105350000008003,2326.16796875,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.5525772135160121,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'fixed acidity')",9,0.31492400000024645,0.0005194775000006757,2173.31640625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6667747325932233,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.7335130999999819,0.0005231362499998227,2211.08984375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.32399261628169795,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.3119325000000117,0.0005037265624999066,1469.89453125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6873358086130646,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.3604758999999831,0.0005718906250010037,2075.41796875,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.717397264124888,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7444207000000915,0.0005457571874998735,1468.94921875,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6166333155798152,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7328916999999819,0.0005394881249998207,2075.60546875,0.16544117647058823,0.25219780219780213,0.17985893416927898,0.421875,0.5973924466717951,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  1   0 135   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"VotingClassifier(estimators=[('e1',
                              SVC(C=0.001, class_weight='balanced',
                                  probability=True)),
                             ('e2',
                              KNeighborsClassifier(n_jobs=-1, n_neighbors=15)),
                             ('e3', LogisticRegression(C=0.01, n_jobs=-1))],
                 n_jobs=-1, voting='soft')","OrderedDict([('voting', 'soft')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",7,0.6022333000000799,0.0007376734374986427,2235.75390625,0.2639246323529412,0.5703679046055827,0.6187510230807006,0.603125,0.7674951959311161,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 97 39  0  0]
 [ 0  0 39 89  0  0]
 [ 0  0  2 31  7  0]
 [ 0  0  1  2  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,2.3330579000003127,0.00040514124999901924,2238.12890625,0.3680147058823529,0.5721534905986126,0.5597376428138112,0.5875,0.749639386764692,"[[ 1  0  1  0  0  0]
 [ 2  0  6  3  0  0]
 [ 1  0 98 35  2  0]
 [ 0  0 43 72 13  0]
 [ 0  0  2 21 17  0]
 [ 0  0  1  0  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.4913258999995378,0.0004441224999993665,2237.83984375,0.37550969251336896,0.4895528572330526,0.5541637806511975,0.459375,0.7580433242589566,"[[ 1  1  0  0  0  0]
 [ 3  3  5  0  0  0]
 [ 7 23 70 26 10  0]
 [ 6  7 32 50 31  2]
 [ 0  2  1 10 23  4]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.6471621000000596,0.0004975825000002488,2238.05078125,0.31134924613784903,0.31972639127127733,0.6197911489982728,0.25625,0.7018285983762054,"[[ 0  2  0  0  0  0]
 [ 3  6  1  0  1  0]
 [18 47 55  5  2  9]
 [20 40 22 13  8 25]
 [ 1  8  0  0  6 25]
 [ 0  0  0  1  0  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.5753657999994175,0.00041167499999801295,2237.98046875,0.282046568627451,0.5677331811171864,0.5595170017831889,0.584375,0.7643004655750558,"[[ 0  0  2  0  0  0]
 [ 1  0  9  1  0  0]
 [ 0  0 95 40  1  0]
 [ 0  0 45 76  7  0]
 [ 0  1  2 21 16  0]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.342025900000408,0.00042559562500059654,2237.82421875,0.2823376225490196,0.5839809682120078,0.5853187919463086,0.60625,0.7737788346227117,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 98 38  0  0]
 [ 0  0 42 83  3  0]
 [ 0  0  1 26 13  0]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.3967587999995885,0.0004589412499996115,2238.18359375,0.36487856506238864,0.4978755584015221,0.5833681351670237,0.446875,0.7709680550179171,"[[ 1  1  0  0  0  0]
 [ 3  3  5  0  0  0]
 [14 20 66 31  2  3]
 [13  8 26 52 22  7]
 [ 1  3  0  5 21 10]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.2865558000003148,0.0004888684375004004,2237.80859375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6494092434977881,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.4230001000005359,0.00044134093749903514,2238.09375,0.22411151960784315,0.5030516431924882,0.45914634146341465,0.55625,0.7464849308808676,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 100  36   0   0]
 [  0   0  50  78   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.6762216999995871,0.0005095321874989623,2238.0703125,0.16666666666666666,0.02777777777777778,0.015625,0.125,0.36005819993328025,"[[  0   0   0   0   2   0]
 [  0   0   0   0  11   0]
 [  0   0   0   0 136   0]
 [  0   0   0   0 128   0]
 [  0   0   0   0  40   0]
 [  0   0   0   0   3   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.32053610000002664,0.0004757256249973807,2238.0546875,0.21675857843137256,0.487762139338494,0.44736739164450007,0.5375,0.7187261075684707,"[[ 0  0  1  1  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 94 42  0  0]
 [ 0  0 50 78  0  0]
 [ 0  0  2 38  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.47654599999987113,0.00047398218750061005,2238.12109375,0.357510305258467,0.46943615916842407,0.5850125470048819,0.415625,0.7655331218891458,"[[ 1  1  0  0  0  0]
 [ 3  3  5  0  0  0]
 [11 28 67 22  3  5]
 [ 7 16 28 39 24 14]
 [ 0  4  0  3 23 10]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,1.4514257999999245,0.00042674937499782574,2237.90234375,0.4015833890374331,0.5176949157280227,0.5601887429815816,0.496875,0.7472565282133948,"[[ 1  1  0  0  0  0]
 [ 3  4  4  0  0  0]
 [ 4 19 77 28  8  0]
 [ 2  8 34 55 27  2]
 [ 0  2  2 12 22  2]
 [ 0  0  1  0  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.678637300000446,0.0005044931250012041,2238.0078125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.32295592801145445,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.3138416000001598,0.00047846718750008674,2237.6484375,0.22411151960784315,0.5028867262247163,0.4588660801564027,0.55625,0.7443687414656307,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 100  36   0   0]
 [  0   0  50  78   0   0]
 [  0   0   3  37   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.47006710000005114,0.0004665950000003249,2238.12109375,0.3651812240047534,0.4086062214144051,0.5756275977163435,0.3375,0.7505193846708752,"[[ 1  1  0  0  0  0]
 [ 3  4  4  0  0  0]
 [21 30 57 19  4  5]
 [20 19 24 32 16 17]
 [ 1  5  0  2 13 19]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.6700273999995261,0.0005109743750011831,2237.73046875,0.21323529411764705,0.15843175853018374,0.23754960317460316,0.125,0.3218290891883624,"[[  2   0   0   0   0   0]
 [ 10   0   1   0   0   0]
 [ 98   0  38   0   0   0]
 [102   0  26   0   0   0]
 [ 38   0   2   0   0   0]
 [  2   0   1   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.2861350000002858,0.0004872406250001404,2237.82421875,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6883283189287501,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.5767096999998103,0.00046341906250120247,2238.0546875,0.40986566027926324,0.4674423317409972,0.5947529482917446,0.403125,0.7561725486790236,"[[ 1  1  0  0  0  0]
 [ 3  4  4  0  0  0]
 [19 31 55 25  2  4]
 [17  9 23 49 20 10]
 [ 1  3  2  2 19 13]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.5201979000003121,0.00047826281250138434,2237.7890625,0.3316348224896019,0.3333938254196875,0.5713980603099764,0.271875,0.738314157760283,"[[ 1  1  0  0  0  0]
 [ 1  5  3  1  1  0]
 [30 26 57  7  8  8]
 [22 24 26 17 13 26]
 [ 2  3  0  1  6 28]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.3081830999999511,0.00043961937499830127,2238.0234375,0.22824754901960786,0.5126848691695108,0.46960410557184745,0.565625,0.7637964392872669,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 97 39  0  0]
 [ 0  0 44 84  0  0]
 [ 0  0  2 38  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.6918415000000095,0.0004309787500005768,2237.8359375,0.2666053921568628,0.5527711602035998,0.5559501788136638,0.575,0.7605019739273376,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 96 40  0  0]
 [ 0  0 49 76  3  0]
 [ 0  0  2 26 12  0]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.3486845999996149,0.00044943156250099037,2238.0859375,0.21882659313725492,0.49062749800159866,0.44716666666666666,0.54375,0.7367888669353326,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 101  35   0   0]
 [  0   0  55  73   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.6847334000003684,0.0004990581250012838,2238.08203125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.37502893871643156,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",5,2.6804721000007703,0.00042113031249755293,2238.578125,0.2755667892156863,0.5752334046514213,0.5753205128205128,0.596875,0.7411716135275662,"[[ 0  0  0  0  2  0]
 [ 1  0  9  1  0  0]
 [ 0  0 98 37  1  0]
 [ 0  0 44 81  2  1]
 [ 0  0  3 25 12  0]
 [ 0  0  2  0  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.5457261000001381,0.0004455943750002689,2238.53515625,0.2632687165775401,0.49806044395637655,0.5786234768398101,0.446875,0.7278206707512644,"[[ 0  1  1  0  0  0]
 [ 2  2  4  1  2  0]
 [12 26 66 23  9  0]
 [ 5 16 31 56 18  2]
 [ 0  6  1  7 19  7]
 [ 0  1  0  0  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.6290103999999701,0.0004904459375012493,2238.78515625,0.20766117052881758,0.25673481357999617,0.48584774110812406,0.196875,0.6699133966847659,"[[ 0  2  0  0  0  0]
 [ 3  5  1  2  0  0]
 [24 34 47 13  3 15]
 [27 49 14  8  4 26]
 [ 5  7  1  0  2 25]
 [ 0  2  0  0  0  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.6482717999997476,0.00042539937499839196,2238.609375,0.2655637254901961,0.5717948717948719,0.5813626583450889,0.6,0.7244486118577944,"[[ 0  0  1  1  0  0]
 [ 1  0  8  2  0  0]
 [ 0  1 96 38  1  0]
 [ 0  0 39 88  1  0]
 [ 0  0  4 28  8  0]
 [ 0  0  1  0  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.36920780000036757,0.0004302599999988388,2238.68359375,0.2365808823529412,0.5277777777777778,0.5259677419354839,0.571875,0.7143497785403444,"[[ 0  0  1  1  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 97 38  1  0]
 [ 0  0 43 84  1  0]
 [ 0  0  5 33  2  0]
 [ 0  0  1  1  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.451213800000005,0.00045663406250184835,2238.44140625,0.3116412284610814,0.48599028673309813,0.588201872080669,0.428125,0.7192736561110521,"[[ 0  2  0  0  0  0]
 [ 3  3  4  1  0  0]
 [18 13 72 17 10  6]
 [14 15 29 46 19  5]
 [ 0  6  0  8 15 11]
 [ 0  0  0  1  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.3037449999992532,0.000531275624999239,2238.47265625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6434362002135334,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.5512025999996695,0.0004389187500009939,2238.54296875,0.21492034313725492,0.4821922557142019,0.43942454641639567,0.534375,0.6855711147954766,"[[  0   0   1   1   0   0]
 [  0   0   5   6   0   0]
 [  0   0 101  35   0   0]
 [  0   0  58  70   0   0]
 [  0   0   3  37   0   0]
 [  0   0   1   2   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.6579756999999518,0.0004932896874976223,2238.72265625,0.16789215686274508,0.03405953276538641,0.44067398119122253,0.128125,0.35424827740653125,"[[  0   0   0   0   2   0]
 [  0   0   0   0  11   0]
 [  0   0   1   0 135   0]
 [  0   0   0   0 128   0]
 [  0   0   0   0  40   0]
 [  0   0   0   0   3   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.4895323999999164,0.0004607174999989638,2238.671875,0.3491375148544266,0.4016487133919478,0.5733405619462811,0.346875,0.7078978997429037,"[[ 0  2  0  0  0  0]
 [ 2  4  4  1  0  0]
 [13 30 67 10  5 11]
 [12 34 30 22 18 12]
 [ 1  5  0  4 16 14]
 [ 0  1  0  0  0  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'auto')])","('pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.3205517000005784,0.0004782553124982769,2238.65234375,0.21300551470588236,0.4798812750032262,0.4411889180610526,0.528125,0.6777637263759637,"[[ 0  0  0  2  0  0]
 [ 0  0  5  6  0  0]
 [ 0  0 92 44  0  0]
 [ 0  0 51 77  0  0]
 [ 0  0  2 38  0  0]
 [ 0  0  1  2  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'auto')])","('pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.6595304000002216,0.000499832187500715,2238.60546875,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.3480684369425425,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",5,1.4467309999999998,0.00043694593749989965,2238.3359375,0.30011001559714795,0.5321658541357936,0.5794473555741531,0.503125,0.7351031413339303,"[[ 0  0  1  0  1  0]
 [ 2  2  5  1  1  0]
 [ 2 22 78 25  9  0]
 [ 0 22 32 57 17  0]
 [ 0  2  2 10 24  2]
 [ 0  0  2  0  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'scale')])","('pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.6584962999995696,0.0004932012500006522,2238.3359375,0.25,0.22678981937602627,0.2429193319118692,0.21875,0.3466314954196204,"[[ 2  0  0  0  0  0]
 [ 8  0  3  0  0  0]
 [68  0 68  0  0  0]
 [91  0 37  0  0  0]
 [31  0  9  0  0  0]
 [ 1  0  2  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.5265775000007125,0.00046600687500131244,2238.64453125,0.25793551322043967,0.34575098562426515,0.5686955891330892,0.3,0.6906910613362868,"[[ 0  1  0  0  1  0]
 [ 2  4  4  1  0  0]
 [26 20 70  5  7  8]
 [24 30 30 11 16 17]
 [ 1  4  0  1 10 24]
 [ 0  1  0  0  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.6496465000000171,0.0004589515624985552,2238.39453125,0.3185360034165181,0.44571626833185407,0.5807933632323043,0.390625,0.7052976860545394,"[[ 0  2  0  0  0  0]
 [ 1  4  4  1  1  0]
 [10 27 71 16  7  5]
 [15 25 28 31 21  8]
 [ 0  6  0  3 18 13]
 [ 0  0  0  1  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.5034128999996028,0.00045497062500032825,2238.69921875,0.27890671420083185,0.3799837680204892,0.5582470939534399,0.3375,0.6947484142935957,"[[ 0  2  0  0  0  0]
 [ 1  4  4  1  1  0]
 [19 21 75  8  8  5]
 [21 28 33 16 19 11]
 [ 1  5  0  2 12 20]
 [ 0  0  1  0  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'scale')])","('pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.3104414999997971,0.0004739831249992221,2238.453125,0.20419730392156862,0.45950149551345965,0.42168995342648036,0.50625,0.6831175153026362,"[[ 0  0  1  1  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 88 48  0  0]
 [ 0  0 54 74  0  0]
 [ 0  0  3 37  0  0]
 [ 0  0  1  2  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.2984201999997822,0.0004820903125022369,2238.58203125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6864346373510586,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.6495514999996885,0.0004946612499992398,2238.328125,0.2181372549019608,0.1777092165630989,0.27466440422322774,0.1375,0.3518348086241031,"[[  2   0   0   0   0   0]
 [  9   0   2   0   0   0]
 [ 94   0  42   0   0   0]
 [110   0  18   0   0   0]
 [ 38   0   2   0   0   0]
 [  2   0   1   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'citric acid', 'fixed acidity')",5,2.5650057999991986,0.0004059306249985184,2238.62890625,0.30234374999999997,0.5842632043833341,0.5767452926006394,0.6,0.7474417261988594,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  1   1 102  27   5   0]
 [  1   0  50  69   8   0]
 [  1   0   4  14  21   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'citric acid', 'fixed acidity')",5,0.5205428999997821,0.00044187468749896653,2238.6796875,0.2709753787878788,0.4990270663174268,0.5670987144629759,0.453125,0.7526748680250234,"[[ 0  1  1  0  0  0]
 [ 2  3  4  2  0  0]
 [ 8 27 68 24  8  1]
 [ 5 11 31 58 18  5]
 [ 0  5  2  9 16  8]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'citric acid', 'fixed acidity')",5,0.5924526999997397,0.0004956550000002835,2238.8984375,0.37822248217468807,0.22695008712155995,0.5435271001238627,0.18125,0.6890192554656781,"[[ 1  1  0  0  0  0]
 [ 4  4  2  0  1  0]
 [23 45 42  3 12 11]
 [19 39 17  6 13 34]
 [ 3  3  0  1  2 31]
 [ 0  0  0  0  0  3]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'citric acid', 'fixed acidity')",5,0.6526477000006707,0.00045729687499829197,2238.8203125,0.28077512254901965,0.5556072882242133,0.5438422454570446,0.575,0.752198370229263,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 98 31  7  0]
 [ 0  0 54 69  5  0]
 [ 0  0  2 21 17  0]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'citric acid', 'fixed acidity')",5,0.3535681999992448,0.0004318075000014687,2238.671875,0.2675704656862745,0.5602062540344604,0.563293577683371,0.584375,0.7626674497953768,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 97 38  1  0]
 [ 0  0 47 79  2  0]
 [ 0  0  2 27 11  0]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'citric acid', 'fixed acidity')",5,0.3949962000006053,0.00047448656249855504,2238.8203125,0.3391585895721925,0.4942140759257289,0.5990875160464963,0.434375,0.7605486267839093,"[[ 1  1  0  0  0  0]
 [ 3  3  4  1  0  0]
 [14 19 72 19  9  3]
 [12  8 25 49 24 10]
 [ 3  3  0  7 14 13]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'citric acid', 'fixed acidity')",5,0.27877520000038203,0.0005054471874984756,2238.734375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6607874386965225,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'citric acid', 'fixed acidity')",5,0.4701635000001261,0.0004387243750016978,2238.8125,0.22633272058823528,0.5074940047961631,0.4625,0.5625,0.7305127101357851,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 105  31   0   0]
 [  0   0  53  75   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'citric acid', 'fixed acidity')",5,0.7193176999999196,0.0005493706249978913,2238.78515625,0.2534313725490196,0.3035205489669575,0.25032089174125993,0.40625,0.5699831176987816,"[[ 0  0  2  0  0  0]
 [ 0  0  9  0  2  0]
 [ 0  2 98  0 36  0]
 [ 0  2 74  0 52  0]
 [ 0  1  7  0 32  0]
 [ 0  0  1  0  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'citric acid', 'fixed acidity')",5,0.44317140000021027,0.000468974062499683,2238.71484375,0.3855178624480095,0.3855558629959651,0.558695488551839,0.325,0.7505674375524901,"[[ 1  1  0  0  0  0]
 [ 4  3  4  0  0  0]
 [20 28 64 11  9  4]
 [26 13 31 26 15 17]
 [ 4  2  1  4  8 21]
 [ 0  0  0  0  1  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'citric acid', 'fixed acidity')",5,1.5005191999998715,0.0004248218750007027,2238.76171875,0.3019036876114082,0.5421888199852052,0.5794915745484958,0.515625,0.7464534748347562,"[[ 0  1  1  0  0  0]
 [ 1  3  6  1  0  0]
 [ 4 23 79 24  6  0]
 [ 4  6 33 65 20  0]
 [ 0  2  3 12 18  5]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'citric acid', 'fixed acidity')",5,0.6728383999998186,0.0004984346875005485,2238.8046875,0.1708333333333333,0.2605779316131739,0.2442610062893082,0.428125,0.580733421702397,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 127   0   1   0]
 [  0   0  39   0   1   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'citric acid', 'fixed acidity')",5,0.6169371000005412,0.0004658203124989768,2238.62109375,0.3370241941473559,0.4201901288473585,0.5650808701250984,0.353125,0.7397141152025345,"[[ 1  1  0  0  0  0]
 [ 3  3  4  1  0  0]
 [17 22 67 16 10  4]
 [25  8 26 35 23 11]
 [ 6  2  0  4  6 22]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'citric acid', 'fixed acidity')",5,0.3177361000007295,0.0004698053124997159,2238.46484375,0.2099417892156863,0.47096421646395203,0.4292311610956542,0.521875,0.7029028489894779,"[[ 0  0  1  1  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 98 38  0  0]
 [ 0  0 59 69  0  0]
 [ 0  0  3 37  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'citric acid', 'fixed acidity')",5,0.6639530000002196,0.0004967031250004084,2238.828125,0.22549019607843138,0.17905606407322655,0.22179395499618612,0.15625,0.3546254360271812,"[[ 2  0  0  0  0  0]
 [10  0  1  0  0  0]
 [88  0 48  0  0  0]
 [94  0 34  0  0  0]
 [33  0  7  0  0  0]
 [ 1  0  2  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'citric acid', 'fixed acidity')",5,0.489380699999856,0.0004712799999992967,2238.87890625,0.2954355132204397,0.28577177565738665,0.502485222596248,0.23125,0.716429249585141,"[[ 1  1  0  0  0  0]
 [ 3  4  2  0  2  0]
 [24 37 53  8  8  6]
 [25 26 24 11 18 24]
 [ 3  3  0  2  4 28]
 [ 0  0  0  1  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'citric acid', 'fixed acidity')",5,0.5737859000000753,0.0004894259374992771,2238.78125,0.34659462269756386,0.2766233241455368,0.5870073750288908,0.23125,0.7111592582267119,"[[ 1  1  0  0  0  0]
 [ 3  4  3  0  1  0]
 [25 35 56  2  7 11]
 [27 28 27  8 10 28]
 [ 4  3  0  1  3 29]
 [ 0  0  0  0  1  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'citric acid', 'fixed acidity')",5,0.7109165000001667,0.0005268775000018877,2238.70703125,0.2512254901960784,0.20593398235473076,0.19688517995211743,0.221875,0.3169236237932059,"[[ 2  0  0  0  0  0]
 [ 8  0  3  0  0  0]
 [67  0 69  0  0  0]
 [74  0 54  0  0  0]
 [19  0 21  0  0  0]
 [ 1  0  2  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'citric acid', 'fixed acidity')",5,0.41072239999994054,0.0004941481250000379,2238.79296875,0.21875,0.4905275779376498,0.44699999999999995,0.54375,0.7159583377346058,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  34   0   0]
 [  0   0  56  72   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.5374310999995942,0.00011097531250072734,2310.11328125,0.3005514705882353,0.6149055058942172,0.6077608138575072,0.6375,0.8123501318555876,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 105  30   1   0]
 [  0   0  40  84   4   0]
 [  0   0   3  22  15   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.6247118000001137,0.00011315593749827713,2321.72265625,0.3133731617647059,0.6400795610328474,0.6273508781420174,0.6625,0.8138764686529116,"[[  0   0   1   1   0   0]
 [  0   0   7   3   1   0]
 [  0   0 111  24   1   0]
 [  0   1  36  85   6   0]
 [  0   0   3  21  16   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.5216599000004862,0.00010998249999829567,2315.9765625,0.3000612745098039,0.620636506350792,0.6075651526433359,0.64375,0.8152511402191331,"[[  0   0   2   0   0   0]
 [  0   0   7   3   1   0]
 [  0   0 108  26   2   0]
 [  0   1  37  84   6   0]
 [  0   0   4  22  14   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.6924117999997179,0.00011138562500150329,2313.5078125,0.31245404411764705,0.6390509259259259,0.6304191376328144,0.659375,0.8229476183274631,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 106  27   3   0]
 [  0   1  35  89   3   0]
 [  0   0   3  21  16   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.61323640000046,0.00011297093749931263,2320.9453125,0.32461703431372546,0.6557127431458739,0.6458534303046068,0.675,0.8270267216375261,"[[  0   1   1   0   0   0]
 [  0   0   6   4   1   0]
 [  0   0 107  27   2   0]
 [  0   1  33  91   3   0]
 [  0   0   4  18  18   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 3), ('min_child_weight', 5), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.31595480000032694,9.601781250125895e-05,2308.46875,0.28172487745098035,0.5812638125975164,0.5793670903994792,0.60625,0.7653817333867077,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 106  29   1   0]
 [  0   0  50  75   3   0]
 [  0   0   4  23  13   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.39930739999999787,0.00010163062500225805,2310.6875,0.28667279411764707,0.5989573123017553,0.5957711114047839,0.625,0.7971487270545324,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 106  29   1   0]
 [  0   0  43  82   3   0]
 [  0   0   3  25  12   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.5732701000006273,0.00011070062500095901,2308.55078125,0.32542892156862746,0.6625502168302871,0.6501434676434676,0.684375,0.8287884929531006,"[[  0   0   2   0   0   0]
 [  0   0   7   3   1   0]
 [  0   0 110  23   3   0]
 [  0   1  32  92   3   0]
 [  0   0   2  21  17   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.633219100000133,0.00011016750000010233,2320.828125,0.2966452205882353,0.6079234122042341,0.596408371040724,0.628125,0.8212140207019841,"[[  0   1   1   0   0   0]
 [  0   0   5   5   1   0]
 [  0   0 105  28   3   0]
 [  0   1  41  81   5   0]
 [  0   0   4  21  15   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.734346999999616,0.00010926687500045773,2323.6328125,0.31058517156862747,0.6389301265164758,0.6232312607137291,0.6625,0.8096249935605918,"[[  0   0   1   1   0   0]
 [  0   0   7   3   1   0]
 [  0   0 110  24   2   0]
 [  0   0  34  87   7   0]
 [  0   0   3  22  15   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.6157103999994433,0.0001126981250024528,2321.6875,0.3133731617647059,0.6400795610328474,0.6273508781420174,0.6625,0.8138764686529116,"[[  0   0   1   1   0   0]
 [  0   0   7   3   1   0]
 [  0   0 111  24   1   0]
 [  0   1  36  85   6   0]
 [  0   0   3  21  16   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.1), ('gamma', 1.0), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 3), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.6073190999995859,0.00010924500000157878,2321.46875,0.31367953431372547,0.6408047045250609,0.6311078106290873,0.6625,0.8134467741458786,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 107  27   2   0]
 [  0   1  34  89   4   0]
 [  0   0   4  20  16   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.42101220000040485,0.00010177499999883822,2308.46875,0.2988357843137255,0.6174907476582515,0.6090885289466931,0.640625,0.7983665175797152,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 107  27   2   0]
 [  0   1  39  84   4   0]
 [  0   0   3  23  14   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.820471500000167,0.00011040937500013115,2332.671875,0.3220894607843137,0.6498681520411108,0.6378333333333334,0.66875,0.8288471579443122,"[[  0   1   1   0   0   0]
 [  0   0   7   3   1   0]
 [  0   0 106  26   4   0]
 [  0   1  34  90   3   0]
 [  0   0   2  20  18   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 17), ('min_child_weight', 7), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.4746119000001272,0.0001068790624998428,2314.91015625,0.2903645833333333,0.5914513475445926,0.5803917050691244,0.6125,0.800214607416493,"[[  0   0   2   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 102  32   2   0]
 [  0   0  43  79   6   0]
 [  0   0   2  23  15   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.7), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.5180677999996988,0.0001096340624997083,2315.96484375,0.3070925245098039,0.6240644851331874,0.6128543617317141,0.646875,0.8160583923395105,"[[  0   0   2   0   0   0]
 [  0   0   7   3   1   0]
 [  0   0 108  27   1   0]
 [  0   0  40  83   5   0]
 [  0   0   4  20  16   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.025), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.8176498000002539,0.00011532531249827115,2332.62890625,0.3166207107843137,0.6424533213265609,0.6316399025019714,0.6625,0.824649697611154,"[[  0   0   1   1   0   0]
 [  0   0   6   5   0   0]
 [  0   0 106  28   2   0]
 [  0   1  33  89   5   0]
 [  0   0   2  21  17   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.025), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.5794633000004978,0.00011464031249772689,2308.61328125,0.31873468137254907,0.6527586670928022,0.640933806146572,0.675,0.828411451104602,"[[  0   0   2   0   0   0]
 [  0   0   6   4   1   0]
 [  0   0 109  25   2   0]
 [  0   1  32  91   4   0]
 [  0   0   4  20  16   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.1), ('lambda', 1.0), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.678580000000693,0.00011309281250078129,2322.015625,0.33425245098039214,0.6663161949445718,0.6544633178666561,0.684375,0.8341932044547175,"[[  0   1   1   0   0   0]
 [  0   0   6   4   1   0]
 [  0   0 107  26   3   0]
 [  0   1  32  92   3   0]
 [  0   0   2  18  20   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.1), ('lambda', 0.01), ('max_depth', 7), ('min_child_weight', 3), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.5059157000005143,0.00010782374999962485,2315.86328125,0.31386335784313724,0.6361130407954059,0.627410588566601,0.65625,0.8172078363489067,"[[  0   1   1   0   0   0]
 [  0   0   7   3   1   0]
 [  0   0 108  26   2   0]
 [  0   1  39  85   3   0]
 [  0   0   4  19  17   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 25), ('min_child_weight', 7), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.4938756999999896,0.00011029218750024938,2310.7109375,0.30081188725490193,0.6096434589298105,0.6023995077932731,0.63125,0.8137700520597757,"[[  0   0   2   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 105  30   1   0]
 [  0   0  43  81   4   0]
 [  0   0   3  21  16   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.4634332000005088,0.00010458499999970172,2308.77734375,0.30854779411764705,0.6276325511478,0.6195651184061007,0.65,0.8122086763658135,"[[  0   0   2   0   0   0]
 [  0   0   7   3   1   0]
 [  0   0 106  29   1   0]
 [  0   0  39  86   3   0]
 [  0   0   4  20  16   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.01), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 7), ('subsample', 0.6)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.43481859999974404,0.0001068359375011596,2308.9140625,0.30229779411764707,0.6067998391878989,0.5948810046636134,0.628125,0.7993599556211045,"[[  0   0   2   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 106  28   2   0]
 [  0   0  44  78   6   0]
 [  0   0   3  20  17   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 7), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.4245756000000256,0.00010492562500132862,2309.84375,0.2950827205882353,0.6077886264506412,0.6012310351018942,0.63125,0.7988016890791874,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 105  30   1   0]
 [  0   0  41  83   4   0]
 [  0   0   3  23  14   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.05), ('gamma', 0.7), ('lambda', 0.1), ('max_depth', 3), ('min_child_weight', 3), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.3257973999998285,9.549906249901596e-05,2308.90625,0.2831035539215686,0.5848976174164573,0.5855736672178911,0.609375,0.7675311910045981,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 105  30   1   0]
 [  0   0  49  77   2   0]
 [  0   0   3  24  13   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.7), ('eta', 0.025), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 5), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.5113535000000411,0.00011130781249732991,2310.60546875,0.32071078431372546,0.6445566286215978,0.6319841269841269,0.665625,0.8138392846637339,"[[  0   0   2   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 107  27   2   0]
 [  0   0  35  88   5   0]
 [  0   0   3  19  18   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.7), ('lambda', 0.1), ('max_depth', 3), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.33094470000014553,9.490218750158874e-05,2308.7734375,0.28987438725490194,0.5964913044130042,0.5912250905797101,0.61875,0.7697963665984725,"[[  0   0   2   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 105  30   1   0]
 [  0   1  44  79   4   0]
 [  0   0   3  23  14   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.6634535999992295,0.00011278249999975287,2322.83984375,0.31073835784313725,0.6400794244346057,0.6350950149345969,0.6625,0.8252319810836644,"[[  0   0   1   1   0   0]
 [  0   0   6   4   1   0]
 [  0   0 108  28   0   0]
 [  0   1  35  89   3   0]
 [  0   0   2  23  15   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.6208102000000508,0.00011169312500101115,2322.12890625,0.3133731617647059,0.6400795610328474,0.6273508781420174,0.6625,0.8138764686529116,"[[  0   0   1   1   0   0]
 [  0   0   7   3   1   0]
 [  0   0 111  24   1   0]
 [  0   1  36  85   6   0]
 [  0   0   3  21  16   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.025), ('gamma', 0.1), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.6225773999994999,0.00011602749999894968,2323.01171875,0.32542892156862746,0.66289592760181,0.6522222222222223,0.684375,0.8310775632201046,"[[  0   0   1   1   0   0]
 [  0   0   7   4   0   0]
 [  0   0 110  25   1   0]
 [  0   1  30  92   5   0]
 [  0   0   2  21  17   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,2.72857010000007,0.0004219624999990401,2290.9140625,0.28079044117647056,0.5723005885360045,0.567679794520548,0.5875,0.7282637126284872,"[[ 0  0  1  1  0  0]
 [ 1  0  9  1  0  0]
 [ 0  1 91 38  5  1]
 [ 0  0 42 82  4  0]
 [ 0  0  2 22 15  1]
 [ 0  0  1  2  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.5690953000002992,0.00046361718750063117,2291.1015625,0.30954768270944744,0.508922443427114,0.5508876325318413,0.484375,0.7300300088603333,"[[ 0  0  2  0  0  0]
 [ 2  3  4  2  0  0]
 [ 1 16 71 38  9  1]
 [ 1 14 30 56 21  6]
 [ 0  3  2  6 25  4]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.5961857000002055,0.0005087356249987351,2290.10546875,0.4119044303327392,0.3398603482349734,0.5576380104740968,0.265625,0.7107670952317375,"[[ 2  0  0  0  0  0]
 [ 4  5  2  0  0  0]
 [21 26 46 20  6 17]
 [14 21 16 25 11 41]
 [ 1  2  0  1  6 30]
 [ 0  1  0  0  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.6842796000000817,0.00042941062500005954,2290.19921875,0.26795343137254907,0.5629448066490819,0.5730376766091052,0.584375,0.7414902829142438,"[[ 0  1  1  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  1 92 42  1  0]
 [ 0  0 42 84  2  0]
 [ 0  0  2 27 11  0]
 [ 0  0  1  1  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.35620749999998225,0.00044638500000075964,2289.86328125,0.26214767156862745,0.5588830902359606,0.5697576396206532,0.584375,0.7364204041154822,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  1 93 41  1  0]
 [ 0  0 41 85  2  0]
 [ 0  0  2 29  9  0]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.4125624999996944,0.00045892687500099784,2289.8046875,0.362393233808675,0.5092952371341131,0.575513928276025,0.46875,0.7403455828992204,"[[ 0  1  1  0  0  0]
 [ 3  4  4  0  0  0]
 [ 4 15 73 35  5  4]
 [ 4 17 25 50 17 15]
 [ 0  2  2  7 22  7]
 [ 0  0  0  1  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.2756683999996312,0.00048418312500189133,2289.921875,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.674250965436217,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.4917034000000058,0.0004470312499989859,2290.125,0.22526041666666666,0.50535569571192,0.46088802786583705,0.559375,0.7090441734168247,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 102  34   0   0]
 [  0   0  51  77   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.6617570000007618,0.0004969128124997724,2290.11328125,0.35441176470588237,0.15022203417150223,0.2749570465419747,0.2,0.5047524456939843,"[[  2   0   0   0   0   0]
 [  5   0   2   0   4   0]
 [ 20   0  24   0  92   0]
 [ 11   0  11   0 106   0]
 [  0   0   2   0  38   0]
 [  0   0   1   0   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.4424349999999322,0.0004669871874995124,2289.95703125,0.32048286170528817,0.4633583055055852,0.5717519217155844,0.403125,0.7354858840253653,"[[ 0  2  0  0  0  0]
 [ 4  5  2  0  0  0]
 [ 6 17 70 29  4 10]
 [ 7 16 26 41 15 23]
 [ 0  3  1  4 12 20]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.6038200000002689,0.00046364281249964277,2290.06640625,0.3377177101901367,0.4746514047452838,0.5606896246803765,0.425,0.7247809194616454,"[[ 0  2  0  0  0  0]
 [ 2  6  3  0  0  0]
 [ 3 22 70 30  3  8]
 [ 7 15 29 49 14 14]
 [ 0  1  2  7 10 20]
 [ 0  0  0  1  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.6686397000003126,0.0004949103124999965,2290.10546875,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.3360836779952441,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,1.7352466000002096,0.0004336365624993732,2289.96875,0.3168073195187166,0.5605520441420745,0.5831265858183412,0.54375,0.7310397228287371,"[[ 0  1  1  0  0  0]
 [ 2  2  6  1  0  0]
 [ 0 15 81 32  7  1]
 [ 0  8 34 67 15  4]
 [ 0  2  2 10 24  2]
 [ 0  0  1  1  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.6691819999996369,0.0004946143750004239,2290.15625,0.24632352941176472,0.1874415098263492,0.17381977811633267,0.209375,0.3143455686396051,"[[ 2  0  0  0  0  0]
 [10  0  1  0  0  0]
 [71  0 65  0  0  0]
 [63  0 65  0  0  0]
 [14  0 26  0  0  0]
 [ 1  0  2  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.314744299999802,0.0004646706250014176,2290.2578125,0.21897977941176472,0.49124590394982554,0.44802453915698015,0.54375,0.6999901885281093,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 99 37  0  0]
 [ 0  0 53 75  0  0]
 [ 0  0  2 38  0  0]
 [ 0  0  1  2  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.30312750000030064,0.0004773031249982296,2290.20703125,0.22311580882352944,0.5009992962702323,0.45822784810126577,0.553125,0.7144045954061341,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 96 40  0  0]
 [ 0  0 47 81  0  0]
 [ 0  0  3 37  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.4758427999995547,0.0004778396874996815,2290.1796875,0.3357987039512775,0.4204234896031231,0.5651906280315757,0.35,0.7203676822196388,"[[ 1  1  0  0  0  0]
 [ 6  3  2  0  0  0]
 [13 20 66 23  5  9]
 [10 20 25 35 15 23]
 [ 0  4  0  2  6 28]
 [ 0  1  0  0  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.45766640000056213,0.0004637996874976125,2289.87890625,0.3614114490493167,0.4629703327031119,0.5649645109185226,0.40625,0.7214959579554718,"[[ 1  1  0  0  0  0]
 [ 5  3  3  0  0  0]
 [ 7 16 75 27  5  6]
 [ 7 18 28 43 15 17]
 [ 0  4  1  3  7 25]
 [ 0  0  1  0  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.29419640000014624,0.0004838115625005912,2290.21875,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.7143789188782312,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.3096414999999979,0.0004401368749995527,2290.12890625,0.2296262254901961,0.5155732801595214,0.4726546906187624,0.56875,0.7212702887198889,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 96 40  0  0]
 [ 0  0 42 86  0  0]
 [ 0  0  3 37  0  0]
 [ 0  0  0  3  0  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 15), ('p', 3)])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.00216180000006716,0.00030225031250097345,2292.08203125,0.2287377450980392,0.4946601758414405,0.4945833333333334,0.525,0.6727295947958825,"[[ 0  0  1  1  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 94 40  2  0]
 [ 0  0 57 68  3  0]
 [ 0  0  7 27  6  0]
 [ 0  0  1  1  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 13), ('p', 2)])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.002178200000344077,0.00027458124999952816,2292.3203125,0.22647058823529412,0.48468013468013477,0.48323529411764704,0.5125,0.6741104633687957,"[[ 0  0  1  1  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 93 40  3  0]
 [ 0  0 61 64  3  0]
 [ 0  0  7 26  7  0]
 [ 0  0  1  1  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 11), ('p', 2)])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.0021437999994304846,0.00026581562499927713,2292.13671875,0.23844975490196077,0.5079994729007903,0.5138521839442085,0.534375,0.6802076145763061,"[[ 0  0  0  2  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 93 42  1  0]
 [ 0  0 55 70  3  0]
 [ 0  0  7 25  8  0]
 [ 0  0  1  1  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 11), ('p', 3)])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.002178700000513345,0.00029952718749939324,2292.30859375,0.23287377450980387,0.5064545961520588,0.5035655134339345,0.534375,0.6852095094712161,"[[ 0  0  0  2  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 91 43  2  0]
 [ 0  1 49 74  4  0]
 [ 0  0  6 28  6  0]
 [ 0  0  1  1  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 3), ('p', 3)])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.0021868000003451016,0.0002809481249983037,2292.35546875,0.23406862745098037,0.500170068027211,0.5001981731673976,0.509375,0.6693072968323408,"[[ 0  0  1  1  0  0]
 [ 2  0  5  4  0  0]
 [ 2  4 89 38  3  0]
 [ 1  4 50 64  9  0]
 [ 0  1 12 16 10  1]
 [ 0  0  1  1  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 9), ('p', 2)])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.002134700000169687,0.00026521593750032934,2292.08203125,0.24480698529411762,0.5230871043371044,0.5203897270114942,0.55,0.6826075757248204,"[[ 0  0  0  2  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 95 39  2  0]
 [ 0  0 51 73  4  0]
 [ 0  0  6 26  8  0]
 [ 0  0  1  1  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 9), ('p', 3)])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.0021569000000454253,0.0002871874999982538,2292.49609375,0.24090073529411762,0.5144855269109,0.5128556910569106,0.540625,0.6832650600942816,"[[ 0  0  0  2  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 95 38  2  0]
 [ 0  0 54 70  4  0]
 [ 0  0  7 25  8  0]
 [ 0  0  1  1  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 5), ('p', 2)])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.002143400000022666,0.0002662003125010415,2292.1796875,0.24440870098039214,0.5121710589295446,0.5064794798805459,0.534375,0.6765025580742162,"[[ 0  0  0  2  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 90 43  3  0]
 [ 0  0 52 71  5  0]
 [ 0  0  9 21 10  0]
 [ 0  0  1  1  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 5), ('p', 3)])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.002156499999728112,0.00028307999999981347,2292.2890625,0.24451593137254904,0.5081975376607777,0.5089669194293932,0.528125,0.6690942649645552,"[[ 0  0  0  2  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 92 42  1  0]
 [ 0  0 57 66  5  0]
 [ 0  1  7 21 11  0]
 [ 0  0  1  1  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 3), ('p', 2)])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.002204899999924237,0.0002636725000002116,2292.40625,0.24125306372549019,0.5079425476484299,0.5089167171411265,0.5125,0.6663163419825088,"[[ 0  0  1  0  1  0]
 [ 1  0  5  5  0  0]
 [ 2  5 87 40  2  0]
 [ 1  6 46 65 10  0]
 [ 0  1 10 16 12  1]
 [ 0  0  1  1  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 17), ('p', 2)])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.0021256999998513493,0.00027233343750197034,2292.07421875,0.23795955882352945,0.5109326574757593,0.5157756339307252,0.540625,0.6847492371439515,"[[ 0  0  1  1  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 96 38  2  0]
 [ 0  0 56 70  2  0]
 [ 0  0  7 26  7  0]
 [ 0  0  1  1  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 7), ('p', 2)])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.0021933000007265946,0.00027391312499958076,2292.3125,0.22506127450980387,0.48821548821548816,0.48267770876466526,0.515625,0.6660254707431805,"[[ 0  0  0  2  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 91 43  1  0]
 [ 0  0 55 68  5  0]
 [ 0  0  8 26  6  0]
 [ 0  0  1  0  2  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 13), ('p', 3)])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.002187200000662415,0.0003004918750008301,2292.26171875,0.228890931372549,0.4958461993032082,0.49215378065952775,0.525,0.6768591294548492,"[[ 0  0  1  1  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 92 41  3  0]
 [ 0  0 55 70  3  0]
 [ 0  0  6 28  6  0]
 [ 0  0  1  1  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 17), ('p', 3)])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.002201999999670079,0.0003061250000001792,2292.06640625,0.2329044117647059,0.499276235460446,0.5050181159420291,0.528125,0.6763382831981121,"[[ 0  0  1  1  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 94 40  2  0]
 [ 0  0 58 68  2  0]
 [ 0  0  8 25  7  0]
 [ 0  0  1  1  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 7), ('p', 3)])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.002176800000597723,0.00029932718749989815,2292.34765625,0.22922794117647058,0.49299389963596607,0.4887605148474713,0.51875,0.6736411527455766,"[[ 0  0  0  2  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 91 42  2  0]
 [ 0  0 56 68  4  0]
 [ 0  0  6 27  7  0]
 [ 0  0  1  0  2  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=15)","OrderedDict([('n_neighbors', 15), ('p', 2)])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",5,0.002161500000511296,0.0002778765624981361,2292.3828125,0.2365042892156863,0.507275694747895,0.5079773736169085,0.5375,0.6699568188307936,"[[ 0  0  1  1  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 98 36  2  0]
 [ 0  0 58 67  3  0]
 [ 0  0  7 26  7  0]
 [ 0  0  1  1  1  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 5), ('subsample', 0.8)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.5409540999999081,0.00011008312499996009,2348.66015625,0.3090379901960784,0.6239975850192011,0.6149675324675326,0.64375,0.8079847940231619,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   1 103  29   3   0]
 [  0   0  37  86   5   0]
 [  0   0   3  20  17   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.6141428999999334,0.00011129187500102944,2361.78515625,0.30484068627450983,0.6269302374893058,0.6338051887421636,0.646875,0.8072746750548958,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   1 100  35   0   0]
 [  0   0  33  92   3   0]
 [  0   0   3  22  15   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.7)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.5070770000002085,0.0001099412499996788,2355.984375,0.28877144607843136,0.6007600062447553,0.6031239042722887,0.621875,0.7995516531498782,"[[ 0  1  1  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  1 99 36  0  0]
 [ 0  0 36 87  5  0]
 [ 0  0  3 24 13  0]
 [ 0  0  1  2  0  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 3), ('subsample', 0.9)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.6783691999999064,0.0001105649999999514,2361.453125,0.3129442401960784,0.6342898370012341,0.6275972222222224,0.653125,0.8133940098719126,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   1 103  30   2   0]
 [  0   0  34  89   5   0]
 [  0   0   3  20  17   0]
 [  0   0   0   3   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.6443787000007433,0.00011232437499870684,2360.96875,0.3208639705882353,0.6469187675070028,0.6430138803837517,0.665625,0.8162824301856226,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   1 105  29   1   0]
 [  0   0  34  90   4   0]
 [  0   0   3  19  18   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 3), ('min_child_weight', 5), ('subsample', 0.7)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.5104486999998699,8.151093750257133e-05,2350.9453125,0.27858455882352945,0.5753660685785704,0.5900060230597143,0.596875,0.7559598877855156,"[[ 0  0  1  1  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 96 39  1  0]
 [ 0  0 45 82  1  0]
 [ 0  0  4 23 13  0]
 [ 0  0  1  2  0  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 5), ('subsample', 0.8)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.4734914000000572,0.00010834375000001728,2348.75390625,0.2920802696078431,0.5907796678540418,0.5966024436090225,0.609375,0.7817951119209162,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   1 100  35   0   0]
 [  0   0  46  79   3   0]
 [  0   0   3  21  16   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.9)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.5645351000002847,0.00011077718749845644,2348.5234375,0.31171875,0.6313156156771652,0.6266996192852801,0.65,0.8173534190868743,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   1 102  31   2   0]
 [  0   0  35  89   4   0]
 [  0   0   3  20  17   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.6210760000003575,0.00011065062500108525,2361.24609375,0.3229932598039216,0.6400645310571782,0.6375555555555557,0.65625,0.8087874000369115,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   1 101  34   0   0]
 [  0   0  35  89   4   0]
 [  0   0   3  17  20   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.7)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.7283227999996598,0.00011022312500017506,2363.765625,0.29129901960784316,0.606550090166389,0.6120341514089079,0.628125,0.7967416298968187,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   1 100  35   0   0]
 [  0   0  36  88   4   0]
 [  0   0   3  24  13   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.015), ('gamma', 0.5), ('lambda', 1.0), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.8)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.649944200000391,0.00011491281250073371,2361.48828125,0.3106464460784314,0.6295377780464217,0.6243456457925636,0.646875,0.8166891073379906,"[[ 0  1  1  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  2 99 32  3  0]
 [ 0  0 33 91  4  0]
 [ 0  0  3 20 17  0]
 [ 0  0  1  2  0  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.025), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 7), ('subsample', 0.6)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.40615669999988313,0.00010551906250100274,2348.80859375,0.2908547794117647,0.5868492097535907,0.5857669370789493,0.60625,0.7882206806195662,"[[ 0  0  1  1  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 99 36  1  0]
 [ 0  0 45 79  4  0]
 [ 0  0  2 22 16  0]
 [ 0  0  1  2  0  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 3), ('subsample', 0.9)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.41497590000017226,0.00010292218750009851,2349.91796875,0.28668811274509803,0.5846344548444219,0.5890211377500354,0.603125,0.7780320967357778,"[[ 0  1  1  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  1 99 36  0  0]
 [ 0  0 45 79  4  0]
 [ 0  0  4 21 15  0]
 [ 0  0  1  2  0  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.9)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.7855570000001535,0.00011208249999867803,2364.37890625,0.31711090686274507,0.6379867377428352,0.6306048876037684,0.65625,0.81891802566191,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   1 103  30   2   0]
 [  0   0  34  89   5   0]
 [  0   0   3  19  18   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 17), ('min_child_weight', 7), ('subsample', 0.7)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.4844628000000739,0.00010700093749846929,2355.34375,0.2956495098039216,0.6037899572111755,0.6026207525351361,0.625,0.7856659120389743,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   0 101  34   1   0]
 [  0   0  40  84   4   0]
 [  0   0   2  23  15   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.9), ('eta', 0.01), ('gamma', 0.7), ('lambda', 0.01), ('max_depth', 7), ('min_child_weight', 1), ('subsample', 0.9)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.585635800000091,0.00010427968749979755,2348.828125,0.31083026960784316,0.6232601346992491,0.6166899766899767,0.640625,0.8101433567264525,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   1 100  33   2   0]
 [  0   0  36  87   5   0]
 [  0   0   3  19  18   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.025), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 1), ('subsample', 0.8)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.45580689999951574,0.00010163031249987853,2348.7421875,0.29345894607843137,0.5949132932739601,0.6013478602917204,0.6125,0.7920240949814977,"[[ 0  1  1  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  1 99 36  0  0]
 [ 0  0 44 81  3  0]
 [ 0  0  4 20 16  0]
 [ 0  0  1  2  0  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.05), ('lambda', 1.0), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 0.6)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.6682642000005217,0.00011578593749845822,2362.28515625,0.3113817401960784,0.6364462042023018,0.6375197098707033,0.65625,0.8213054839227235,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   1 103  31   1   0]
 [  0   0  34  91   3   0]
 [  0   0   4  20  16   0]
 [  0   0   0   3   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.05), ('lambda', 1.0), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.9)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.7700945999995383,0.00012041124999768726,2363.70703125,0.3358609068627451,0.6699587584238802,0.6635684814457535,0.6875,0.8312662156885458,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   1 103  31   1   0]
 [  0   0  26  97   5   0]
 [  0   0   1  19  20   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.6)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.7151292999997167,0.0001117028125008801,2362.609375,0.29653799019607846,0.6132469279098695,0.6207915301399074,0.634375,0.805839992904344,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   1 103  32   0   0]
 [  0   0  39  86   3   0]
 [  0   0   3  23  14   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.6), ('eta', 0.025), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 1.0)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.6965203999998266,0.00011217499999816027,2364.125,0.31416973039215684,0.6363603448945783,0.6355966064586754,0.65625,0.8125458862342763,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   1 104  30   1   0]
 [  0   0  36  89   3   0]
 [  0   0   2  21  17   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.6), ('eta', 0.025), ('gamma', 0.05), ('lambda', 0.01), ('max_depth', 3), ('min_child_weight', 1), ('subsample', 0.9)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.33909480000056647,9.35543749989165e-05,2348.87109375,0.26910232843137255,0.5656162803927274,0.5855916421899393,0.5875,0.7579308858556264,"[[ 0  1  1  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  1 94 40  1  0]
 [ 0  0 44 83  1  0]
 [ 0  0  3 26 11  0]
 [ 0  0  1  2  0  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.1), ('gamma', 0.1), ('lambda', 1.0), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.7)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.5141346999998859,0.00010989749999907872,2356.09375,0.28877144607843136,0.6007600062447553,0.6031239042722887,0.621875,0.7995516531498782,"[[ 0  1  1  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  1 99 36  0  0]
 [ 0  0 36 87  5  0]
 [ 0  0  3 24 13  0]
 [ 0  0  1  2  0  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 3), ('subsample', 0.8)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.6346281999994972,0.000113620312501439,2361.05078125,0.31253063725490193,0.6390625,0.6304399864096861,0.659375,0.8215494889494908,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   1 105  27   3   0]
 [  0   0  33  90   5   0]
 [  0   0   3  21  16   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.7), ('lambda', 0.01), ('max_depth', 3), ('min_child_weight', 7), ('subsample', 0.9)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.32960000000002765,9.514968750181651e-05,2349.07421875,0.2681372549019608,0.5568246866924167,0.5809109311740891,0.578125,0.7645578271176895,"[[ 0  0  1  1  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 93 43  0  0]
 [ 0  0 47 80  1  0]
 [ 0  0  4 24 12  0]
 [ 0  0  1  2  0  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 3), ('subsample', 0.8)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.5065438999999969,0.00010643375000256583,2356.0,0.3120557598039216,0.6266546199669725,0.6265442504515352,0.64375,0.8039076961034114,"[[  0   1   1   0   0   0]
 [  0   0   9   2   0   0]
 [  0   1 101  34   0   0]
 [  0   0  37  87   4   0]
 [  0   0   3  19  18   0]
 [  0   0   0   3   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.1), ('gamma', 0.05), ('lambda', 1.0), ('max_depth', 3), ('min_child_weight', 1), ('subsample', 0.8)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.3281189999997878,9.309437499780416e-05,2348.94921875,0.2702512254901961,0.5682703866084335,0.5876617038875103,0.590625,0.7550315853788409,"[[ 0  1  1  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  1 96 39  0  0]
 [ 0  0 44 82  2  0]
 [ 0  0  4 25 11  0]
 [ 0  0  1  2  0  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.7), ('lambda', 0.1), ('max_depth', 25), ('min_child_weight', 7), ('subsample', 0.7)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.4804208000005019,0.00010518062499897951,2349.18359375,0.2981004901960784,0.6093875906526994,0.6076923076923076,0.63125,0.7932459418241574,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   0 103  32   1   0]
 [  0   0  40  84   4   0]
 [  0   0   2  23  15   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.9), ('eta', 0.015), ('gamma', 0.05), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 5), ('subsample', 0.9)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.5052427000000534,0.00010962281249931039,2355.9375,0.3064338235294118,0.6179511714695977,0.6129395791038175,0.6375,0.8071281398579322,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   1 103  30   2   0]
 [  0   0  40  84   4   0]
 [  0   0   3  20  17   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.05), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 7), ('subsample', 0.9)])","('density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.4717337000001862,0.00010907093750063268,2355.28515625,0.30398284313725493,0.6113663884797906,0.605946506528653,0.63125,0.7999237614429825,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   0 101  33   2   0]
 [  0   0  40  84   4   0]
 [  0   0   3  20  17   0]
 [  0   0   1   2   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",5,2.7988547000004473,0.0004422418749982171,2326.3828125,0.2608609068627451,0.5394577771658134,0.5295236686390533,0.5625,0.7202094787914093,"[[  0   0   0   2   0   0]
 [  1   0   8   2   0   0]
 [  0   0 103  31   2   0]
 [  1   0  54  65   8   0]
 [  0   0   4  24  12   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",5,0.569689500000095,0.0004521299999993289,2326.58984375,0.37245989304812827,0.5215422141724357,0.5870013961925726,0.4875,0.7314577927742302,"[[ 1  1  0  0  0  0]
 [ 2  2  4  2  1  0]
 [ 5 15 82 22  9  3]
 [ 9 14 36 48 17  4]
 [ 0  5  1  5 23  6]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",5,0.6034654000004593,0.0005000668750000159,2326.59375,0.20865688131313131,0.25041968475119114,0.4895221185064934,0.2,0.66155581712056,"[[ 0  2  0  0  0  0]
 [ 2  5  2  1  1  0]
 [19 42 51  5  7 12]
 [20 45 17  5 11 30]
 [ 3  5  0  1  2 29]
 [ 0  1  0  0  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",5,0.6784866999996666,0.0004578881250012046,2326.6953125,0.2513480392156863,0.5327021516278022,0.5332187337830825,0.559375,0.7280411942355329,"[[ 0  0  1  1  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 98 37  1  0]
 [ 0  0 53 72  3  0]
 [ 0  0  3 28  9  0]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",5,0.38850410000031843,0.0004460681250009202,2326.73046875,0.24471507352941177,0.5358126801953644,0.5303132108855001,0.571875,0.7300729497094884,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   0 103  31   2   0]
 [  0   0  51  75   2   0]
 [  0   0   2  33   5   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",5,0.44843829999990703,0.0004645374999995511,2326.5,0.3519496434937612,0.48959045605787715,0.6119555531274281,0.43125,0.7353494565139868,"[[ 1  1  0  0  0  0]
 [ 4  3  3  1  0  0]
 [18 17 75 15  6  5]
 [16 14 31 40 17 10]
 [ 0  5  1  4 19 11]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",5,0.27734249999957683,0.0004855434375002687,2326.41796875,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6136787824211216,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",5,0.5380146999996214,0.00045087906249818843,2326.49609375,0.2097886029411765,0.4699899970579583,0.4279776650544611,0.521875,0.6872306460025476,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 100  36   0   0]
 [  0   0  61  67   0   0]
 [  0   0   3  37   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",5,0.6642817000001742,0.0004995490624992271,2326.5,0.2512254901960784,0.303768115942029,0.24354066985645934,0.415625,0.4912763504889243,"[[  0   0   2   0   0   0]
 [  0   0   9   0   2   0]
 [  0   0 103   0  33   0]
 [  0   1  84   0  43   0]
 [  0   0  10   0  30   0]
 [  0   0   1   0   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",5,0.46950399999968795,0.0004700325000015937,2326.37890625,0.3954123031788473,0.3948241103371301,0.5842631040928734,0.35,0.7015258436222078,"[[ 1  1  0  0  0  0]
 [ 4  2  4  1  0  0]
 [20 15 77  9 10  5]
 [23 20 31 17 16 21]
 [ 2  3  1  0 13 21]
 [ 0  0  0  0  1  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",5,0.6494074000002001,0.0004605859375004684,2326.7109375,0.3507190470885324,0.3906656860983544,0.5172494839063027,0.3375,0.7048350565575093,"[[ 1  1  0  0  0  0]
 [ 2  3  4  2  0  0]
 [22 14 65 21  7  7]
 [20 16 30 25 22 15]
 [ 1  2  1  1 13 22]
 [ 0  0  0  1  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",5,1.5685240000002523,0.000483515937500556,2326.28515625,0.294946245543672,0.5401492502020672,0.5815878148704737,0.51875,0.719876896377954,"[[ 0  0  0  1  1  0]
 [ 2  1  5  3  0  0]
 [ 3 14 87 20 11  1]
 [ 4 14 44 53 12  1]
 [ 0  5  1  7 25  2]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",5,0.5098814000002676,0.00048053062500059697,2326.7890625,0.24277146464646462,0.32658875912539376,0.5282247664616087,0.278125,0.6806869418860189,"[[ 0  2  0  0  0  0]
 [ 2  5  3  1  0  0]
 [27 21 68  6  8  6]
 [31 27 29 12  9 20]
 [ 5  2  0  2  3 28]
 [ 0  0  0  1  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",5,0.6578446000003169,0.0004996640624995053,2326.546875,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.35623879346876897,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",5,0.2956347999997888,0.0004950134374979598,2326.34765625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6791591221423576,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",5,0.37152640000022075,0.0004666853125002035,2326.4296875,0.20090379901960786,0.4501012062371285,0.4097233691164327,0.5,0.6704056521651071,"[[ 0  0  1  1  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 97 39  0  0]
 [ 0  0 65 63  0  0]
 [ 0  0  2 38  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",5,0.6557562999996662,0.0005011134374996118,2326.75390625,0.22303921568627452,0.17783231474407946,0.23279106133979016,0.15,0.3652781437507152,"[[ 2  0  0  0  0  0]
 [10  0  1  0  0  0]
 [90  0 46  0  0  0]
 [99  0 29  0  0  0]
 [33  0  7  0  0  0]
 [ 2  0  1  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",5,0.5002265000002808,0.0004760340624983428,2326.6640625,0.3306516451277481,0.37307867836783226,0.5260662289602507,0.325,0.6857073096429191,"[[ 1  1  0  0  0  0]
 [ 3  3  4  1  0  0]
 [24 13 72 13  8  6]
 [24 20 33 19 19 13]
 [ 2  2  1  1  8 26]
 [ 0  0  0  1  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",5,0.32787459999963176,0.00045182812500002003,2326.6484375,0.21338848039215685,0.47708421797593764,0.4342300996993195,0.53125,0.704878521912113,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  32   0   0]
 [  0   0  62  66   0   0]
 [  0   0   3  37   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",5,0.3152575000003708,0.0004859181249997846,2326.69921875,0.20963541666666666,0.4690610859728507,0.4268623737373738,0.521875,0.68791781962977,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  34   0   0]
 [  0   0  63  65   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",5,0.9618539000002784,0.00044817406250103887,2326.7578125,0.21648284313725488,0.48288786482334867,0.4980842911877394,0.53125,0.6948388584399049,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  34   1   0]
 [  0   0  60  68   0   0]
 [  0   0   3  36   1   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,1.9543929000001299,0.00040953968749875004,2327.3828125,0.3902113970588235,0.6112859195402299,0.5975784632034633,0.628125,0.7727682171603145,"[[  1   0   1   0   0   0]
 [  1   0   8   2   0   0]
 [  0   0 104  30   2   0]
 [  1   0  38  77  12   0]
 [  0   0   3  18  19   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.48997569999937696,0.00044125750000034714,2327.31640625,0.33139343805704097,0.5283574151925872,0.5897931012807099,0.496875,0.7800746354009845,"[[ 0  1  1  0  0  0]
 [ 2  4  5  0  0  0]
 [ 8 19 72 32  5  0]
 [ 4 11 25 57 29  2]
 [ 0  3  0  7 26  4]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.6426964000002044,0.0005050362499986249,2327.3203125,0.2991862559417706,0.30530071565341815,0.5757082753412708,0.240625,0.7022659731653091,"[[ 0  2  0  0  0  0]
 [ 2  6  1  0  2  0]
 [21 40 54  7  2 12]
 [18 44 13 11 11 31]
 [ 2  6  0  2  4 26]
 [ 0  0  0  1  0  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.5561931000002005,0.0004131431249987827,2327.2265625,0.28877144607843136,0.6001749759923176,0.5887335677514248,0.621875,0.7849646092473109,"[[ 0  0  2  0  0  0]
 [ 1  0 10  0  0  0]
 [ 0  0 99 35  2  0]
 [ 0  0 34 87  7  0]
 [ 0  0  3 24 13  0]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.3242463000005955,0.00043086375000029876,2327.38671875,0.2820006127450981,0.5885223222480572,0.5839444984104557,0.6125,0.7834282493249307,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 99 36  1  0]
 [ 0  0 39 85  4  0]
 [ 0  0  2 26 12  0]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.4047816000002058,0.00047065406249942044,2327.140625,0.2886851047237077,0.5060735937514558,0.5864471000601832,0.45625,0.7765741964396653,"[[ 0  2  0  0  0  0]
 [ 3  4  4  0  0  0]
 [16 14 72 26  6  2]
 [ 9  6 29 53 26  5]
 [ 0  3  0  6 17 14]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.2859627999996519,0.0005032437499977504,2327.125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6605094069364494,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.41501510000034614,0.00047160437499940147,2327.21484375,0.21882659313725492,0.4911625148279953,0.447885601346327,0.54375,0.7447955226329992,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   0 101  35   0   0]
 [  0   0  55  73   0   0]
 [  0   0   1  39   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.6843072000001484,0.0005229153125014818,2327.31640625,0.16666666666666666,0.02777777777777778,0.015625,0.125,0.4334910410709919,"[[  0   0   0   0   2   0]
 [  0   0   0   0  11   0]
 [  0   0   0   0 136   0]
 [  0   0   0   0 128   0]
 [  0   0   0   0  40   0]
 [  0   0   0   0   3   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.46352329999990616,0.0004961893749992896,2327.453125,0.38296243686868686,0.43062673729871187,0.5745924856001813,0.38125,0.7593634750039034,"[[ 0  2  0  0  0  0]
 [ 2  5  4  0  0  0]
 [14 29 68 17  4  4]
 [12 19 29 29 29 10]
 [ 1  4  0  2 18 15]
 [ 0  0  0  0  1  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.6854252000002816,0.0005159212499989962,2327.43359375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.2935924560756685,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.46471769999971,0.00048403656250002315,2327.30859375,0.30090426322043967,0.42494664884553834,0.5801082905669599,0.36875,0.7422644361403508,"[[ 0  2  0  0  0  0]
 [ 3  4  4  0  0  0]
 [21 22 70 14  7  2]
 [19 16 31 28 24 10]
 [ 1  4  0  2 15 18]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.3113802999996551,0.0004723221874996852,2327.453125,0.22418811274509806,0.503734984984985,0.4604687500000001,0.55625,0.7373703003308112,"[[ 0  0  1  1  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 99 37  0  0]
 [ 0  0 49 79  0  0]
 [ 0  0  2 38  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.5110419000002366,0.00048054187500099486,2327.390625,0.26541100341651813,0.37926336201056765,0.5572621365487181,0.325,0.7336809006671027,"[[ 0  2  0  0  0  0]
 [ 3  4  3  0  1  0]
 [25 19 71 12  4  5]
 [21 20 32 19 19 17]
 [ 1  5  0  1  9 24]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.5670444999996107,0.0004659346875001802,2327.6953125,0.3441807783719548,0.46876816559696766,0.584828256900156,0.41875,0.7480193509545788,"[[ 0  2  0  0  0  0]
 [ 2  5  4  0  0  0]
 [11 27 70 20  5  3]
 [10 14 32 40 28  4]
 [ 0  5  0  2 18 15]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.6710788000000321,0.0005084643749995621,2327.8359375,0.20955882352941177,0.1558527952624664,0.2705017152658662,0.115625,0.3175998689763493,"[[  2   0   0   0   0   0]
 [ 10   0   1   0   0   0]
 [101   0  35   0   0   0]
 [113   0  15   0   0   0]
 [ 37   0   3   0   0   0]
 [  2   0   1   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,1.3463643000004595,0.00042327875000012225,2327.66796875,0.327407809714795,0.5820875995150394,0.6116757364602192,0.5625,0.7732173806970305,"[[ 0  1  1  0  0  0]
 [ 2  2  7  0  0  0]
 [ 2 14 82 33  5  0]
 [ 0 10 26 71 21  0]
 [ 0  2  1  8 25  4]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.3041854000002786,0.00045874406249879485,2327.58203125,0.23192401960784315,0.5212328767123288,0.47731394621638523,0.575,0.7606997414238126,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 100  36   0   0]
 [  0   0  44  84   0   0]
 [  0   0   1  39   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.30581469999924593,0.0005151299999994307,2327.62890625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.7336556877221339,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.3469641000001502,0.0004556184374990835,2327.57421875,0.2197457107843137,0.4917232277526395,0.44763257575757576,0.546875,0.7327584163868767,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   0 106  30   0   0]
 [  0   0  59  69   0   0]
 [  0   0   1  39   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.6680408000001989,0.00043857593749976333,2327.625,0.23025428921568628,0.509163903943805,0.545349903765187,0.55,0.7462019070311869,"[[ 0  0  2  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 98 38  0  0]
 [ 0  0 53 75  0  0]
 [ 0  0  1 36  3  0]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.29229859999941255,0.0005079987499982507,2327.66015625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.7291047562430524,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.668949199999588,0.0005067778124981714,2327.71484375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.314721050122551,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
QuadraticDiscriminantAnalysis(),"OrderedDict([('priors', None)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",8,0.0020547000003716676,2.9591562500286274e-05,2331.71484375,0.2548560049019608,0.5384333218023822,0.5561872866998399,0.55,0.7101842552173772,"[[ 0  0  0  2  0  0]
 [ 0  0  5  6  0  0]
 [ 0  1 76 58  1  0]
 [ 0  2 26 89  9  2]
 [ 0  0  0 27 11  2]
 [ 0  0  0  1  2  0]]"
"LogisticRegression(C=0.01, n_jobs=-1)","OrderedDict([('C', 1000.0)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.050804400000743044,2.578124999956799e-05,2332.37890625,0.23751531862745098,0.5200875777140124,0.5357245807127883,0.553125,0.7053927439519925,"[[ 0  0  1  1  0  0]
 [ 0  0  5  6  0  0]
 [ 0  0 95 40  1  0]
 [ 0  0 50 77  1  0]
 [ 0  0  1 34  5  0]
 [ 0  0  1  1  1  0]]"
"LogisticRegression(C=0.01, n_jobs=-1)","OrderedDict([('C', 100.0)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.056692199999815784,2.742000000068856e-05,2332.3125,0.24168198529411763,0.5254086249884569,0.5421589310829817,0.55625,0.7049670270652105,"[[ 0  0  1  1  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 95 40  1  0]
 [ 0  0 50 77  1  0]
 [ 0  0  1 33  6  0]
 [ 0  0  0  2  1  0]]"
"LogisticRegression(C=0.01, n_jobs=-1)","OrderedDict([('C', 1.0)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.050958900000296126,2.714843749913598e-05,2331.94921875,0.2114736519607843,0.4755818318318318,0.43484375000000003,0.525,0.6908992145434585,"[[ 0  0  1  1  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 95 41  0  0]
 [ 0  0 55 73  0  0]
 [ 0  0  2 38  0  0]
 [ 0  0  1  2  0  0]]"
"LogisticRegression(C=0.01, n_jobs=-1)","OrderedDict([('C', 10.0)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.05875879999985045,2.5635312502458875e-05,2332.26171875,0.232046568627451,0.5113554172668013,0.5243175056874526,0.546875,0.704110299033873,"[[ 0  0  1  1  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 95 40  1  0]
 [ 0  0 51 76  1  0]
 [ 0  0  1 35  4  0]
 [ 0  0  1  1  1  0]]"
"LogisticRegression(C=0.01, n_jobs=-1)","OrderedDict([('C', 0.001)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.017759700000169687,2.791687500121043e-05,2332.21875,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6390656908154433,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"LogisticRegression(C=0.01, n_jobs=-1)","OrderedDict([('C', 0.1)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.02124459999959072,2.7691249999861612e-05,2332.09765625,0.20435049019607843,0.4554119318181818,0.41437819693094635,0.509375,0.663313203159337,"[[  0   0   1   1   0   0]
 [  0   0   7   4   0   0]
 [  0   0 103  33   0   0]
 [  0   0  68  60   0   0]
 [  0   0   4  36   0   0]
 [  0   0   1   2   0   0]]"
"LogisticRegression(C=0.01, n_jobs=-1)","OrderedDict([('C', 0.01)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.015452300000106334,2.7721874999997453e-05,2332.30078125,0.17225796568627452,0.3069545967789861,0.31198275862068964,0.4375,0.6430791452682618,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 131   5   0   0]
 [  0   0 119   9   0   0]
 [  0   0  25  15   0   0]
 [  0   0   2   1   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,2.4508703999999852,0.00042554812499986385,2332.734375,0.29192708333333334,0.5955213636641421,0.5880290677064871,0.609375,0.7725996169564178,"[[  0   0   2   0   0   0]
 [  2   0   6   2   1   0]
 [  0   1 102  32   1   0]
 [  0   2  41  77   8   0]
 [  0   1   4  18  16   1]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.4987439999995331,0.0004654871875004574,2332.61328125,0.3852931892453952,0.5663653904310324,0.6032355839019827,0.54375,0.7801474911448424,"[[ 0  0  2  0  0  0]
 [ 2  3  4  2  0  0]
 [ 3 18 76 33  5  1]
 [ 0  9 25 70 22  2]
 [ 0  3  2  9 24  2]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.6260234999999739,0.0005263190625015568,2332.70703125,0.4546062648544266,0.3390026127413001,0.5266446503689599,0.271875,0.7325822906430662,"[[ 2  0  0  0  0  0]
 [ 4  4  2  0  1  0]
 [20 26 50 25  6  9]
 [13 19 17 23 14 42]
 [ 0  3  0  1  6 30]
 [ 0  1  0  0  0  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.6022075000000768,0.000424780937498781,2332.6171875,0.3124860739750446,0.6165760006253023,0.6302734767565393,0.63125,0.7880100169163379,"[[ 0  1  1  0  0  0]
 [ 1  1  7  2  0  0]
 [ 0  0 96 39  1  0]
 [ 0  0 36 90  2  0]
 [ 0  1  1 23 15  0]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.3372519000004104,0.0004394603125007279,2332.94921875,0.30254289215686275,0.6196176911544228,0.6276940035273368,0.640625,0.7892851531057493,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 96 39  1  0]
 [ 0  0 33 94  1  0]
 [ 0  0  1 24 15  0]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.38911860000007437,0.0004795878124980391,2332.79296875,0.3911769347890672,0.5585279228368355,0.6132898221737507,0.525,0.7793736450203805,"[[ 0  1  1  0  0  0]
 [ 2  4  5  0  0  0]
 [ 2 19 78 31  4  2]
 [ 3 11 25 61 19  9]
 [ 0  2  1  7 24  6]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.2852419999999256,0.0005120159374996547,2332.7265625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6839777670449425,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.4024315000006027,0.000458245624997744,2332.65625,0.2267156862745098,0.5090111231050829,0.4648773245819659,0.5625,0.7360010464532913,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 100  36   0   0]
 [  0   0  48  80   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.6817252999999255,0.0005194896874996857,2332.703125,0.34264705882352936,0.0909402898052035,0.22169188167594403,0.1625,0.3085789835949128,"[[  2   0   0   0   0   0]
 [  2   0   3   0   6   0]
 [  3   0  11   0 122   0]
 [  1   0   7   0 120   0]
 [  0   0   1   0  39   0]
 [  0   0   1   0   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.42796399999951973,0.00048613031250113183,2332.8203125,0.3251842877302436,0.48472750822817157,0.6035696185473302,0.428125,0.7697947799898361,"[[ 0  2  0  0  0  0]
 [ 3  4  4  0  0  0]
 [ 6 22 76 20  7  5]
 [10  8 28 41 24 17]
 [ 0  4  1  1 15 19]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.7217216999997618,0.0005725518750011816,2332.47265625,0.16544117647058823,0.25219780219780213,0.17985893416927898,0.421875,0.395991660738564,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  1   0 135   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.2983347999997932,0.0004577106249996632,2332.53125,0.23720894607843138,0.5327280405405406,0.4887139724310777,0.5875,0.7743569134202299,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 99 37  0  0]
 [ 0  0 39 89  0  0]
 [ 0  0  2 38  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.4441898000004585,0.0004864871875014387,2332.90625,0.3802241161616162,0.46582888096807834,0.5866021241830064,0.403125,0.7464535255055796,"[[ 1  1  0  0  0  0]
 [ 3  4  4  0  0  0]
 [12 26 68 21  4  5]
 [ 9 10 29 46 19 15]
 [ 0  4  1  2  9 24]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.550063499999851,0.0005089056250000112,2332.86328125,0.3330761660724896,0.4569515476418885,0.5493662415156384,0.40625,0.7571121124332012,"[[ 0  2  0  0  0  0]
 [ 2  6  3  0  0  0]
 [ 7 26 66 30  3  4]
 [ 7 11 30 46 21 13]
 [ 0  3  1  5 11 20]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.6834391000002142,0.0005260212500019179,2332.96875,0.24387254901960786,0.1804583098061359,0.1663829641782882,0.203125,0.29314548086714515,"[[ 2  0  0  0  0  0]
 [10  0  1  0  0  0]
 [73  0 63  0  0  0]
 [60  0 68  0  0  0]
 [14  0 26  0  0  0]
 [ 0  0  3  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,1.4515475999996852,0.0004299112500007141,2332.4921875,0.31339126559714797,0.5462746156748883,0.575921249355439,0.528125,0.7807421704162628,"[[ 0  1  1  0  0  0]
 [ 2  2  4  2  1  0]
 [ 0 21 78 31  5  1]
 [ 0  7 33 64 23  1]
 [ 0  1  2 10 25  2]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.4923420000004626,0.0005325665625008468,2332.51953125,0.3331179441473559,0.4096071300183638,0.5520955426424176,0.34375,0.7412202692041638,"[[ 1  1  0  0  0  0]
 [ 6  3  2  0  0  0]
 [17 19 67 22  5  6]
 [13 13 28 32 14 28]
 [ 0  4  1  1  6 28]
 [ 0  0  1  0  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.3117876999995133,0.0005317965624982435,2332.66015625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.744481197864541,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.6889301000001069,0.0005367159375026631,2332.921875,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.2935198892560657,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.5)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.7211287999998603,3.0543125001258885e-05,2333.89453125,0.2595588235294118,0.560881993744897,0.5827365020235468,0.59375,0.7491072493553926,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  33   0   0]
 [  0   0  47  80   1   0]
 [  0   0   1  32   7   0]
 [  0   0   0   2   1   0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.1)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.7130760000000009,2.9541250000875152e-05,2334.0625,0.2640012254901961,0.5476931524267776,0.5456140350877192,0.56875,0.7439049100015999,"[[ 0  0  1  1  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 96 40  0  0]
 [ 0  0 48 74  6  0]
 [ 0  0  1 27 12  0]
 [ 0  0  0  2  1  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.5)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.706984299999931,2.9281249999257854e-05,2334.05859375,0.26979166666666665,0.5656160281160281,0.5722593390804598,0.590625,0.7480736043427331,"[[  0   0   1   1   0   0]
 [  0   0   7   4   0   0]
 [  0   0 102  34   0   0]
 [  0   0  49  76   3   0]
 [  0   0   1  28  11   0]
 [  0   0   0   2   1   0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.7056466999993063,2.9150624999374487e-05,2333.78515625,0.2564031862745098,0.5452974644403216,0.545347885989839,0.571875,0.7488396100021693,"[[  0   0   1   1   0   0]
 [  0   0   7   4   0   0]
 [  0   0 100  36   0   0]
 [  0   0  49  74   5   0]
 [  0   0   1  30   9   0]
 [  0   0   0   2   1   0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.5)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.7109435000002122,2.8958437499682078e-05,2333.8359375,0.2629901960784314,0.5605796553868436,0.5693306693306693,0.5875,0.7506655877296746,"[[ 0  0  1  1  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 99 37  0  0]
 [ 0  0 45 80  3  0]
 [ 0  0  1 30  9  0]
 [ 0  0  0  2  1  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.1)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.724187300000267,2.915156250082873e-05,2334.08203125,0.262515318627451,0.5493784713608424,0.5473472222222222,0.571875,0.7567415570292473,"[[ 0  0  2  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 95 41  0  0]
 [ 0  0 45 77  6  0]
 [ 0  0  1 28 11  0]
 [ 0  0  0  2  1  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.7213606999994226,2.946968750165979e-05,2333.953125,0.263327205882353,0.5561692726418677,0.5600430107526881,0.58125,0.7547709599237594,"[[ 0  0  1  1  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 98 38  0  0]
 [ 0  0 46 78  4  0]
 [ 0  0  1 29 10  0]
 [ 0  0  0  2  1  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.1)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.713233799999216,2.9841875002034612e-05,2333.7421875,0.2522824754901961,0.5450348432055748,0.569920897718911,0.575,0.7460076360094823,"[[ 0  0  1  1  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 96 40  0  0]
 [ 0  0 46 81  1  0]
 [ 0  0  1 32  7  0]
 [ 0  0  0  2  1  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.7109210999997231,2.9239687501103616e-05,2334.0078125,0.2560661764705882,0.5488605419312965,0.5520070480115122,0.578125,0.7542418787272975,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   0 101  35   0   0]
 [  0   0  48  76   4   0]
 [  0   0   1  31   8   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,2.572883400000137,0.00042920187500214977,2334.5625,0.3831188725490196,0.5982462826273,0.5971613833077661,0.603125,0.7838758207373089,"[[ 1  0  1  0  0  0]
 [ 2  0  8  1  0  0]
 [ 2  3 98 30  3  0]
 [ 1  3 39 74 10  1]
 [ 0  1  5 13 20  1]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.5050482000006014,0.00045115031250020365,2334.265625,0.39890123663101607,0.5446705175437564,0.6064651107967939,0.509375,0.7641967334081528,"[[ 1  1  0  0  0  0]
 [ 3  3  4  1  0  0]
 [ 3 23 74 27  8  1]
 [ 5 13 24 61 22  3]
 [ 0  2  0 11 24  3]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.6445635000000038,0.0005268368749995033,2334.29296875,0.28613478535353537,0.2590025411676965,0.5510750156759643,0.215625,0.6865320875341407,"[[ 0  2  0  0  0  0]
 [ 2  6  2  0  1  0]
 [19 41 51  3  9 13]
 [14 38 26  7  6 37]
 [ 1  6  0  1  3 29]
 [ 0  1  0  0  0  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.6385080999998536,0.00043895656250185765,2334.2109375,0.3077512254901961,0.6022902625138776,0.590259895181172,0.61875,0.7638336966754145,"[[ 0  0  2  0  0  0]
 [ 1  0 10  0  0  0]
 [ 0  0 96 37  3  0]
 [ 0  0 40 82  6  0]
 [ 0  0  3 17 20  0]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.35210129999995843,0.0004425031249979838,2334.453125,0.2914828431372549,0.5996913471622943,0.5940258751902587,0.621875,0.7827789928917774,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 101  34   1   0]
 [  0   0  40  84   4   0]
 [  0   0   1  25  14   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.4026101999997991,0.0004798768749992632,2334.4453125,0.37103526069518716,0.5202231643078556,0.6009419568681242,0.475,0.7770408063567824,"[[ 1  1  0  0  0  0]
 [ 4  2  4  1  0  0]
 [ 9 19 70 28  8  2]
 [10  7 25 55 24  7]
 [ 1  3  0  5 24  7]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.2950057999996716,0.0005071049999997967,2334.29296875,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.656845010069581,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.41643089999979566,0.00045675375000087115,2334.6171875,0.2306219362745098,0.5178933786874671,0.47350677760850035,0.571875,0.7438938376980679,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 100  36   0   0]
 [  0   0  45  83   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.7725726999997278,0.0005707146875010948,2334.47265625,0.2139705882352941,0.23256491182403854,0.23353960396039602,0.290625,0.5265371637506838,"[[ 0  0  2  0  0  0]
 [ 0  0  5  0  6  0]
 [ 0  0 59  0 77  0]
 [ 0  0 45  0 83  0]
 [ 0  0  6  0 34  0]
 [ 0  0  1  0  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,1.4184988000006342,0.00042682499999955323,2334.55859375,0.3837650401069519,0.5381321857493949,0.564518274853801,0.521875,0.7668669474161198,"[[ 1  1  0  0  0  0]
 [ 3  2  6  0  0  0]
 [ 3 16 84 30  3  0]
 [ 2 10 39 58 18  1]
 [ 0  1  4 11 22  2]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.46287500000016735,0.000507998750001093,2334.578125,0.3938716206179442,0.4602563946228284,0.5890220069065115,0.4,0.7660842613592571,"[[ 1  1  0  0  0  0]
 [ 3  3  5  0  0  0]
 [18 19 66 22  6  5]
 [16 12 24 38 22 16]
 [ 2  2  1  2 19 14]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.7675305000002481,0.0005857459374993823,2334.578125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.3169972280380387,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.6252369000003455,0.0005123196875018721,2334.17578125,0.3949569221628045,0.33949461450619783,0.5648284867054244,0.2875,0.7185043975312672,"[[ 1  1  0  0  0  0]
 [ 3  5  3  0  0  0]
 [10 34 61  8  9 14]
 [17 25 30 16 12 28]
 [ 1  7  0  1  7 24]
 [ 0  0  0  0  1  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.7008532999998351,0.0005198012499988636,2334.53125,0.25735294117647056,0.2170453612479475,0.2042960804255985,0.2375,0.3061005367587405,"[[ 2  0  0  0  0  0]
 [ 9  0  2  0  0  0]
 [62  0 74  0  0  0]
 [72  0 56  0  0  0]
 [20  0 20  0  0  0]
 [ 1  0  2  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.324028900000485,0.0004781590625015042,2334.5625,0.23918504901960788,0.5329237423840778,0.5635754940290965,0.578125,0.7640854131737145,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 97 39  0  0]
 [ 0  0 41 86  1  0]
 [ 0  0  1 37  2  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.5281065999997736,0.0005089034375004075,2334.3828125,0.2537103572489601,0.34200216411283957,0.603741225249846,0.26875,0.7302273788043758,"[[ 0  2  0  0  0  0]
 [ 2  6  3  0  0  0]
 [31 25 55  7 13  5]
 [32 18 20 21 18 19]
 [ 3  3  0  1  3 30]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.6084423000002062,0.0004783159374994739,2334.64453125,0.36781974153297686,0.5096020229717079,0.6238994839297334,0.446875,0.7587098196268578,"[[ 1  1  0  0  0  0]
 [ 3  3  5  0  0  0]
 [18 20 65 25  3  5]
 [13  9 21 52 23 10]
 [ 2  2  0  2 22 12]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.32632620000003953,0.0004955884374993503,2334.578125,0.22127757352941177,0.4956969696969697,0.45167413786323773,0.55,0.7398495845565759,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 103  33   0   0]
 [  0   0  55  73   0   0]
 [  0   0   4  36   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.7079692000006617,0.00046270968749979603,2334.6015625,0.2602787990196079,0.5583846313736149,0.5669713261648746,0.5875,0.7598085448625234,"[[ 0  0  2  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 97 39  0  0]
 [ 0  0 43 83  2  0]
 [ 0  0  2 30  8  0]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.4760190999995757,0.0004869728125015627,2334.62890625,0.3734518902257873,0.4506991740591408,0.626577470732367,0.378125,0.7499424186136494,"[[ 1  1  0  0  0  0]
 [ 3  3  5  0  0  0]
 [24 21 64 14  8  5]
 [23  8 23 37 25 12]
 [ 2  3  0  0 15 20]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.3154992999998285,0.0005073799999991025,2334.40625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.7198683250392748,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.6932870999999068,0.0005288259375021198,2334.67578125,0.21200980392156862,0.15276910926182768,0.22469285714285717,0.121875,0.3387526379746638,"[[  2   0   0   0   0   0]
 [ 10   0   1   0   0   0]
 [ 99   0  37   0   0   0]
 [101   0  27   0   0   0]
 [ 36   0   4   0   0   0]
 [  2   0   1   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.6928145000001678,0.0005236709375026294,2334.53515625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.3201574487872692,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",7,0.359212800000023,0.00046532093749931394,2334.3984375,0.2176011029411765,0.4880075210059346,0.4448567733845371,0.540625,0.7314394145146499,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 100  36   0   0]
 [  0   0  55  73   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.5)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.721303799999987,2.9346874998736894e-05,2334.84765625,0.2638020833333333,0.5661563696008749,0.5872110458578034,0.596875,0.7556581819038342,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   0 102  34   0   0]
 [  0   0  46  81   1   0]
 [  0   0   1  31   8   0]
 [  0   0   0   2   1   0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.1)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.7276150999996389,2.947187500126347e-05,2334.54296875,0.2591299019607843,0.5566093183441937,0.5621598249874009,0.584375,0.7589497162135427,"[[ 0  0  1  1  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 95 41  0  0]
 [ 0  0 40 84  4  0]
 [ 0  0  1 31  8  0]
 [ 0  0  0  2  1  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.5)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.7190825999996378,2.940937500000018e-05,2334.92578125,0.2696078431372549,0.5701871569883992,0.577179145691804,0.596875,0.7602562379522226,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 101  35   0   0]
 [  0   0  45  80   3   0]
 [  0   0   1  29  10   0]
 [  0   0   0   2   1   0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.6999706999995396,2.9723125001623886e-05,2334.703125,0.24532781862745098,0.5371284067863678,0.576351942241204,0.571875,0.757187404149916,"[[ 0  0  1  1  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 95 41  0  0]
 [ 0  0 45 83  0  0]
 [ 0  0  1 34  5  0]
 [ 0  0  0  2  1  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.5)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.7095924000004743,2.917281250063297e-05,2334.8671875,0.26934742647058824,0.5742639171709639,0.5941014232164081,0.603125,0.7574152753327198,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 101  35   0   0]
 [  0   0  44  83   1   0]
 [  0   0   1  30   9   0]
 [  0   0   0   2   1   0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.1)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.7510709999996834,3.0140000001210864e-05,2334.62890625,0.24803921568627452,0.5398555211558307,0.5482661004953998,0.571875,0.7592902362305629,"[[ 0  0  1  1  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 97 39  0  0]
 [ 0  0 45 80  3  0]
 [ 0  0  1 33  6  0]
 [ 0  0  0  2  1  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.1)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.7194959999997081,2.9557812499092507e-05,2334.921875,0.25324754901960783,0.5509212615132124,0.587563509583377,0.584375,0.7551631881334325,"[[ 0  0  1  1  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 97 39  0  0]
 [ 0  0 44 84  0  0]
 [ 0  0  1 33  6  0]
 [ 0  0  0  2  1  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.7181315999996514,2.9485937500339787e-05,2334.921875,0.2597426470588235,0.5564328056804116,0.5698989898989899,0.5875,0.7534871738097771,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   0 104  32   0   0]
 [  0   0  50  76   2   0]
 [  0   0   1  31   8   0]
 [  0   0   0   2   1   0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",7,0.7267191999999341,2.924843749951833e-05,2335.05078125,0.2610294117647059,0.551346087185814,0.5499134571003641,0.575,0.7613254258107409,"[[ 0  0  2  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 94 42  0  0]
 [ 0  0 42 80  6  0]
 [ 0  0  1 29 10  0]
 [ 0  0  0  2  1  0]]"
QuadraticDiscriminantAnalysis(),"OrderedDict([('priors', None)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",7,0.001884599999357306,2.936718749992906e-05,2335.0546875,0.24967830882352945,0.5267147974058619,0.5344022712120872,0.53125,0.7028510789591028,"[[ 0  0  0  2  0  0]
 [ 1  0  6  4  0  0]
 [ 1  3 79 52  1  0]
 [ 0  4 31 79 13  1]
 [ 0  0  1 25 12  2]
 [ 0  0  0  1  2  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 5), ('subsample', 0.8)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.5101396999998542,0.00011097718750079366,2346.59375,0.2669270833333333,0.5636056948546846,0.5625156365574556,0.590625,0.7559589377938025,"[[  0   0   1   1   0   0]
 [  0   0   7   4   0   0]
 [  0   0 102  33   1   0]
 [  0   0  47  77   4   0]
 [  0   0   5  25  10   0]
 [  0   0   1   1   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.554158599999937,0.00010988406249907711,2342.6171875,0.2556525735294118,0.5515206608045824,0.5586348892071783,0.584375,0.7647867015206857,"[[  0   0   1   1   0   0]
 [  0   0   6   5   0   0]
 [  0   0 103  31   2   0]
 [  0   0  49  77   2   0]
 [  0   0   6  27   7   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.7)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.47924520000015036,0.0001103021874996557,2347.609375,0.2507506127450981,0.5406962758257665,0.5487914862914863,0.571875,0.7575734077320541,"[[ 0  0  1  1  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 99 35  2  0]
 [ 0  0 49 77  2  0]
 [ 0  0  6 27  7  0]
 [ 0  0  1  2  0  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 3), ('subsample', 0.9)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.6045580999998492,0.00010747343750097115,2353.4609375,0.26968443627450983,0.5699548088234219,0.5768285225048924,0.596875,0.7679733755790251,"[[  0   0   1   1   0   0]
 [  0   0   7   4   0   0]
 [  0   0 100  35   1   0]
 [  0   0  45  81   2   0]
 [  0   0   6  24  10   0]
 [  0   0   1   1   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.586521599999287,0.00011208281250105757,2340.85546875,0.2694546568627451,0.5692145096868118,0.5678884619577065,0.596875,0.7742634019934842,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  32   1   0]
 [  0   0  46  78   4   0]
 [  0   0   6  24  10   0]
 [  0   0   1   1   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 3), ('min_child_weight', 5), ('subsample', 0.7)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.3030214000000342,9.407281249877997e-05,2340.52734375,0.22515318627450984,0.4926712684721838,0.516114953886693,0.53125,0.7191189118332283,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 100  34   2   0]
 [  0   0  62  66   0   0]
 [  0   0   4  32   4   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 5), ('subsample', 0.8)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.3827809000003981,0.00010150312500059044,2341.5078125,0.2565104166666667,0.5382814079588273,0.5475145544111062,0.565625,0.7391652534602903,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  33   1   0]
 [  0   0  57  69   2   0]
 [  0   0   5  25  10   0]
 [  0   0   1   1   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.9)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.5445629000005283,0.00011241843749871805,2342.8671875,0.2707567401960784,0.5722970859985785,0.5707600174216028,0.6,0.7773124819900349,"[[  0   0   1   1   0   0]
 [  0   0   7   4   0   0]
 [  0   0 103  32   1   0]
 [  0   0  46  79   3   0]
 [  0   0   6  24  10   0]
 [  0   0   1   0   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.6139860999992379,0.00011019625000017186,2353.01171875,0.2711703431372549,0.5684139642034378,0.5672155696326295,0.59375,0.7629167591520772,"[[  0   0   1   1   0   0]
 [  0   0   7   4   0   0]
 [  0   0 101  34   1   0]
 [  0   0  47  78   3   0]
 [  0   0   5  24  11   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.7)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.6556528000000981,0.00010873531250013002,2343.3984375,0.25729166666666664,0.5504353595282762,0.5645476420742378,0.58125,0.7529135844746687,"[[  0   0   1   1   0   0]
 [  0   0   7   4   0   0]
 [  0   0 102  32   2   0]
 [  0   0  51  76   1   0]
 [  0   0   6  26   8   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.1), ('gamma', 1.0), ('lambda', 1.0), ('max_depth', 25), ('min_child_weight', 3), ('subsample', 1.0)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.5687304000002769,0.00010770906249888413,2343.58984375,0.25491727941176473,0.545209131953318,0.5674137931034482,0.575,0.7511045979160051,"[[ 0  0  1  1  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 99 36  1  0]
 [ 0  0 50 77  1  0]
 [ 0  0  6 26  8  0]
 [ 0  0  2  1  0  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.7)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.6386016999995263,0.00011326500000166106,2354.3515625,0.26495098039215687,0.5685648773468867,0.570211495821252,0.6,0.767656106011454,"[[  0   0   1   1   0   0]
 [  0   0   7   4   0   0]
 [  0   0 104  30   2   0]
 [  0   0  45  80   3   0]
 [  0   0   6  26   8   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 5), ('min_child_weight', 7), ('subsample', 0.8)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.3684867000001759,0.0001010996874981629,2342.921875,0.2469515931372549,0.5262862137862138,0.5358384632922937,0.55625,0.7329048133481632,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  34   1   0]
 [  0   0  57  69   2   0]
 [  0   0   4  28   8   0]
 [  0   0   1   1   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 3), ('min_child_weight', 3), ('subsample', 0.6)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.3223840000000564,9.631531249851833e-05,2341.25,0.24515931372549019,0.5259669211195929,0.5416214382632294,0.559375,0.724755733970776,"[[  0   0   1   1   0   0]
 [  0   0   7   4   0   0]
 [  0   0 104  30   2   0]
 [  0   0  59  68   1   0]
 [  0   0   4  29   7   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.6), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 1.0)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.5482749999991938,0.00011351406249957564,2343.37109375,0.25833333333333336,0.5576938279112192,0.5711379950753308,0.590625,0.7621585089326051,"[[  0   0   1   1   0   0]
 [  0   0   7   4   0   0]
 [  0   0 102  33   1   0]
 [  0   0  46  80   2   0]
 [  0   0   5  28   7   0]
 [  0   0   2   1   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 3), ('subsample', 0.7)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.5601877999997669,0.00011302124999872376,2343.26953125,0.2704963235294118,0.5765378167904444,0.5829614074729017,0.60625,0.7777634591616784,"[[  0   0   1   1   0   0]
 [  0   0   7   4   0   0]
 [  0   0 103  32   1   0]
 [  0   0  44  82   2   0]
 [  0   0   6  25   9   0]
 [  0   0   1   1   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.025), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.6)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.6618899000004603,0.00011351906250069987,2354.51953125,0.27205882352941174,0.5755698110449148,0.5706958157573511,0.603125,0.7781739073816768,"[[  0   0   1   1   0   0]
 [  0   0   7   4   0   0]
 [  0   0 103  31   2   0]
 [  0   0  45  80   3   0]
 [  0   0   5  25  10   0]
 [  0   0   1   0   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.025), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 1), ('subsample', 0.6)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.42898759999934555,0.00010401968750102241,2341.83984375,0.2563265931372549,0.5436168546365915,0.547457298136646,0.571875,0.7488235191498441,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  33   2   0]
 [  0   0  53  73   2   0]
 [  0   0   5  26   9   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.9)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.788973700000497,0.00011538187499979813,2357.16015625,0.2789828431372549,0.5864741921900626,0.5879165718835304,0.6125,0.7894359747232915,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  34   1   0]
 [  0   0  41  84   3   0]
 [  0   0   4  25  11   0]
 [  0   0   2   0   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.6), ('eta', 0.025), ('gamma', 0.1), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 1.0)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.6292124999999942,0.00011778562499955569,2355.98828125,0.2664828431372549,0.5719735831148874,0.5786416103603603,0.603125,0.7696756114254983,"[[  0   0   1   1   0   0]
 [  0   0   6   5   0   0]
 [  0   0 101  33   2   0]
 [  0   0  43  84   1   0]
 [  0   0   8  24   8   0]
 [  0   0   1   1   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.015), ('gamma', 0.05), ('lambda', 0.01), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.6)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.6588006000001769,0.00011712593750132783,2355.078125,0.2746629901960784,0.5815963547581194,0.5794965277777778,0.609375,0.7827130970970362,"[[  0   0   1   1   0   0]
 [  0   0   7   4   0   0]
 [  0   0 103  32   1   0]
 [  0   0  43  82   3   0]
 [  0   0   5  25  10   0]
 [  0   0   1   0   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.7), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 1), ('subsample', 0.6)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.48429959999975836,0.00010345531250095519,2348.7109375,0.23705575980392157,0.5172181759940655,0.5233628841607565,0.553125,0.7427828684750728,"[[  0   0   1   1   0   0]
 [  0   0   6   5   0   0]
 [  0   0 101  33   2   0]
 [  0   0  55  71   2   0]
 [  0   0   6  29   5   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.015), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.8)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.8924448000007033,0.00010253406250058106,2356.4375,0.2694546568627451,0.5695048345668244,0.5649448368304377,0.596875,0.771825054382209,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  32   1   0]
 [  0   0  45  78   5   0]
 [  0   0   5  25  10   0]
 [  0   0   1   1   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.015), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.6)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.7554579000006925,0.000104441875001271,2355.33984375,0.2749234068627451,0.5767613717128643,0.5785725174216028,0.603125,0.7731846128944275,"[[  0   0   1   1   0   0]
 [  0   0   7   4   0   0]
 [  0   0 103  31   2   0]
 [  0   0  47  79   2   0]
 [  0   0   6  23  11   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.05), ('gamma', 0.7), ('lambda', 0.1), ('max_depth', 3), ('min_child_weight', 3), ('subsample', 0.8)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.3197396999994453,9.545781250039909e-05,2341.6328125,0.2236672794117647,0.4938644688644689,0.5128448275862069,0.534375,0.7198741920620491,"[[ 0  0  1  1  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 99 36  1  0]
 [ 0  0 58 69  1  0]
 [ 0  0  4 33  3  0]
 [ 0  0  0  3  0  0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.6), ('eta', 0.1), ('gamma', 0.7), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 7), ('subsample', 0.7)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.4404737999993813,0.00010428093750078916,2347.796875,0.24669117647058825,0.5301783890267037,0.5539804203149109,0.5625,0.7391900066422076,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  34   1   0]
 [  0   0  55  72   1   0]
 [  0   0   6  27   7   0]
 [  0   0   1   2   0   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.7), ('lambda', 0.01), ('max_depth', 5), ('min_child_weight', 1), ('subsample', 0.8)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.4397300999999061,0.00010165531249981541,2341.6171875,0.2684129901960784,0.5613713326688892,0.5732963485139229,0.5875,0.7466766669628162,"[[  0   0   1   1   0   0]
 [  0   0   7   4   0   0]
 [  0   0 103  32   1   0]
 [  0   0  53  74   1   0]
 [  0   0   5  24  11   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.05), ('gamma', 0.05), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.6)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.6885943000006591,0.00011734156250042815,2344.30859375,0.30528492647058825,0.6142925846104725,0.6067120526187428,0.634375,0.7944838989357644,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  34   1   0]
 [  0   0  39  85   4   0]
 [  0   0   4  19  17   0]
 [  0   0   1   0   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 1.0), ('eta', 0.1), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 1.0)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.6428563999998005,0.00011424968749906839,2355.53125,0.3037224264705882,0.6190619947428458,0.6107415431926195,0.6375,0.7779947497075754,"[[  0   0   0   1   1   0]
 [  0   0   7   4   0   0]
 [  0   2 101  33   0   0]
 [  0   0  35  87   6   0]
 [  0   0   3  21  16   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.0, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1.0,
              enable_categorical=False, eta=0.05, eval_metric='mlogloss',
              gamma=0.05, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=1, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 1.0), ('eta', 0.05), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 1.0)])","('density', 'total sulfur dioxide', 'residual sugar', 'fixed acidity')",4,0.7864257999999609,0.0001225209374979386,2357.46875,0.2988511029411765,0.6003627694859038,0.58973753829017,0.61875,0.7852665589006608,"[[  0   0   0   1   1   0]
 [  0   0   7   4   0   0]
 [  0   1 100  35   0   0]
 [  0   0  40  81   7   0]
 [  0   0   4  19  17   0]
 [  0   0   1   0   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",8,2.073390499999732,0.0004012512499997456,2325.734375,0.31331188725490194,0.6294270533256514,0.6205298013245033,0.640625,0.7753151145562792,"[[  0   1   1   0   0   0]
 [  2   0   7   1   1   0]
 [  2   0 105  27   2   0]
 [  0   2  34  81  10   1]
 [  0   0   4  17  19   0]
 [  0   0   0   0   3   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",8,0.4979333000001134,0.00043120312500093404,2325.5546875,0.36584781639928704,0.5494731285826138,0.5911500779749601,0.528125,0.7699189130301295,"[[ 0  1  1  0  0  0]
 [ 1  6  4  0  0  0]
 [ 3 20 79 30  3  1]
 [ 0 10 33 60 23  2]
 [ 0  3  0  9 24  4]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",8,0.695781999999781,0.0005478912499995659,2325.625,0.31320280005941775,0.34891902258020646,0.6602408236740429,0.275,0.6943475791201454,"[[ 0  2  0  0  0  0]
 [ 3  6  2  0  0  0]
 [19 41 58  5  1 12]
 [19 34 18 18  7 32]
 [ 2  7  0  0  4 27]
 [ 0  0  0  1  0  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",8,0.5819822000003114,0.0004162206250015288,2325.65625,0.29345894607843137,0.5948244550766328,0.5843613081166273,0.6125,0.7747194217140605,"[[ 0  1  1  0  0  0]
 [ 1  0 10  0  0  0]
 [ 0  0 99 36  1  0]
 [ 0  0 39 81  8  0]
 [ 0  0  1 23 16  0]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",8,0.3476700000001074,0.0004284890624973059,2325.296875,0.2849417892156863,0.5908160128226749,0.5895420498220973,0.6125,0.7827159412646147,"[[ 0  0  2  0  0  0]
 [ 1  0 10  0  0  0]
 [ 0  0 98 38  0  0]
 [ 0  0 39 85  4  0]
 [ 0  0  2 25 13  0]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",8,0.41313499999978376,0.0004618859375000284,2325.6171875,0.3120460115864528,0.5126209517420588,0.5687055084046272,0.478125,0.7770427976266605,"[[ 0  2  0  0  0  0]
 [ 2  4  5  0  0  0]
 [ 8 18 73 33  3  1]
 [ 3  9 31 54 24  7]
 [ 0  3  0  8 22  7]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",8,0.30141900000035093,0.0004967968750008822,2325.5859375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6703546056834508,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",8,0.39250670000001264,0.00043917187499857845,2325.76953125,0.2254136029411765,0.5064043454287356,0.462717293644283,0.559375,0.7519491390643397,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 100  36   0   0]
 [  0   0  49  79   0   0]
 [  0   0   1  39   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",8,0.7084521000006134,0.0005165349999998626,2325.625,0.16666666666666666,0.02777777777777778,0.015625,0.125,0.3594840909060243,"[[  0   0   0   0   2   0]
 [  0   0   0   0  11   0]
 [  0   0   0   0 136   0]
 [  0   0   0   0 128   0]
 [  0   0   0   0  40   0]
 [  0   0   0   0   3   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",8,0.4761975999999777,0.0004886287499999753,2325.79296875,0.32990381758764115,0.4366834895682851,0.5416229010576019,0.390625,0.7658498422143667,"[[ 0  2  0  0  0  0]
 [ 3  5  3  0  0  0]
 [ 7 28 66 24  5  6]
 [ 5 15 34 36 28 10]
 [ 0  5  0  4 17 14]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",8,1.3930710000004183,0.00046375187500018454,2325.73046875,0.347753732174688,0.5939613074023468,0.614243518331821,0.58125,0.7719235911862189,"[[ 0  1  1  0  0  0]
 [ 1  4  5  1  0  0]
 [ 1 12 93 26  4  0]
 [ 0  8 29 69 21  1]
 [ 0  3  2 13 20  2]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",8,0.7154780999999275,0.0005004062500006512,2325.65625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.4394063790106471,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",8,0.33805449999999837,0.0004833515624994789,2325.4765625,0.2179074754901961,0.4904109589041095,0.44934333958724204,0.540625,0.7248076867776325,"[[ 0  0  1  1  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 96 40  0  0]
 [ 0  0 51 77  0  0]
 [ 0  0  0 40  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",8,0.7107724999996208,0.0005159100000014405,2325.328125,0.2622549019607843,0.2264313786327438,0.21122318393185102,0.25,0.29353753780249947,"[[ 2  0  0  0  0  0]
 [ 8  0  3  0  0  0]
 [58  0 78  0  0  0]
 [68  0 60  0  0  0]
 [26  0 14  0  0  0]
 [ 1  0  2  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",8,0.47018670000034035,0.00046585562500069957,2325.41796875,0.4179552881758764,0.46625241280969787,0.5781525022403511,0.4125,0.7479816460134932,"[[ 1  1  0  0  0  0]
 [ 3  5  2  1  0  0]
 [16 19 69 24  6  2]
 [ 7 17 31 40 18 15]
 [ 1  4  0  2 16 17]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",8,0.5328688999998121,0.00047929468749998707,2325.33984375,0.3745729352347,0.4025467977077063,0.572033704482418,0.35,0.7447049241609048,"[[ 1  1  0  0  0  0]
 [ 3  5  3  0  0  0]
 [19 21 71 13  5  7]
 [11 22 33 24 20 18]
 [ 1  4  0  1 10 24]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",8,0.5686699999996563,0.00045709281249912693,2325.69921875,0.3454522244503862,0.4793950971765463,0.5762715757641604,0.428125,0.7573616792004723,"[[ 0  2  0  0  0  0]
 [ 2  5  3  1  0  0]
 [ 7 30 67 26  3  3]
 [ 3 16 30 47 23  9]
 [ 0  6  0  4 17 13]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",8,0.3276553000005151,0.0004895093750008073,2325.7109375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.7371733435294101,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",8,0.7082609999997658,0.0005011568750006746,2325.734375,0.20833333333333334,0.1467962930548262,0.23693350844990188,0.1125,0.31171091356696234,"[[  2   0   0   0   0   0]
 [ 10   0   1   0   0   0]
 [102   0  34   0   0   0]
 [107   0  21   0   0   0]
 [ 36   0   4   0   0   0]
 [  2   0   1   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",8,0.3384181000001263,0.0004749768750002659,2325.40625,0.22533700980392157,0.5055481189234887,0.46118173994680023,0.559375,0.7477781326662799,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 101  35   0   0]
 [  0   0  50  78   0   0]
 [  0   0   3  37   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",8,0.31668750000062573,0.00045149749999779943,2325.75,0.2231924019607843,0.5013821939176429,0.45927174975562074,0.553125,0.7663220967725194,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 95 41  0  0]
 [ 0  0 46 82  0  0]
 [ 0  0  2 38  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'fixed acidity')",8,0.6245889000001625,0.00045297781250042135,2325.66796875,0.2606464460784314,0.5495524036854877,0.5462883715549156,0.575,0.761415791199396,"[[ 0  0  1  1  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 99 37  0  0]
 [ 0  0 48 75  5  0]
 [ 0  0  2 28 10  0]
 [ 0  0  0  1  2  0]]"
QuadraticDiscriminantAnalysis(),"OrderedDict([('priors', None)])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'fixed acidity')",6,0.0018373000002611661,2.861843749997206e-05,2325.78125,0.24532781862745098,0.5392020222723235,0.5365963676271388,0.571875,0.7223917103384634,"[[ 0  0  0  2  0  0]
 [ 0  0  8  2  1  0]
 [ 0  0 95 40  1  0]
 [ 0  0 43 83  2  0]
 [ 0  1  3 31  5  0]
 [ 0  0  0  1  2  0]]"
DecisionTreeClassifier(criterion='entropy'),"OrderedDict([('criterion', 'gini')])","('total sulfur dioxide', 'volatile acidity', 'fixed acidity')",3,0.00349850000020524,2.5989687500782566e-05,2327.78125,0.4085798239750446,0.6336284975498447,0.6323394574175825,0.6375,0.7191837144111706,"[[ 1  0  1  0  0  0]
 [ 0  1  3  5  2  0]
 [ 0  4 96 31  5  0]
 [ 0  3 24 87 14  0]
 [ 0  0  5 15 19  1]
 [ 0  0  1  2  0  0]]"
DecisionTreeClassifier(criterion='entropy'),"OrderedDict([('criterion', 'entropy')])","('total sulfur dioxide', 'volatile acidity', 'fixed acidity')",3,0.004332999999860476,2.5734375000752152e-05,2327.765625,0.3831188725490196,0.6019566579492209,0.6110174290669981,0.6,0.6948754398956161,"[[ 1  0  1  0  0  0]
 [ 2  0  5  3  1  0]
 [ 0  6 81 41  6  2]
 [ 1  5 24 90  8  0]
 [ 0  0  5 12 20  3]
 [ 0  0  0  2  1  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 30), ('max_features', 'sqrt'), ('min_samples_leaf', 10), ('min_samples_split', 10), ('n_estimators', 120)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.15511789999982284,0.0004151459375009381,2346.74609375,0.2569240196078431,0.5590125063168829,0.5722157884578267,0.59375,0.7786260659666643,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 100  36   0   0]
 [  0   0  43  84   1   0]
 [  0   0   5  29   6   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 25), ('max_features', None), ('min_samples_leaf', 5), ('min_samples_split', 5), ('n_estimators', 500)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.6392743999995218,0.0014395809375002955,2346.83203125,0.32850796568627455,0.6502238835725678,0.6478831584413998,0.66875,0.8060332317355036,"[[ 0  0  1  1  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 97 39  0  0]
 [ 0  0 29 97  2  0]
 [ 0  0  4 16 20  0]
 [ 0  0  0  1  2  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 15), ('max_features', 'sqrt'), ('min_samples_leaf', 2), ('min_samples_split', 5), ('n_estimators', 800)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.9956009000006816,0.0022568931250020797,2368.1171875,0.3271905637254902,0.6653912487203615,0.6641275391275391,0.6875,0.8328052100118836,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  32   0   0]
 [  0   0  27  99   2   0]
 [  0   0   3  20  17   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 25), ('max_features', 'log2'), ('min_samples_leaf', 5), ('min_samples_split', 100), ('n_estimators', 800)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.9397296000006463,0.0021993962500005183,2368.046875,0.22679227941176472,0.5094756905753328,0.4658648775342787,0.5625,0.7438741694113726,"[[ 0  0  1  1  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 99 37  0  0]
 [ 0  0 47 81  0  0]
 [ 0  0  4 36  0  0]
 [ 0  0  0  3  0  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 20), ('max_features', 'sqrt'), ('min_samples_leaf', 10), ('min_samples_split', 10), ('n_estimators', 800)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,1.0088969999997062,0.0021029706250004663,2348.81640625,0.2712775735294118,0.5874492125362767,0.5995967741935484,0.621875,0.7803472388486787,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  33   0   0]
 [  0   0  38  89   1   0]
 [  0   0   5  28   7   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 25), ('max_features', None), ('min_samples_leaf', 5), ('min_samples_split', 5), ('n_estimators', 800)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,1.0258732000002055,0.002220306875000233,2349.08203125,0.32426470588235295,0.646415205039401,0.6443126642040179,0.665625,0.8074462000186822,"[[ 0  0  1  1  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 98 38  0  0]
 [ 0  0 30 96  2  0]
 [ 0  0  4 17 19  0]
 [ 0  0  0  1  2  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 20), ('max_features', 'sqrt'), ('min_samples_leaf', 10), ('min_samples_split', 5), ('n_estimators', 500)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.6050758000001224,0.0013799156250001942,2348.98828125,0.2650735294117647,0.5736752136752136,0.5880000000000001,0.60625,0.780009672417034,"[[ 0  0  1  1  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 99 37  0  0]
 [ 0  0 39 88  1  0]
 [ 0  0  3 30  7  0]
 [ 0  0  0  1  2  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', None), ('max_features', 'sqrt'), ('min_samples_leaf', 1), ('min_samples_split', 2), ('n_estimators', 500)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.6550082000003385,0.001467538437501048,2376.62890625,0.33151041666666664,0.6702446295940581,0.6652052755469399,0.690625,0.8463526980697177,"[[  0   0   1   1   0   0]
 [  1   0   8   2   0   0]
 [  0   0 102  32   2   0]
 [  0   0  25 101   2   0]
 [  0   0   2  20  18   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 25), ('max_features', 'log2'), ('min_samples_leaf', 1), ('min_samples_split', 15), ('n_estimators', 300)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.38070840000000317,0.0009044790624983534,2375.859375,0.31283700980392154,0.6377659574468086,0.6381626934709127,0.659375,0.815038756853712,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  35   0   0]
 [  0   0  32  94   2   0]
 [  0   0   4  20  16   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 8), ('max_features', None), ('min_samples_leaf', 2), ('min_samples_split', 15), ('n_estimators', 1200)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,1.4800358000002234,0.0030683796874996006,2349.296875,0.29613970588235294,0.5991735179665507,0.5978226817042607,0.61875,0.7887114765721883,"[[ 0  0  1  1  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 98 38  0  0]
 [ 0  0 41 84  3  0]
 [ 0  0  4 20 16  0]
 [ 0  0  0  1  2  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', None), ('max_features', None), ('min_samples_leaf', 1), ('min_samples_split', 5), ('n_estimators', 300)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.42632879999928264,0.0009119862500000409,2349.62109375,0.33828125000000003,0.6789349370142053,0.6728694968553459,0.7,0.8309846802470535,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   0 102  33   1   0]
 [  0   0  22 103   3   0]
 [  0   0   2  19  19   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', None), ('max_features', 'log2'), ('min_samples_leaf', 1), ('min_samples_split', 5), ('n_estimators', 500)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.6252893999999287,0.0014647962499992674,2354.33203125,0.3381280637254902,0.6788646914983862,0.6730786719286204,0.7,0.840441486905078,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   0 104  32   0   0]
 [  0   0  24 101   3   0]
 [  0   0   3  18  19   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', None), ('max_features', None), ('min_samples_leaf', 1), ('min_samples_split', 10), ('n_estimators', 300)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.42346830000042246,0.0009137196875002474,2354.16015625,0.33575367647058824,0.6730224805682122,0.6672287735849056,0.69375,0.8226791785896962,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  34   1   0]
 [  0   0  23 102   3   0]
 [  0   0   3  18  19   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 20), ('max_features', None), ('min_samples_leaf', 1), ('min_samples_split', 100), ('n_estimators', 300)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.3621474000001399,0.000886587187500254,2350.484375,0.2311887254901961,0.519567932067932,0.5056596385542169,0.565625,0.7501096726398685,"[[ 0  0  1  1  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 96 40  0  0]
 [ 0  0 42 84  2  0]
 [ 0  0  4 35  1  0]
 [ 0  0  0  2  1  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', None), ('max_features', None), ('min_samples_leaf', 5), ('min_samples_split', 15), ('n_estimators', 300)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.3970599000003858,0.0008565868749997208,2350.296875,0.31374080882352945,0.6280924043062202,0.6242178550153508,0.646875,0.8075704422675992,"[[ 0  0  1  1  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 96 40  0  0]
 [ 0  0 31 93  4  0]
 [ 0  0  3 19 18  0]
 [ 0  0  0  1  2  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', None), ('max_features', None), ('min_samples_leaf', 2), ('min_samples_split', 5), ('n_estimators', 300)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.41251310000006924,0.0009023534375018017,2350.42578125,0.33560049019607846,0.6729725803719504,0.6657430875576037,0.69375,0.8287950599504187,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   0 103  32   1   0]
 [  0   0  25 100   3   0]
 [  0   0   2  19  19   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 15), ('max_features', None), ('min_samples_leaf', 5), ('min_samples_split', 15), ('n_estimators', 300)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.3903688999998849,0.0008775893750026853,2350.4453125,0.3204350490196079,0.6375965612283298,0.6339148650194464,0.65625,0.8040227257443217,"[[ 0  0  1  1  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 97 39  0  0]
 [ 0  0 31 94  3  0]
 [ 0  0  4 17 19  0]
 [ 0  0  0  1  2  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', None), ('max_features', 'sqrt'), ('min_samples_leaf', 1), ('min_samples_split', 100), ('n_estimators', 300)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.358098699999573,0.0008907087500006128,2349.984375,0.2267156862745098,0.5091918018747288,0.46523301691472324,0.5625,0.7441316559303616,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 100  36   0   0]
 [  0   0  48  80   0   0]
 [  0   0   4  36   0   0]
 [  0   0   0   3   0   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 20), ('max_features', 'sqrt'), ('min_samples_leaf', 1), ('min_samples_split', 2), ('n_estimators', 500)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.6524656999999934,0.0014702184374982608,2376.25390625,0.3300551470588235,0.6672780082836334,0.6631261463742282,0.6875,0.8462817055382091,"[[  0   0   1   1   0   0]
 [  1   0   9   1   0   0]
 [  0   0 104  32   0   0]
 [  0   0  27  98   3   0]
 [  0   0   2  20  18   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 20), ('max_features', 'sqrt'), ('min_samples_leaf', 5), ('min_samples_split', 2), ('n_estimators', 500)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.6169000999998389,0.0014456412500010174,2375.69140625,0.2938265931372549,0.61019147530273,0.6134771241830065,0.634375,0.8085795113133212,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   0 101  35   0   0]
 [  0   0  37  89   2   0]
 [  0   0   5  22  13   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 20), ('max_features', 'sqrt'), ('min_samples_leaf', 2), ('min_samples_split', 2), ('n_estimators', 500)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.6278465999994296,0.0014530350000001135,2355.6171875,0.32971813725490196,0.671254745110891,0.6696636696636697,0.69375,0.839007404928422,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   0 105  31   0   0]
 [  0   0  26 100   2   0]
 [  0   0   2  21  17   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 20), ('max_features', 'sqrt'), ('min_samples_leaf', 10), ('min_samples_split', 2), ('n_estimators', 120)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.15447449999919627,0.000431639375000259,2355.01171875,0.26533394607843136,0.5694579432443263,0.5908064516129032,0.6,0.7770877480953022,"[[ 0  0  1  1  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 99 37  0  0]
 [ 0  0 43 85  0  0]
 [ 0  0  4 28  8  0]
 [ 0  0  0  1  2  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', None), ('max_features', None), ('min_samples_leaf', 2), ('min_samples_split', 10), ('n_estimators', 300)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.41943069999979343,0.0008881496875005723,2351.41015625,0.34129901960784315,0.6800207830324864,0.6789302627734981,0.7,0.8162747750561602,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 100  36   0   0]
 [  0   0  22 104   2   0]
 [  0   0   2  18  20   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 15), ('max_features', 'sqrt'), ('min_samples_leaf', 5), ('min_samples_split', 10), ('n_estimators', 300)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.3683587000004991,0.0009071356249990004,2351.625,0.29765625,0.619108136194144,0.6221480122198758,0.64375,0.8110531985287854,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  34   0   0]
 [  0   0  35  91   2   0]
 [  0   0   5  22  13   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 20), ('max_features', 'sqrt'), ('min_samples_leaf', 2), ('min_samples_split', 100), ('n_estimators', 800)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.9319873000004009,0.0021930984374989746,2351.3359375,0.22418811274509806,0.5035423925667828,0.46007754209148805,0.55625,0.7467510142580942,"[[ 0  0  1  1  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 99 37  0  0]
 [ 0  0 49 79  0  0]
 [ 0  0  4 36  0  0]
 [ 0  0  0  3  0  0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', None), ('max_features', 'sqrt'), ('min_samples_leaf', 10), ('min_samples_split', 15), ('n_estimators', 500)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.6299260000005233,0.0013511206250001351,2351.3359375,0.2701593137254902,0.580242375621437,0.6000375171953812,0.6125,0.7831029654366176,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  32   0   0]
 [  0   0  43  84   1   0]
 [  0   0   4  28   8   0]
 [  0   0   1   1   1   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 5), ('max_features', 'sqrt'), ('min_samples_leaf', 10), ('min_samples_split', 100), ('n_estimators', 120)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.14918810000017402,0.000428154687500637,2351.19140625,0.2189031862745098,0.49103383458646627,0.4477130325814536,0.54375,0.7349534411595445,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 100  36   0   0]
 [  0   0  54  74   0   0]
 [  0   0   4  36   0   0]
 [  0   0   1   2   0   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 20), ('max_features', 'sqrt'), ('min_samples_leaf', 1), ('min_samples_split', 5), ('n_estimators', 120)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.16135639999993145,0.0004298318750016961,2351.28125,0.33448223039215685,0.6647093824328588,0.6545705940840169,0.684375,0.8293126601630527,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  30   2   0]
 [  0   0  29  95   4   0]
 [  0   0   2  18  20   0]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 8), ('max_features', None), ('min_samples_leaf', 1), ('min_samples_split', 2), ('n_estimators', 300)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,0.38200749999941763,0.0008928609375004725,2351.30078125,0.30919117647058825,0.6238735147762842,0.6232998372071219,0.64375,0.8001311681325698,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  35   0   0]
 [  0   0  38  88   2   0]
 [  0   0   3  20  17   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_depth=20, max_features=None, min_samples_split=5,
                       n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 20), ('max_features', None), ('min_samples_leaf', 1), ('min_samples_split', 5), ('n_estimators', 1200)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",6,1.6403300000001764,0.003324810000000866,2388.8203125,0.34408700980392154,0.6803301084880033,0.6741553178097183,0.7,0.8307996722124023,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   0 101  34   1   0]
 [  0   0  24 102   2   0]
 [  0   0   2  17  21   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",7,1.9839298000006238,0.00040602593749952123,2370.92578125,0.29827038770053477,0.5809839358112704,0.5745347452934662,0.590625,0.7597165395017471,"[[ 0  1  0  1  0  0]
 [ 1  1  8  1  0  0]
 [ 0  3 98 34  1  0]
 [ 0  2 39 74 12  1]
 [ 0  0  5 19 16  0]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",7,0.502328800000214,0.00044832531250165174,2371.23046875,0.3370334781639928,0.5082873087948522,0.5685153954390285,0.478125,0.7710715131191175,"[[ 0  1  1  0  0  0]
 [ 2  6  2  1  0  0]
 [ 1 26 71 32  5  1]
 [ 2 12 28 55 29  2]
 [ 0  3  3  7 21  6]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",7,0.6687992000006489,0.0005035784375024832,2371.32421875,0.3807426284907902,0.3249476846485068,0.5570288442794558,0.259375,0.6827072318240368,"[[ 1  1  0  0  0  0]
 [ 3  6  2  0  0  0]
 [25 33 50 14  1 13]
 [20 33 20 23  4 28]
 [ 5  6  1  0  1 27]
 [ 0  0  0  1  0  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",7,0.5688101999994615,0.00042245281250075095,2371.234375,0.2786611519607843,0.5823159251535165,0.5784313786314604,0.596875,0.7788192770322249,"[[ 0  0  2  0  0  0]
 [ 1  0  8  2  0  0]
 [ 0  2 95 38  1  0]
 [ 2  0 36 83  6  1]
 [ 0  1  3 23 13  0]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",7,0.3434713999995438,0.00043316093750149775,2371.1484375,0.2835324754901961,0.5916534665529427,0.5905617730963353,0.615625,0.7884480022298961,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 96 40  0  0]
 [ 0  0 35 89  4  0]
 [ 0  0  4 24 12  0]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",7,0.40774750000036875,0.00046852812500048914,2371.02734375,0.29825924688057043,0.48950286734615994,0.5716049580603659,0.44375,0.7803247611971804,"[[ 0  1  1  0  0  0]
 [ 3  4  4  0  0  0]
 [10 21 66 32  4  3]
 [ 6 11 25 50 27  9]
 [ 0  3  1  5 22  9]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",7,0.291729800000212,0.0004938059375007242,2371.28125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6384151893474959,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",7,0.4081540999995923,0.0004497231250013556,2371.25390625,0.23720894607843138,0.5333902481957402,0.4905696848384945,0.5875,0.7574427487988826,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 99 37  0  0]
 [ 0  0 39 89  0  0]
 [ 0  0  1 39  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",7,0.693924700000025,0.000504824999998732,2370.94921875,0.16666666666666666,0.02777777777777778,0.015625,0.125,0.38648463513440434,"[[  0   0   0   0   2   0]
 [  0   0   0   0  11   0]
 [  0   0   0   0 136   0]
 [  0   0   0   0 128   0]
 [  0   0   0   0  40   0]
 [  0   0   0   0   3   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",7,0.47657900000012887,0.00047962874999996075,2371.33984375,0.3448241607248961,0.46830886088500306,0.5852263402182637,0.4125,0.7729703615826711,"[[ 0  2  0  0  0  0]
 [ 3  5  3  0  0  0]
 [ 7 29 65 25  6  4]
 [ 7 14 27 42 23 15]
 [ 1  4  0  2 19 14]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",7,0.6989046999997299,0.0005045943749991011,2371.19921875,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.3027831622596553,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",7,0.5333018000001175,0.00048271718750072525,2371.02734375,0.27731496954842544,0.39512093487982625,0.5627003225712587,0.325,0.7340157861039251,"[[ 0  2  0  0  0  0]
 [ 3  5  2  0  1  0]
 [23 23 59 18  7  6]
 [16 17 27 31 16 21]
 [ 1  4  1  1  8 25]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",7,0.3274591999997938,0.0004768850000004932,2370.9765625,0.22679227941176472,0.5092905405405406,0.46546875,0.5625,0.7508366098597651,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 99 37  0  0]
 [ 0  0 47 81  0  0]
 [ 0  0  4 36  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",7,0.3150898000003508,0.00046687656250128385,2371.3359375,0.23720894607843138,0.5325324027916251,0.4881736526946108,0.5875,0.7731806885914055,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 99 37  0  0]
 [ 0  0 39 89  0  0]
 [ 0  0  3 37  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",7,0.69213260000015,0.0005052971875016965,2371.3125,0.2647058823529412,0.22166393424941214,0.19891430197417478,0.25625,0.29434374137067076,"[[ 2  0  0  0  0  0]
 [ 8  0  3  0  0  0]
 [56  0 80  0  0  0]
 [65  0 63  0  0  0]
 [17  0 23  0  0  0]
 [ 1  0  2  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",7,1.3112719000000652,0.00042147093749917986,2371.1171875,0.342761252228164,0.5488262155422736,0.5754257957871821,0.534375,0.7661272688481604,"[[ 0  1  1  0  0  0]
 [ 2  5  4  0  0  0]
 [ 1 15 84 30  6  0]
 [ 0  7 36 62 22  1]
 [ 0  3  4  9 20  4]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",7,0.31279210000047897,0.0004953956250005831,2371.3359375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6925325756239411,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",7,0.5818294000000606,0.00046846093750048113,2371.33203125,0.33740855243612594,0.48359693046667085,0.5794789214869965,0.428125,0.7669955097856247,"[[ 0  2  0  0  0  0]
 [ 3  4  4  0  0  0]
 [12 22 66 33  0  3]
 [ 4 17 27 47 20 13]
 [ 1  4  0  2 19 14]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",7,0.48413480000090203,0.0004708559374989818,2371.33984375,0.33255394013666073,0.46517062859902464,0.5807789468453481,0.403125,0.7482555566770059,"[[ 0  2  0  0  0  0]
 [ 3  5  2  0  1  0]
 [21 16 62 29  5  3]
 [ 8 12 26 45 19 18]
 [ 1  4  0  2 16 17]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",7,0.7003227999994124,0.0005062428124972485,2371.25,0.21200980392156862,0.1573468992248062,0.245751953125,0.121875,0.3260786924259846,"[[  2   0   0   0   0   0]
 [ 10   0   1   0   0   0]
 [ 99   0  37   0   0   0]
 [107   0  21   0   0   0]
 [ 36   0   4   0   0   0]
 [  2   0   1   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",7,0.6595085000008112,0.0004397878125018906,2371.265625,0.2551011029411765,0.5631944444444444,0.5646052631578948,0.603125,0.7716548175672774,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 100  36   0   0]
 [  0   0  37  89   2   0]
 [  0   0   3  33   4   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",7,0.3629305000013119,0.0004588084374972823,2371.08984375,0.2220435049019608,0.49992662855264547,0.46078506547127523,0.55,0.729306109121305,"[[ 0  0  2  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 93 43  0  0]
 [ 0  0 45 83  0  0]
 [ 0  0  1 39  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",7,0.647703200000251,0.0004985234374998981,2371.26171875,0.4113784907902555,0.39382509098833896,0.586350904991235,0.31875,0.7377613590913469,"[[ 1  1  0  0  0  0]
 [ 3  5  1  1  1  0]
 [22 30 54 18  3  9]
 [17 23 19 32 15 22]
 [ 1  6  1  2  8 22]
 [ 0  0  0  0  1  2]]"
GaussianNB(),"OrderedDict([('priors', None)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",7,0.0018607999991218094,2.9588749998765707e-05,2374.38671875,0.22221200980392156,0.5025062730025536,0.49891914735123055,0.528125,0.7105975521420398,"[[ 0  2  0  0  0  0]
 [ 0  0 10  1  0  0]
 [ 1  3 84 46  2  0]
 [ 0  3 37 82  6  0]
 [ 0  0  2 35  3  0]
 [ 0  0  0  3  0  0]]"
DecisionTreeClassifier(criterion='entropy'),"OrderedDict([('criterion', 'gini')])","('total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.004241700000420678,2.6389062497855775e-05,2377.265625,0.4267184714795009,0.6110255400687719,0.6124588145425094,0.6125,0.6958169623101027,"[[ 1  0  0  1  0  0]
 [ 0  2  4  4  1  0]
 [ 0  2 91 34  7  2]
 [ 0  2 35 78 11  2]
 [ 0  0  3 13 24  0]
 [ 0  0  1  2  0  0]]"
DecisionTreeClassifier(criterion='entropy'),"OrderedDict([('criterion', 'entropy')])","('total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",5,0.00589620000027935,2.599249999661879e-05,2377.15625,0.4028186274509804,0.6263509831868319,0.6262503480924534,0.628125,0.7110626899229687,"[[ 1  0  1  0  0  0]
 [ 3  0  4  4  0  0]
 [ 0  3 89 34  7  3]
 [ 1  0 30 88  6  3]
 [ 0  0  6  9 23  2]
 [ 0  0  3  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",6,2.1864545999997063,0.0004237853125005131,2377.703125,0.30505514705882353,0.5831510336928294,0.5754636591478697,0.6,0.7383040832535552,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 104  25   5   1]
 [  1   1  51  66   9   0]
 [  0   0   3  15  22   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",6,0.5131037999999535,0.000462123749997545,2377.65234375,0.2831982508912656,0.5142683546075366,0.5749049477729964,0.475,0.7493274267350417,"[[ 0  0  2  0  0  0]
 [ 3  2  5  1  0  0]
 [ 5 21 71 30  7  2]
 [ 4 10 28 57 23  6]
 [ 1  5  0  7 22  5]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",6,0.6214528000000428,0.0005119190625009651,2377.3984375,0.3238900958110517,0.22710406873139025,0.5531819006980024,0.18125,0.6897749696760901,"[[ 0  2  0  0  0  0]
 [ 2  6  2  0  1  0]
 [21 53 42  3  5 12]
 [21 46 13  5  8 35]
 [ 1  6  0  1  2 30]
 [ 0  0  0  0  0  3]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",6,0.6247663000012835,0.00043249812499652763,2377.66796875,0.2915287990196079,0.5766266812068339,0.5648483389504092,0.59375,0.7505460050399437,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 97 35  4  0]
 [ 1  0 46 75  6  0]
 [ 0  0  2 20 18  0]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",6,0.34990990000005695,0.00043148281250182663,2377.79296875,0.2680606617647059,0.5561875329291404,0.5594907431150316,0.578125,0.7624595485506761,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 94 41  1  0]
 [ 0  0 47 79  2  0]
 [ 0  0  2 26 12  0]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",6,0.41060640000068815,0.00048008843750153575,2377.71875,0.3928898358585859,0.4824520712172733,0.578592398123648,0.43125,0.7639676334440715,"[[ 1  1  0  0  0  0]
 [ 4  2  4  1  0  0]
 [10 22 68 25  8  3]
 [ 8  9 27 47 26 11]
 [ 1  3  0  5 19 12]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",6,0.2856441999992967,0.0005033715625017976,2377.71484375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6667470536407758,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",6,0.44247379999978875,0.0004569274999994377,2377.515625,0.21867340686274508,0.490050348202522,0.44639770584538024,0.54375,0.7273364272853138,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  33   0   0]
 [  0   0  57  71   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",6,0.6775142999995296,0.0005118687500043961,2377.8046875,0.24730392156862746,0.2930033827462232,0.24518068684934788,0.390625,0.5519800809761014,"[[ 0  0  2  0  0  0]
 [ 0  0  7  0  4  0]
 [ 0  0 93  0 43  0]
 [ 0  0 72  0 56  0]
 [ 0  0  8  0 32  0]
 [ 0  0  1  0  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",6,0.44887179999932414,0.0004876949999982116,2377.703125,0.39213550950683307,0.3910302428842264,0.5548230984274247,0.334375,0.7481977692486357,"[[ 1  1  0  0  0  0]
 [ 3  3  5  0  0  0]
 [16 25 66 13 10  6]
 [17 16 29 26 22 18]
 [ 1  3  1  3  9 23]
 [ 0  0  0  0  1  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",6,0.6778761999994458,0.0005136731249990589,2377.35546875,0.1708333333333333,0.2605779316131739,0.2442610062893082,0.428125,0.5654034878443563,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 127   0   1   0]
 [  0   0  39   0   1   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",6,0.46305539999957546,0.0004814650000014353,2377.671875,0.31747762551990494,0.3555964822466057,0.5240438192167524,0.290625,0.7334086845424073,"[[ 1  1  0  0  0  0]
 [ 3  3  4  1  0  0]
 [18 31 57 18  6  6]
 [23 17 23 23 25 17]
 [ 2  4  0  2  8 24]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",6,0.31156860000010056,0.00048121437499730745,2377.74609375,0.2146905637254902,0.48004718093890064,0.4370470011077702,0.534375,0.7315873654293907,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 104  32   0   0]
 [  0   0  61  67   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",6,0.30714350000016566,0.000505627812503917,2377.66015625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.7061999887326782,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",6,0.5929887000002054,0.0004827612499980205,2377.52734375,0.3503054441473559,0.39679068999117206,0.5434374998337599,0.34375,0.7368950558649596,"[[ 1  1  0  0  0  0]
 [ 3  3  5  0  0  0]
 [12 28 67 16  7  6]
 [15 12 29 26 33 13]
 [ 2  3  0  3 12 20]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",6,0.499236400000882,0.0004963559375028126,2377.82421875,0.35645981877599525,0.29774811127296824,0.543661491300674,0.240625,0.7197277426215702,"[[ 1  1  0  0  0  0]
 [ 4  4  2  0  1  0]
 [26 35 53  8  7  7]
 [26 25 22 12 17 26]
 [ 2  4  0  1  5 28]
 [ 0  0  0  0  1  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",6,0.6819106000002648,0.000528130937499327,2377.76953125,0.21691176470588236,0.15996655198776757,0.21255252100840338,0.134375,0.3630354027886361,"[[ 2  0  0  0  0  0]
 [10  0  1  0  0  0]
 [95  0 41  0  0  0]
 [98  0 30  0  0  0]
 [32  0  8  0  0  0]
 [ 1  0  2  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",6,1.4659499999997934,0.0004374318750024031,2377.484375,0.29393660873440286,0.5017058547041134,0.5480468682858076,0.48125,0.7487777620939788,"[[ 0  0  2  0  0  0]
 [ 2  2  5  2  0  0]
 [ 2 22 77 25  9  1]
 [ 1  8 37 50 30  2]
 [ 0  1  2  8 25  4]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",6,0.3100770000000921,0.0004775359375003063,2377.578125,0.22005208333333334,0.49324074836251597,0.4494819262922406,0.546875,0.7410538200750156,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 102  34   0   0]
 [  0   0  55  73   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",6,0.9477437999994436,0.0004549900000029083,2377.55859375,0.22403492647058823,0.502883791366822,0.45886119257086994,0.55625,0.7254652560033666,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 101  35   0   0]
 [  0   0  51  77   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",6,0.6772663000010652,0.0005096165624991044,2377.66015625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.33409012853409703,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",6,0.5910488999998051,0.0005057396875031373,2377.38671875,0.3537498143196673,0.25821618632260035,0.4636584683421433,0.221875,0.7087998740593084,"[[ 1  1  0  0  0  0]
 [ 3  5  3  0  0  0]
 [21 36 55  7  4 13]
 [25 31 28  6  7 31]
 [ 2  5  0  1  2 30]
 [ 0  0  0  0  1  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'chlorides', 'citric acid', 'fixed acidity')",6,0.6866458999993483,0.0005146431250011574,2377.921875,0.25857843137254904,0.2140824244966443,0.19683837318330988,0.240625,0.3196331744175128,"[[ 2  0  0  0  0  0]
 [ 8  0  3  0  0  0]
 [61  0 75  0  0  0]
 [69  0 59  0  0  0]
 [18  0 22  0  0  0]
 [ 0  0  3  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",6,2.383433499999228,0.00045524500000055924,2377.6796875,0.3178462009803921,0.6190746312638615,0.6173365877302313,0.63125,0.76393789747496,"[[  0   0   1   1   0   0]
 [  1   0   8   2   0   0]
 [  0   2 107  27   0   0]
 [  1   1  46  73   6   1]
 [  0   1   4  12  22   1]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",6,0.5551928999993834,0.0004915984374974869,2377.6875,0.3731185940285205,0.5318340794263674,0.5894523076839581,0.49375,0.772524450052159,"[[ 1  1  0  0  0  0]
 [ 2  2  5  2  0  0]
 [ 6 24 70 27  8  1]
 [ 4 11 31 63 16  3]
 [ 1  3  1  7 22  6]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",6,0.7236608000002889,0.000579966875000082,2377.8828125,0.3284550467914438,0.24984067695030032,0.6070770879764783,0.2,0.6886371021386795,"[[ 0  2  0  0  0  0]
 [ 2  6  2  0  1  0]
 [18 49 47  2  6 14]
 [17 48 14  7  8 34]
 [ 1  6  0  1  1 31]
 [ 0  0  0  0  0  3]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",6,0.5955000999983895,0.0004152946874967256,2377.6328125,0.31283700980392154,0.606808405735302,0.5920207215265355,0.625,0.7776140446862263,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 101  30   5   0]
 [  0   0  43  78   7   0]
 [  0   0   1  18  21   0]
 [  0   0   0   1   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",6,0.3394112000005407,0.0004265321874981964,2377.6015625,0.28952205882352944,0.5893989384197654,0.5845561317876753,0.609375,0.7827851174869416,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 96 39  1  0]
 [ 0  0 40 84  4  0]
 [ 0  0  1 24 15  0]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",6,0.39542960000107996,0.0004641090625000288,2377.71875,0.37279829545454546,0.5073223948865211,0.5936273611941786,0.459375,0.774562946713303,"[[ 1  1  0  0  0  0]
 [ 4  3  4  0  0  0]
 [12 17 68 29  7  3]
 [12  8 24 53 25  6]
 [ 1  3  0  6 22  8]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",6,0.2928962000005413,0.0004921796875009931,2377.78515625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6637416083871519,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",6,0.4165974000006827,0.0004641171874993688,2377.953125,0.22886029411764705,0.5128223226049313,0.4673240100565682,0.56875,0.7441551072545016,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 106  30   0   0]
 [  0   0  52  76   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",6,0.6758642000004329,0.0005066318749982202,2377.6015625,0.24730392156862746,0.29406182260366914,0.24714714416312256,0.390625,0.3530268088992626,"[[ 0  0  2  0  0  0]
 [ 0  0  6  0  5  0]
 [ 0  0 93  0 43  0]
 [ 0  0 71  0 57  0]
 [ 0  0  8  0 32  0]
 [ 0  0  1  0  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",6,0.4517539999997098,0.0004976187500005836,2377.640625,0.38819583704694,0.43346009949668884,0.582993594713173,0.371875,0.7591608080837096,"[[ 1  1  0  0  0  0]
 [ 6  1  4  0  0  0]
 [19 17 72 15  8  5]
 [19 12 27 31 23 16]
 [ 2  2  1  3 12 20]
 [ 0  0  0  0  1  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",6,0.6806930000002467,0.0005135099999961312,2377.9375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.5667261928662091,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",6,0.30446699999993143,0.00044646031249726546,2377.78125,0.2331801470588235,0.5205429486383149,0.5947177546515295,0.571875,0.760577286540171,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 104  32   0   0]
 [  0   0  50  78   0   0]
 [  0   0   2  37   1   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",6,0.47206269999878714,0.00047283812500040765,2377.76953125,0.32053995840760546,0.383447047726194,0.569433204718904,0.31875,0.7452773186323888,"[[ 1  1  0  0  0  0]
 [ 3  2  5  0  1  0]
 [22 23 64 13  9  5]
 [23 14 25 24 27 15]
 [ 2  3  0  1 10 24]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",6,0.30269919999955164,0.0004887565624983381,2377.78515625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.7193250973888963,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",6,1.4367657999991934,0.00042362156249851066,2377.6328125,0.38938697638146164,0.5477106614079746,0.583389824418761,0.528125,0.7685263801663207,"[[ 1  1  0  0  0  0]
 [ 2  2  7  0  0  0]
 [ 2 19 82 23 10  0]
 [ 3  6 37 61 19  2]
 [ 0  1  3 10 23  3]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",6,0.3156176000011328,0.0005062599999973826,2377.66796875,0.21484375,0.48113727336943724,0.43817902692489363,0.534375,0.7364022855745768,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 102  34   0   0]
 [  0   0  59  69   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",6,0.5959438999998383,0.00047825593750303594,2377.64453125,0.3502887329174094,0.4480071772201663,0.5758490152844912,0.384375,0.7510118971186708,"[[ 1  1  0  0  0  0]
 [ 4  2  4  1  0  0]
 [18 20 70 20  4  4]
 [15 12 27 38 25 11]
 [ 3  2  1  2 11 21]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",6,0.4993088000010175,0.0004939671875035856,2377.765625,0.21605299316696372,0.3291257433921672,0.5814175619291675,0.265625,0.7238095784081632,"[[ 0  2  0  0  0  0]
 [ 4  3  3  0  1  0]
 [33 22 62  5  8  6]
 [29 20 24 14 23 18]
 [ 2  3  0  1  5 29]
 [ 0  0  0  1  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",6,0.6719364999989921,0.0005229271875009545,2377.73046875,0.22426470588235295,0.17687767012511443,0.2219987922705314,0.153125,0.33900227864167976,"[[ 2  0  0  0  0  0]
 [10  0  1  0  0  0]
 [89  0 47  0  0  0]
 [95  0 33  0  0  0]
 [33  0  7  0  0  0]
 [ 1  0  2  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",6,0.34906950000004144,0.0004543156250008451,2377.76171875,0.2185968137254902,0.4895408523663763,0.4458038104235554,0.54375,0.7278192176276062,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   0 104  32   0   0]
 [  0   0  58  70   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",6,0.6742274000007455,0.000504365937501916,2377.5234375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.3330806880506925,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",6,0.28759809999974095,0.0004879840625051202,2377.78125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.7101179797009151,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'residual sugar', 'citric acid', 'fixed acidity')",6,0.7511682999993354,0.0004318909375001567,2377.78125,0.2512254901960784,0.549897962623104,0.5614483828797299,0.5875,0.7523242153067656,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 103  32   1   0]
 [  0   0  47  80   1   0]
 [  0   0   2  33   5   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,2.709946499999205,0.00042099906249859487,2377.5,0.2941023284313726,0.5937857483392129,0.5966214384225516,0.60625,0.7166864857266819,"[[ 0  0  2  0  0  0]
 [ 1  0  9  1  0  0]
 [ 1  2 94 36  2  1]
 [ 0  1 41 83  3  0]
 [ 0  0  4 19 17  0]
 [ 0  0  1  2  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.5543030999997427,0.00045121750000021166,2377.76171875,0.3259845699643494,0.550519930875576,0.5773856240675002,0.53125,0.7352170479578073,"[[ 0  1  1  0  0  0]
 [ 2  3  5  1  0  0]
 [ 3 15 74 38  4  2]
 [ 1  9 32 69 15  2]
 [ 0  3  2 10 24  1]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.618336100000306,0.0005006128125046416,2377.78125,0.41193506758764115,0.3293380707383104,0.5577282412303368,0.259375,0.7107233988902772,"[[ 2  0  0  0  0  0]
 [ 4  5  2  0  0  0]
 [23 25 49 16  4 19]
 [13 24 19 19 10 43]
 [ 0  4  0  0  7 29]
 [ 0  1  0  0  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.690065599999798,0.0004373312499978965,2377.7265625,0.2732689950980392,0.5710589410589411,0.5847543859649124,0.590625,0.7323885247000577,"[[ 0  1  1  0  0  0]
 [ 1  0  9  1  0  0]
 [ 0  1 94 41  0  0]
 [ 0  0 43 83  2  0]
 [ 0  0  3 25 12  0]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.37230909999925643,0.00044072375000041574,2377.58203125,0.2659007352941177,0.5681698873297172,0.5914289825846428,0.59375,0.7448348438561638,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  1 95 40  0  0]
 [ 0  0 41 86  1  0]
 [ 0  0  3 28  9  0]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.42087179999907676,0.0004635437499985073,2377.7578125,0.28221785873440286,0.5241353319783197,0.5720065681444991,0.4875,0.7452602707531368,"[[ 0  1  1  0  0  0]
 [ 2  2  6  1  0  0]
 [ 4 13 77 32  4  6]
 [ 3 10 30 57 16 12]
 [ 0  3  2  9 20  6]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.2827723000009428,0.0004870431250026286,2377.58984375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.684280113238694,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.4463742000007187,0.0004429453124998872,2377.75,0.2334558823529412,0.5239381854436689,0.4802228875582169,0.578125,0.7132941022187633,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 97 39  0  0]
 [ 0  0 40 88  0  0]
 [ 0  0  3 37  0  0]
 [ 0  0  1  2  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.6949053999996977,0.0005351965624981858,2377.9453125,0.3419117647058824,0.07175573300573299,0.265852490421456,0.153125,0.5770392482294417,"[[  2   0   0   0   0   0]
 [  5   0   0   0   6   0]
 [  5   0   7   0 124   0]
 [  6   0   4   0 118   0]
 [  0   0   0   0  40   0]
 [  0   0   1   0   2   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.4570769999991171,0.00047179562500332395,2377.828125,0.37043690582293526,0.524034411218191,0.6180604567319175,0.46875,0.7421565889409638,"[[ 0  2  0  0  0  0]
 [ 3  5  3  0  0  0]
 [ 2 15 74 30  5 10]
 [ 7 12 24 50 14 21]
 [ 0  3  1  2 20 14]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.6015673000001698,0.00046533937500043977,2377.47265625,0.3346590909090909,0.5276380361059313,0.6237686263358592,0.471875,0.7388895579501465,"[[ 0  2  0  0  0  0]
 [ 1  6  4  0  0  0]
 [ 4 26 68 27  4  7]
 [ 7 11 24 56 15 15]
 [ 0  4  0  4 21 11]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.49132079999981215,0.0004801521875037906,2377.77734375,0.34761075831847893,0.4083684314471565,0.5715969593226987,0.3375,0.7257881397130892,"[[ 1  1  0  0  0  0]
 [ 5  4  2  0  0  0]
 [17 20 62 19 10  8]
 [16 17 25 33 15 22]
 [ 0  4  1  1  7 27]
 [ 0  1  0  0  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.6750503000002936,0.0004987518749999253,2377.7734375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.32151449995648906,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.6829268000001321,0.0005040565624994997,2377.875,0.30514705882352944,0.24356138235885078,0.1856296284574973,0.359375,0.323196372458296,"[[  2   0   0   0   0   0]
 [  8   0   3   0   0   0]
 [ 23   0 113   0   0   0]
 [ 24   0 104   0   0   0]
 [  4   0  36   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.2999055000000226,0.0004915071875018385,2377.74609375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6960795275891887,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.4599405000008119,0.00046731937499657763,2377.85546875,0.38423759655377304,0.46731502967146393,0.5769259029490723,0.40625,0.7330839955271751,"[[ 1  1  0  0  0  0]
 [ 3  4  4  0  0  0]
 [11 16 70 29  4  6]
 [ 8 15 23 44 19 19]
 [ 0  3  1  2 10 24]
 [ 0  1  0  1  0  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.31321570000000065,0.0004423271874998136,2377.7421875,0.23246017156862744,0.5215807523812879,0.48058620689655174,0.575,0.7252688673427663,"[[ 0  0  2  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 93 43  0  0]
 [ 0  0 37 91  0  0]
 [ 0  0  4 36  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.6721751000004588,0.0005001346875019407,2377.5625,0.22426470588235295,0.1605613842931535,0.1768302979778547,0.153125,0.31313238685500966,"[[ 2  0  0  0  0  0]
 [10  0  1  0  0  0]
 [89  0 47  0  0  0]
 [81  0 47  0  0  0]
 [23  0 17  0  0  0]
 [ 2  0  1  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,1.7510235999998258,0.00042866000000003625,2377.56640625,0.30660372103386807,0.5780299401118952,0.598997709551657,0.559375,0.7286091845175735,"[[ 0  0  2  0  0  0]
 [ 2  1  7  1  0  0]
 [ 2 14 81 31  6  2]
 [ 0 10 32 74  9  3]
 [ 0  2  3 11 23  1]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'scale')])","('density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'volatile acidity', 'fixed acidity')",6,0.5900834999993094,0.0004959287499957555,2377.74609375,0.43258318478906727,0.4025094496335101,0.5500302171025855,0.3375,0.7268503993495898,"[[ 2  0  0  0  0  0]
 [ 5  4  2  0  0  0]
 [11 22 61 21  5 16]
 [11 16 27 32 14 28]
 [ 1  3  1  3  8 24]
 [ 0  1  0  1  0  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",6,2.217024900000979,0.0004126418750047378,2377.79296875,0.27035845588235297,0.5678816016963248,0.5633171458171458,0.584375,0.7396252229998721,"[[ 0  0  2  0  0  0]
 [ 1  0  7  3  0  0]
 [ 1  3 98 33  1  0]
 [ 0  0 44 77  6  1]
 [ 0  1  5 22 12  0]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",6,0.4969369000009465,0.0004468656249969172,2377.77734375,0.3795398841354724,0.4927271099910728,0.5581544937722032,0.45625,0.7492645342591275,"[[ 1  1  0  0  0  0]
 [ 2  4  4  1  0  0]
 [ 6 22 69 32  5  2]
 [ 4  7 30 52 26  9]
 [ 1  7  1  7 20  4]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",6,0.6448780999999144,0.0005037587499998608,2377.5546875,0.3070447118241236,0.3403483570504907,0.588812138030888,0.265625,0.6820054035360651,"[[ 0  2  0  0  0  0]
 [ 1  6  2  1  1  0]
 [19 50 50 11  2  4]
 [23 36 17 24  9 19]
 [ 4 16  1  1  3 15]
 [ 0  0  0  0  1  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",6,0.5947594999997818,0.0004141068750016075,2377.88671875,0.2732689950980392,0.5698715909277268,0.5621201121927074,0.590625,0.7528921838537398,"[[ 0  0  2  0  0  0]
 [ 1  0  9  1  0  0]
 [ 0  0 94 42  0  0]
 [ 0  0 37 83  8  0]
 [ 0  0  3 25 12  0]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",6,0.35231869999915943,0.000429326562505139,2377.84765625,0.26026348039215685,0.5487523754441048,0.5506488383762617,0.571875,0.7631690494337176,"[[ 0  0  2  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 87 49  0  0]
 [ 0  0 37 86  5  0]
 [ 0  0  2 28 10  0]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",6,0.42015229999924486,0.00046058343750132735,2377.90625,0.3284188391265597,0.46611541666396333,0.5561198274754556,0.4125,0.7580961930914321,"[[ 1  1  0  0  0  0]
 [ 3  2  5  0  0  1]
 [ 3 29 62 31  6  5]
 [ 5  8 27 49 22 17]
 [ 1  6  0  6 18  9]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",6,0.28194489999987127,0.00048709187499866856,2377.62109375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.68065316003993,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",6,0.41595430000052147,0.0004750846875026582,2377.66796875,0.23085171568627452,0.5189320616149884,0.47656354089110076,0.571875,0.7554348795727271,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 97 39  0  0]
 [ 0  0 42 86  0  0]
 [ 0  0  2 38  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",6,0.6764043000002857,0.0005124693749962717,2377.72265625,0.16666666666666666,0.02777777777777778,0.015625,0.125,0.33184051405082543,"[[  0   0   0   0   2   0]
 [  0   0   0   0  11   0]
 [  0   0   0   0 136   0]
 [  0   0   0   0 128   0]
 [  0   0   0   0  40   0]
 [  0   0   0   0   3   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",6,0.4708857999994507,0.0004973703125017437,2377.82421875,0.31737410873440286,0.4307518331502731,0.5490068543928838,0.371875,0.7496869022494331,"[[ 1  1  0  0  0  0]
 [ 3  2  5  0  0  1]
 [ 8 28 60 25  7  8]
 [ 8 16 26 36 21 21]
 [ 0  7  0  5 20  8]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",6,0.6823920999995607,0.000500320937504739,2377.81640625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6030466223653772,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",6,0.31249019999995653,0.0004467040625002028,2377.703125,0.2299325980392157,0.5173605377992688,0.47874194318453095,0.56875,0.7574912092547674,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 92 44  0  0]
 [ 0  0 38 90  0  0]
 [ 0  0  2 38  0  0]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",6,0.5369429000002128,0.0004792587499991896,2377.8046875,0.3035952354426619,0.36841921595705285,0.5425991015961846,0.296875,0.7208219491016763,"[[ 0  2  0  0  0  0]
 [ 2  4  3  0  1  1]
 [23 32 53 19  6  3]
 [19 19 22 29 16 23]
 [ 3  8  0  4  7 18]
 [ 0  0  0  0  1  2]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",6,0.3005729999986215,0.0004891240624999682,2377.8203125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.7188250782324326,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",6,0.5859653000006801,0.0004627187499977481,2377.6875,0.3088569518716578,0.43820595048729993,0.5592177260936632,0.371875,0.7525069698383322,"[[ 1  1  0  0  0  0]
 [ 3  2  5  0  0  1]
 [11 31 59 28  2  5]
 [ 8 16 24 40 20 20]
 [ 0  8  0  4 17 11]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",6,1.3080678999995143,0.0004375962500034802,2377.734375,0.407128732174688,0.527421681615404,0.5771110893120246,0.503125,0.7372583747209502,"[[ 1  1  0  0  0  0]
 [ 2  4  4  1  0  0]
 [ 1 25 76 27  7  0]
 [ 0  5 35 57 27  4]
 [ 0  6  3  6 23  2]
 [ 0  0  0  0  3  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",6,0.6800058999997418,0.0004993368750035643,2377.60546875,0.2696078431372549,0.22612542342663572,0.19842261904761907,0.26875,0.3022213072169372,"[[ 2  0  0  0  0  0]
 [ 8  0  3  0  0  0]
 [52  0 84  0  0  0]
 [55  0 73  0  0  0]
 [23  0 17  0  0  0]
 [ 0  0  3  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",6,0.7979720000002999,0.00043290406250093836,2377.89453125,0.23926164215686277,0.5343672581629134,0.5340589092086099,0.578125,0.7595886875974557,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 96 40  0  0]
 [ 0  0 40 87  1  0]
 [ 0  0  2 36  2  0]
 [ 0  0  0  1  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",6,0.5024955999997474,0.0004654749999986052,2377.90234375,0.34287451723113493,0.41729113944789004,0.5706843948006828,0.34375,0.7419773977059362,"[[ 1  1  0  0  0  0]
 [ 4  2  4  0  0  1]
 [18 29 58 23  3  5]
 [15 18 23 34 17 21]
 [ 2  8  0  2 14 14]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",6,0.3151894999991782,0.00047175812500199754,2377.90625,0.22051164215686278,0.4951201201201201,0.4525,0.546875,0.7438225055758214,"[[ 0  0  2  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 96 40  0  0]
 [ 0  0 49 79  0  0]
 [ 0  0  4 36  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",6,0.6766905999993469,0.0005069049999974595,2377.90234375,0.21691176470588236,0.16448841846909032,0.2293275452976704,0.134375,0.36690804341597605,"[[ 2  0  0  0  0  0]
 [10  0  1  0  0  0]
 [95  0 41  0  0  0]
 [99  0 29  0  0  0]
 [36  0  4  0  0  0]
 [ 2  0  1  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar')",6,0.35702630000014324,0.00045912093750075653,2377.72265625,0.22977941176470587,0.5174754314195702,0.47909083715777817,0.56875,0.7336065530170255,"[[ 0  0  1  1  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 94 42  0  0]
 [ 0  0 40 88  0  0]
 [ 0  0  1 39  0  0]
 [ 0  0  0  3  0  0]]"
GaussianNB(),"OrderedDict([('priors', None)])","('pH', 'density', 'residual sugar', 'fixed acidity')",4,0.0017165999997814652,2.843218750285814e-05,2378.2890625,0.18952205882352943,0.40918261385551097,0.40974955277280856,0.46875,0.6128274697469562,"[[  0   0   1   1   0   0]
 [  0   0   9   2   0   0]
 [  0   3 113  19   1   0]
 [  0   3  85  36   3   1]
 [  0   1  12  26   1   0]
 [  0   0   1   2   0   0]]"
DecisionTreeClassifier(criterion='entropy'),"OrderedDict([('criterion', 'gini')])","('total sulfur dioxide', 'free sulfur dioxide', 'volatile acidity', 'fixed acidity')",4,0.003912400001354399,2.6435312497596898e-05,2378.47265625,0.42492619206773624,0.6151292153515227,0.6147583784606685,0.615625,0.700141355888777,"[[ 1  0  1  0  0  0]
 [ 0  2  2  7  0  0]
 [ 0  4 94 32  4  2]
 [ 1  4 34 77 12  0]
 [ 0  0  4 12 23  1]
 [ 0  0  0  3  0  0]]"
DecisionTreeClassifier(criterion='entropy'),"OrderedDict([('criterion', 'entropy')])","('total sulfur dioxide', 'free sulfur dioxide', 'volatile acidity', 'fixed acidity')",4,0.005037799999627168,2.612249999742744e-05,2378.546875,0.3776807598039216,0.5811971288631804,0.5783651543802992,0.5875,0.670017122786039,"[[ 1  0  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  3 84 43  6  0]
 [ 0  3 33 83  8  1]
 [ 0  0  6 13 20  1]
 [ 0  0  2  1  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.5)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar')",5,0.7283495000010589,2.9236249997666163e-05,2380.37109375,0.21070772058823528,0.47382737780907125,0.43580203304682286,0.521875,0.695798354421721,"[[ 0  0  0  2  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 88 48  0  0]
 [ 0  0 49 79  0  0]
 [ 0  0  4 36  0  0]
 [ 0  0  1  2  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.1)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar')",5,0.7616689999995288,2.957625000021835e-05,2380.42578125,0.20465686274509806,0.4612467532467532,0.4284972022382094,0.50625,0.6910215902673047,"[[ 0  0  0  2  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 82 54  0  0]
 [ 0  0 47 80  1  0]
 [ 0  0  4 36  0  0]
 [ 0  0  0  3  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.5)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar')",5,0.7275193999994372,2.9330937502436426e-05,2380.3046875,0.2002144607843137,0.4500187687687688,0.41140625000000003,0.496875,0.6853061809959182,"[[ 0  0  0  2  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 89 47  0  0]
 [ 0  0 58 70  0  0]
 [ 0  0  5 35  0  0]
 [ 0  0  1  2  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.9)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar')",5,0.7408302999992884,2.9724687499310677e-05,2380.1953125,0.20726102941176472,0.46667729667162733,0.4337517014973177,0.5125,0.6938888822780698,"[[ 0  0  0  2  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 82 54  0  0]
 [ 0  0 45 82  1  0]
 [ 0  0  4 36  0  0]
 [ 0  0  0  3  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.5)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar')",5,0.7279995000008057,2.9821875000379804e-05,2380.3203125,0.2100183823529412,0.4717163482555323,0.4415525667434064,0.51875,0.6957456268086604,"[[ 0  0  0  2  0  0]
 [ 0  0  5  6  0  0]
 [ 0  0 80 56  0  0]
 [ 0  0 42 86  0  0]
 [ 0  0  4 36  0  0]
 [ 0  0  0  3  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.1)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar')",5,0.7414874999994936,2.971093750261389e-05,2380.33984375,0.20726102941176472,0.46599246526960203,0.4327560121038382,0.5125,0.6963210989941755,"[[ 0  0  0  2  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 82 54  0  0]
 [ 0  0 46 82  0  0]
 [ 0  0  3 37  0  0]
 [ 0  0  0  3  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.9)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar')",5,0.7223635999998805,2.9065312503462337e-05,2380.28515625,0.20948223039215685,0.47105399061032865,0.43355201131363924,0.51875,0.697694193822867,"[[ 0  0  0  2  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 87 49  0  0]
 [ 0  0 49 79  0  0]
 [ 0  0  4 36  0  0]
 [ 0  0  1  2  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.9)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar')",5,0.7579103999996732,3.157656249754837e-05,2380.08984375,0.21269914215686278,0.4777131300190979,0.45116410256410255,0.525,0.691798973842503,"[[ 0  0  0  2  0  0]
 [ 0  0  5  6  0  0]
 [ 0  0 79 57  0  0]
 [ 0  0 39 89  0  0]
 [ 0  0  2 38  0  0]
 [ 0  0  0  3  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.1)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'residual sugar')",5,0.7919323999994958,3.6628124996695986e-05,2380.05859375,0.21086090686274508,0.4742293233082706,0.43791035353535346,0.521875,0.69323532818035,"[[ 0  0  0  2  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 86 50  0  0]
 [ 0  0 47 81  0  0]
 [ 0  0  3 37  0  0]
 [ 0  0  1  2  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,2.4546721999995498,0.0004133693750020484,2381.46875,0.3331815396613191,0.6187497136719547,0.6251994937140485,0.625,0.7593813647757409,"[[ 0  0  2  0  0  0]
 [ 1  1  5  4  0  0]
 [ 1  0 91 41  3  0]
 [ 1  1 32 85  8  1]
 [ 0  0  2 14 23  1]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5626769000009517,0.0004528775000039786,2381.6796875,0.33497381907308377,0.5998648894033868,0.6163053083552261,0.5875,0.7545598439033642,"[[ 0  1  1  0  0  0]
 [ 2  1  8  0  0  0]
 [ 3  6 88 34  3  2]
 [ 1  8 29 70 16  4]
 [ 0  1  0  9 29  1]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6641601999999693,0.0005205806249989564,2381.421875,0.37234894904931676,0.31093928258978043,0.5476501667329193,0.253125,0.6806008704730929,"[[ 2  0  0  0  0  0]
 [ 6  3  2  0  0  0]
 [18 31 58  9  5 15]
 [15 27 26 13 12 35]
 [ 1  6  0  0  4 29]
 [ 0  1  0  0  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6892520999990666,0.00043624687500027904,2381.76171875,0.32509330436720146,0.6250288398011491,0.6307343951093951,0.634375,0.7630094440372462,"[[ 0  0  2  0  0  0]
 [ 1  1  9  0  0  0]
 [ 2  1 98 34  1  0]
 [ 1  0 38 85  4  0]
 [ 0  1  1 19 19  0]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.3811669000006077,0.0004573753124986979,2381.71875,0.2841911764705882,0.6003144985592804,0.6118824240512981,0.625,0.7625267349587509,"[[  0   0   2   0   0   0]
 [  1   0  10   0   0   0]
 [  0   1 101  33   1   0]
 [  0   0  39  88   1   0]
 [  0   0   1  28  11   0]
 [  0   0   0   2   1   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.42165439999917,0.00047950750000040897,2381.64453125,0.36580650252525254,0.5509160537214207,0.5964255660050137,0.525,0.7626048219152777,"[[ 0  1  1  0  0  0]
 [ 2  2  6  1  0  0]
 [ 3  9 85 31  6  2]
 [ 3 10 31 55 21  8]
 [ 0  5  0  4 25  6]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.3025214999997843,0.0004963871875020232,2381.578125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6703399868434434,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.4431019000003289,0.0004512790624971785,2381.765625,0.22817095588235295,0.5122988505747126,0.4685458665416471,0.565625,0.7328951145479229,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 98 38  0  0]
 [ 0  0 45 83  0  0]
 [ 0  0  2 38  0  0]
 [ 0  0  1  2  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7173201000005065,0.0005110743750037728,2381.765625,0.296078431372549,0.23340463017848906,0.23572761194029854,0.290625,0.3766030476989436,"[[ 1  0  1  0  0  0]
 [ 1  0  6  0  4  0]
 [ 1  0 58  0 77  0]
 [ 0  0 44  0 84  0]
 [ 0  0  6  0 34  0]
 [ 0  0  1  0  2  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.470571399999244,0.0004851346875000218,2381.5,0.35162563131313135,0.4608815311286486,0.5559254488898915,0.415625,0.7458780450064545,"[[ 0  2  0  0  0  0]
 [ 2  5  3  1  0  0]
 [ 3 18 68 32  8  7]
 [ 4 17 26 38 23 20]
 [ 0  4  0  3 21 12]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6053933000002871,0.0004828325000005407,2381.71875,0.4547951945929887,0.5248643730256267,0.597386717805634,0.4875,0.749237593566713,"[[ 1  1  0  0  0  0]
 [ 1  4  5  1  0  0]
 [ 3 15 77 29  7  5]
 [ 2 16 28 50 21 11]
 [ 0  4  0  3 23 10]
 [ 0  0  0  0  2  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,1.5141074000002845,0.00042155906249945473,2381.8359375,0.31896585338680933,0.5840389784946236,0.5845236013986014,0.584375,0.7511418315568952,"[[ 0  0  2  0  0  0]
 [ 1  1  6  3  0  0]
 [ 1  3 93 34  4  1]
 [ 1  6 40 69 11  1]
 [ 0  1  2 12 24  1]
 [ 0  0  0  2  1  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'auto')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7189481000004889,0.0005253437499959546,2381.67578125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.333257927961352,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'auto')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.3498509000000922,0.00048591031249998193,2381.89453125,0.20863970588235295,0.4673974698440718,0.4257854586921474,0.51875,0.6934334007191474,"[[ 0  0  2  0  0  0]
 [ 0  0 10  1  0  0]
 [ 0  0 98 38  0  0]
 [ 0  0 60 68  0  0]
 [ 0  0  2 38  0  0]
 [ 0  0  1  2  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'auto')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.720362699999896,0.0005110181250017831,2381.4765625,0.24877450980392157,0.18627558479532164,0.16758333333333333,0.215625,0.32281475427996936,"[[ 2  0  0  0  0  0]
 [ 9  0  2  0  0  0]
 [69  0 67  0  0  0]
 [59  0 69  0  0  0]
 [10  0 30  0  0  0]
 [ 1  0  2  0  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'scale')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.3460469000001467,0.00048808656250116657,2381.9765625,0.21675857843137256,0.4867644126444196,0.4450466815109966,0.5375,0.7195560662845292,"[[ 0  0  2  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 94 42  0  0]
 [ 0  0 50 78  0  0]
 [ 0  0  3 37  0  0]
 [ 0  0  1  2  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5257946999990963,0.0004960703124993415,2381.51171875,0.38486844548425436,0.405637913886319,0.556932512907853,0.346875,0.7250998815556211,"[[ 1  1  0  0  0  0]
 [ 3  6  2  0  0  0]
 [17 20 63 20  9  7]
 [ 8 16 30 31 22 21]
 [ 0  6  0  0  9 25]
 [ 0  1  0  0  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.4790658000001713,0.00047393906250476904,2381.86328125,0.45024834744503867,0.4917022525144329,0.5905547689646953,0.44375,0.73842056886015,"[[ 1  1  0  0  0  0]
 [ 1  6  4  0  0  0]
 [ 9 11 73 28  9  6]
 [ 6 12 27 43 20 20]
 [ 0  4  0  1 18 17]
 [ 0  1  0  0  1  1]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.3301123000001098,0.0005126734374982789,2381.5546875,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.7100373130451553,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'auto')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7720245999989857,0.000445549374995835,2381.5078125,0.23390012254901962,0.522501674847099,0.5536832486763955,0.565625,0.7377723688239105,"[[ 0  0  2  0  0  0]
 [ 1  0  9  1  0  0]
 [ 1  0 98 36  1  0]
 [ 0  0 47 81  0  0]
 [ 0  0  0 38  2  0]
 [ 0  0  1  2  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.3383434999996098,0.0004765809375044228,2381.6328125,0.22587316176470587,0.5071602852852853,0.46520989974937343,0.559375,0.7453262762908444,"[[ 0  0  2  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 94 42  0  0]
 [ 0  0 43 85  0  0]
 [ 0  0  4 36  0  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=0.001, class_weight='balanced', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'scale')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7253524000007019,0.0005170568750031635,2381.94140625,0.31004901960784315,0.2509136144031053,0.19072910578609,0.371875,0.32025057614662195,"[[  2   0   0   0   0   0]
 [  6   0   5   0   0   0]
 [ 19   0 117   0   0   0]
 [ 25   0 103   0   0   0]
 [  6   0  34   0   0   0]
 [  1   0   2   0   0   0]]"
"GaussianProcessClassifier(copy_X_train=False, n_jobs=-1)","OrderedDict([('copy_X_train', False), ('warm_start', True)])","('pH', 'density', 'total sulfur dioxide', 'volatile acidity', 'fixed acidity')",5,1.8940674000004947,0.008310278750002453,2804.4921875,0.22518382352941177,0.5049703272812739,0.4603481719503115,0.559375,0.7055604308779151,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 103  33   0   0]
 [  0   0  52  76   0   0]
 [  0   0   2  38   0   0]
 [  0   0   1   2   0   0]]"
"GaussianProcessClassifier(copy_X_train=False, n_jobs=-1)","OrderedDict([('copy_X_train', False), ('warm_start', False)])","('pH', 'density', 'total sulfur dioxide', 'volatile acidity', 'fixed acidity')",5,2.8481078000004345,0.00829679843750455,2858.25390625,0.22518382352941177,0.5049703272812739,0.4603481719503115,0.559375,0.7055604308779151,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 103  33   0   0]
 [  0   0  52  76   0   0]
 [  0   0   2  38   0   0]
 [  0   0   1   2   0   0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.5)])","('total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",4,0.7220309000003908,2.939812500244443e-05,2383.20703125,0.21479779411764702,0.4806863701111844,0.4988131313131313,0.525,0.6699378763509676,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 89 46  1  0]
 [ 0  0 50 78  0  0]
 [ 0  0  4 35  1  0]
 [ 0  0  1  2  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.1)])","('total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",4,0.7349142999992182,2.9398750001519147e-05,2383.30859375,0.21587009803921567,0.4824529953771847,0.4987298195631529,0.528125,0.6716083543988578,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 92 43  1  0]
 [ 0  0 52 76  0  0]
 [ 0  0  7 32  1  0]
 [ 0  0  1  2  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.5)])","('total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",4,0.709896899999876,2.9372500000590664e-05,2383.44921875,0.21020220588235294,0.4696726678662152,0.5556719913523901,0.5125,0.6671179310238198,"[[ 0  0  1  1  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 81 55  0  0]
 [ 0  0 46 82  0  0]
 [ 0  0  3 36  1  0]
 [ 0  0  1  2  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.9)])","('total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",4,0.7266017000001739,3.047218750111824e-05,2383.55859375,0.2077512254901961,0.46368116017211225,0.5502927729205102,0.50625,0.6723850352006224,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 79 57  0  0]
 [ 0  0 46 82  0  0]
 [ 0  0  2 37  1  0]
 [ 0  0  1  2  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.5)])","('total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",4,0.7383890000000974,3.113468750370885e-05,2383.22265625,0.21372549019607842,0.4773538897169261,0.5585373075404659,0.521875,0.6740673717796657,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 86 50  0  0]
 [ 0  0 48 80  0  0]
 [ 0  0  4 35  1  0]
 [ 0  0  1  2  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.1)])","('total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",4,0.8312480000004143,3.180031250167303e-05,2383.4296875,0.2075980392156863,0.46321154023067806,0.5469196428571428,0.50625,0.674411951818598,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 81 55  0  0]
 [ 0  0 48 80  0  0]
 [ 0  0  4 35  1  0]
 [ 0  0  1  2  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.9)])","('total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",4,0.7427274000001489,2.9129374996728075e-05,2383.4765625,0.2138020833333333,0.4777845351218707,0.5603448275862069,0.521875,0.6716760889769291,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 85 51  0  0]
 [ 0  0 47 81  0  0]
 [ 0  0  3 36  1  0]
 [ 0  0  1  2  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.1)])","('total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",4,0.7173370999989857,2.915593750003609e-05,2383.375,0.20767463235294117,0.46409389842893684,0.4873796147672552,0.50625,0.6708452471787293,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 80 55  1  0]
 [ 0  0 47 81  0  0]
 [ 0  0  3 36  1  0]
 [ 0  0  1  2  0  0]]"
MLPClassifier(),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.9)])","('total sulfur dioxide', 'free sulfur dioxide', 'residual sugar', 'citric acid')",4,0.7014816999999312,2.8949062499350476e-05,2383.58203125,0.2089001225490196,0.46677214619282015,0.4890204865556978,0.509375,0.6687854635734558,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 81 54  1  0]
 [ 0  0 47 81  0  0]
 [ 0  0  4 35  1  0]
 [ 0  0  1  2  0  0]]"
