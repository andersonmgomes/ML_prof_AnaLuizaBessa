algorithm,params,features,n_features,train_time,predict_time,mem_max,balanced_accuracy,f1_weighted,precision_weighted,recall_weighted,roc_auc_ovr_weighted,confusion_matrix
"SVC(C=10.0, gamma='auto', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5724102000001494,0.00047263656250038364,1494.234375,0.6552779634581105,0.4962087990155288,0.5892177657509615,0.45625,0.7405865404974031,"[[ 2  0  0  0  0  0]
 [ 1  6  3  1  0  0]
 [ 5 32 64 27  5  3]
 [ 1 26 24 50 19  8]
 [ 0  2  2  8 21  7]
 [ 0  0  0  0  0  3]]"
"SVC(C=10.0, gamma='auto', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.45414930000015374,0.00048064218750027977,1494.53125,0.6186511252228164,0.4762305394359436,0.6131977242480944,0.425,0.7401451250719309,"[[ 2  0  0  0  0  0]
 [ 2  6  1  1  1  0]
 [13 24 73 16  5  5]
 [ 7 22 26 39 22 12]
 [ 1  3  2  3 13 18]
 [ 0  0  0  0  0  3]]"
"SVC(C=10.0, gamma='auto', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.392932299999984,0.0004682231250001223,1492.82421875,0.5468898544266191,0.5086474293880734,0.5675643414602861,0.484375,0.7451733751222658,"[[ 1  1  0  0  0  0]
 [ 1  7  1  1  1  0]
 [ 3 24 71 30  5  3]
 [ 2 13 33 52 24  4]
 [ 0  2  1 10 22  5]
 [ 0  0  0  0  1  2]]"
"SVC(C=10.0, gamma='auto', probability=True)","OrderedDict([('C', 10.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5209037999998145,0.0005040403125001092,1494.16015625,0.5367995209447415,0.40888916379096496,0.5636118856686065,0.346875,0.7218261774257644,"[[ 2  0  0  0  0  0]
 [ 4  3  0  2  2  0]
 [25 16 62 19  6  8]
 [14 21 24 31 21 17]
 [ 1  3  1  3 10 22]
 [ 0  0  0  0  0  3]]"
"SVC(C=10.0, gamma='auto', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.4678569999998672,0.0005052999999996643,1493.26171875,0.5150591391859773,0.4601481916752369,0.573452741738165,0.415625,0.7331678263332206,"[[ 1  1  0  0  0  0]
 [ 1  8  1  1  0  0]
 [ 4 29 69 23  4  7]
 [ 2 27 27 37 21 14]
 [ 0  2  2  5 16 15]
 [ 0  0  0  0  1  2]]"
"SVC(C=10.0, gamma='auto', probability=True)","OrderedDict([('C', 1.0), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6972395999998753,0.0005331862500000284,1493.48828125,0.4919020164884136,0.3002695389465962,0.5561142344108533,0.2375,0.6804536724294181,"[[ 2  0  0  0  0  0]
 [ 4  4  0  0  0  3]
 [30 25 47 11  7 16]
 [24 28 17 15 10 34]
 [ 1  3  2  1  5 28]
 [ 0  0  0  0  0  3]]"
DecisionTreeClassifier(criterion='entropy'),"OrderedDict([('criterion', 'gini')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.0071107000003394205,2.651312500034919e-05,1620.0390625,0.4035056446821153,0.6309994841883902,0.6338980607966457,0.63125,0.7218022089184235,"[[ 0  1  1  0  0  0]
 [ 0  2  5  2  2  0]
 [ 0  4 96 29  6  1]
 [ 0  2 26 80 20  0]
 [ 0  0  7  9 23  1]
 [ 0  0  0  0  2  1]]"
GradientBoostingClassifier(),"OrderedDict([('loss', 'deviance')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.1233729999999014,6.010999999972455e-05,2080.9140625,0.4021306818181818,0.6353956651757959,0.6318524385560675,0.64375,0.7918102860136871,"[[  1   1   0   0   0   0]
 [  0   1   6   4   0   0]
 [  0   2 102  29   3   0]
 [  0   2  31  86   9   0]
 [  0   0   1  21  16   2]
 [  0   0   0   0   3   0]]"
"SVC(C=10.0, gamma='auto', probability=True)","OrderedDict([('C', 100.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5103106999999909,0.000449437812500264,1492.6640625,0.3796252970885324,0.5499554023279352,0.5854389880952381,0.53125,0.7446328428711163,"[[ 0  1  1  0  0  0]
 [ 1  3  3  3  1  0]
 [ 3 15 82 28  8  0]
 [ 1  7 33 60 25  2]
 [ 0  2  1  9 24  4]
 [ 0  0  0  0  2  1]]"
AdaBoostClassifier(algorithm='SAMME'),"OrderedDict([('algorithm', 'SAMME.R')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.07717580000007729,0.00013354187500027592,1777.234375,0.36354166666666665,0.43428965503201306,0.4785764375876577,0.446875,0.5528696593900843,"[[ 2  0  0  0  0  0]
 [ 5  0  4  2  0  0]
 [18  0 51 65  2  0]
 [ 5  0 35 84  4  0]
 [ 1  0  3 30  6  0]
 [ 0  0  0  3  0  0]]"
MultinomialNB(fit_prior=False),"OrderedDict([('fit_prior', False)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.0017321000000265485,2.687718749996293e-05,2073.9609375,0.3597152592097445,0.33050247702143803,0.5329338161909308,0.315625,0.6550000813877376,"[[ 0  2  0  0  0  0]
 [ 0  6  1  2  1  1]
 [ 3 47 48 11 22  5]
 [ 2 48 18 13 41  6]
 [ 0  4  1  1 33  1]
 [ 0  0  1  0  1  1]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=13, p=3)","OrderedDict([('n_neighbors', 3), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.0029626000000462227,0.00036814624999976787,1483.10546875,0.35458166221033866,0.5409502162055111,0.5440046296296296,0.540625,0.6979985721697992,"[[ 1  0  1  0  0  0]
 [ 0  1  4  6  0  0]
 [ 2  2 87 41  4  0]
 [ 0  9 37 70 12  0]
 [ 0  3  6 15 14  2]
 [ 0  0  0  3  0  0]]"
"LogisticRegression(C=0.01, n_jobs=-1)","OrderedDict([('C', 1000.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.05354739999984304,2.659062499930087e-05,2099.125,0.34672181372549016,0.5489067502242477,0.5392586143360094,0.571875,0.7368264529010944,"[[  1   0   1   0   0   0]
 [  0   0   6   4   1   0]
 [  1   0 104  31   0   0]
 [  0   0  54  66   8   0]
 [  0   0   1  27  12   0]
 [  0   0   0   1   2   0]]"
"LogisticRegression(C=0.01, n_jobs=-1)","OrderedDict([('C', 100.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.05545140000003812,3.093374999991738e-05,2099.44921875,0.34564950980392156,0.5484765411292128,0.5410673727635117,0.56875,0.732915370699089,"[[  1   0   1   0   0   0]
 [  0   0   6   4   1   0]
 [  0   1 101  34   0   0]
 [  0   0  52  68   8   0]
 [  0   0   1  27  12   0]
 [  0   0   0   1   2   0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=13, p=3)","OrderedDict([('n_neighbors', 3), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.002910499999870808,0.00029737781250034346,1483.140625,0.3454517602495544,0.5372157529771141,0.5369791666666666,0.540625,0.7002545302959644,"[[ 1  0  1  0  0  0]
 [ 0  1  3  7  0  0]
 [ 1  2 94 36  3  0]
 [ 1  8 39 66 14  0]
 [ 0  3  4 20 11  2]
 [ 0  0  0  3  0  0]]"
HistGradientBoostingClassifier(),"OrderedDict([('warm_start', False)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,4.760224699999981,0.00040822624999918843,2097.25390625,0.32723791221033866,0.6254816533657181,0.638689854299929,0.640625,0.8042315499516889,"[[  0   0   1   1   0   0]
 [  0   1   6   4   0   0]
 [  0   0 104  29   3   0]
 [  0   0  36  81  11   0]
 [  0   0   3  18  19   0]
 [  0   0   0   1   2   0]]"
HistGradientBoostingClassifier(),"OrderedDict([('warm_start', True)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,4.779605199999878,0.0004190065624996464,2096.8046875,0.32723791221033866,0.6254816533657181,0.638689854299929,0.640625,0.8042315499516889,"[[  0   0   1   1   0   0]
 [  0   1   6   4   0   0]
 [  0   0 104  29   3   0]
 [  0   0  36  81  11   0]
 [  0   0   3  18  19   0]
 [  0   0   0   1   2   0]]"
DecisionTreeClassifier(criterion='entropy'),"OrderedDict([('criterion', 'entropy')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.010703899999953137,2.862281249917942e-05,1619.734375,0.32633411319073086,0.6123608739661682,0.609894707853804,0.615625,0.7046302557133339,"[[ 0  1  1  0  0  0]
 [ 0  1  6  4  0  0]
 [ 0  5 92 31  8  0]
 [ 0  2 29 82 14  1]
 [ 0  0  5 12 22  1]
 [ 0  0  0  1  2  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 5), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.4954872000002979,0.0001018246875005957,2065.97265625,0.32567541221033863,0.6279033572991374,0.6277802428442641,0.64375,0.8013640240845724,"[[  0   1   1   0   0   0]
 [  0   1   7   3   0   0]
 [  0   0 104  31   1   0]
 [  0   0  37  83   8   0]
 [  0   0   4  18  18   0]
 [  0   0   0   1   2   0]]"
GaussianNB(),"OrderedDict([('priors', None)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.001876799999990908,3.115281249961299e-05,1778.67578125,0.3255988190730838,0.4752978862341237,0.4829120484400657,0.475,0.6814635467141695,"[[ 1  1  0  0  0  0]
 [ 0  1  5  5  0  0]
 [ 0  6 71 55  4  0]
 [ 0  2 39 66 21  0]
 [ 0  0  1 26 13  0]
 [ 0  0  0  2  1  0]]"
"VotingClassifier(estimators=[('e1',
                              SVC(C=10.0, gamma='auto', probability=True)),
                             ('e2',
                              DecisionTreeClassifier(criterion='entropy')),
                             ('e3', GradientBoostingClassifier())],
                 n_jobs=-1, voting='soft')","OrderedDict([('voting', 'soft')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.156307299999753,0.000543846562499084,2130.203125,0.3245418337789661,0.6120421768629489,0.6072446068052229,0.61875,0.8028562100677217,"[[ 0  1  1  0  0  0]
 [ 0  1  5  5  0  0]
 [ 1  2 95 30  8  0]
 [ 0  1 32 81 14  0]
 [ 0  0  4 14 21  1]
 [ 0  0  0  1  2  0]]"
"SVC(C=10.0, gamma='auto', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.2042716000000837,0.00040981656250025365,1494.125,0.32348624108734403,0.5804132236947307,0.5888094157808313,0.575,0.7452014971505725,"[[ 0  1  1  0  0  0]
 [ 0  2  5  3  1  0]
 [ 1  7 89 32  7  0]
 [ 1  3 34 71 18  1]
 [ 0  2  4  9 22  3]
 [ 0  0  0  1  2  0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 15), ('max_features', None), ('min_samples_leaf', 1), ('min_samples_split', 2), ('n_estimators', 120)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.19510360000003857,0.00043872687499941777,1739.26953125,0.32306985294117646,0.6400399139568815,0.6278193017852776,0.65625,0.8260452319411107,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 100  35   0   0]
 [  0   0  29  90   9   0]
 [  0   0   3  17  20   0]
 [  0   0   0   0   3   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', None), ('max_features', 'sqrt'), ('min_samples_leaf', 1), ('min_samples_split', 2), ('n_estimators', 500)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6581857999999556,0.0014482253124995736,1770.125,0.31997549019607846,0.6368245214185888,0.6247672210339996,0.65625,0.8336886903564377,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 103  32   1   0]
 [  0   0  34  88   6   0]
 [  0   0   3  18  19   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.025), ('gamma', 0.1), ('lambda', 0.01), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.8365813999998863,0.0001166046874999438,2069.7421875,0.3165441176470588,0.6416850410341306,0.6302603870949194,0.6625,0.8245501920415412,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 107  26   2   0]
 [  0   0  34  88   6   0]
 [  0   0   3  20  17   0]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 20), ('max_features', 'sqrt'), ('min_samples_leaf', 1), ('min_samples_split', 2), ('n_estimators', 1200)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.5894702000000507,0.0033180990624998687,1826.16796875,0.3143229166666667,0.6357507491373777,0.6249915884855713,0.65625,0.8367896045179505,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 102  33   1   0]
 [  0   0  31  91   6   0]
 [  0   0   3  20  17   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.6), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7862356000000545,0.00011597999999963804,2078.359375,0.3115655637254902,0.6295474192728199,0.6149905799061901,0.65,0.8254384578150257,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  30   2   0]
 [  0   0  32  87   9   0]
 [  0   0   3  20  17   0]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 25), ('max_features', None), ('min_samples_leaf', 1), ('min_samples_split', 2), ('n_estimators', 300)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.4762561000002279,0.0009313131249996332,1746.46875,0.31132046568627453,0.6192947502947503,0.6075000438131457,0.634375,0.8271320353631875,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 97 37  1  0]
 [ 0  0 30 87 11  0]
 [ 0  0  2 19 19  0]
 [ 0  0  0  0  3  0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', None), ('max_features', 'log2'), ('min_samples_leaf', 1), ('min_samples_split', 2), ('n_estimators', 800)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.0534794999998667,0.0024113362499988966,1797.83203125,0.31083026960784316,0.6216095088446935,0.6098091976516635,0.640625,0.836877878297221,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 100  35   1   0]
 [  0   0  34  87   7   0]
 [  0   0   3  19  18   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 15), ('max_features', 'sqrt'), ('min_samples_leaf', 2), ('min_samples_split', 5), ('n_estimators', 800)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.0154966000000059,0.0022416778124991765,1765.82421875,0.30926776960784313,0.6240804758790371,0.6142029914529915,0.64375,0.8241583125707657,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 100  36   0   0]
 [  0   0  32  89   7   0]
 [  0   0   3  20  17   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 1.0), ('eta', 0.05), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.8407083999995848,0.0001175018750004142,2084.91015625,0.30919117647058825,0.6264071525388385,0.6150203767762569,0.64375,0.8225649411625413,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  33   2   0]
 [  0   1  30  88   9   0]
 [  0   0   2  21  17   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.8781620999998268,0.00011451999999962936,2093.65234375,0.3076286764705882,0.6280827686805949,0.6182565979440979,0.646875,0.8118060728536733,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  32   3   0]
 [  0   1  31  90   6   0]
 [  0   0   3  21  16   0]
 [  0   0   0   2   1   0]]"
"SVC(C=10.0, gamma='auto', probability=True)","OrderedDict([('C', 0.001), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7518213999999261,0.0005313865624998471,1494.1015625,0.3075980392156863,0.24663149853408767,0.1874724008052471,0.365625,0.31716436942041465,"[[  2   0   0   0   0   0]
 [  5   0   6   0   0   0]
 [ 21   0 115   0   0   0]
 [ 24   0 104   0   0   0]
 [  6   0  34   0   0   0]
 [  1   0   2   0   0   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 1.0), ('eta', 0.05), ('gamma', 0.5), ('lambda', 1.0), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.8485564000002341,0.00011220593749925457,2075.05078125,0.3067708333333333,0.6130180438359565,0.5990827962706826,0.63125,0.8147359927192189,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  32   2   0]
 [  0   0  36  82  10   0]
 [  0   0   4  18  18   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.8713780999996743,0.0001175596875000906,2084.80078125,0.3067401960784314,0.6193645083932854,0.6074165168082117,0.6375,0.8241261805850089,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 99 35  2  0]
 [ 0  0 31 88  9  0]
 [ 0  0  3 20 17  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7078147000001991,0.00011234437500036165,2061.5,0.3061274509803921,0.6174856038231497,0.6024790397774269,0.6375,0.8117510483181485,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 107  27   2   0]
 [  0   0  37  80  11   0]
 [  0   0   3  20  17   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.1), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7235239000001457,0.00011347843749973663,2078.03125,0.30536151960784313,0.6158421867953476,0.6064628538454371,0.634375,0.814446324129775,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 100  34   2   0]
 [  0   1  35  86   6   0]
 [  0   0   2  21  17   0]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 25), ('max_features', None), ('min_samples_leaf', 2), ('min_samples_split', 5), ('n_estimators', 300)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.4633664999996654,0.0009142168750003066,1745.90625,0.3051317401960784,0.615036220688708,0.5987655958475917,0.634375,0.825246366325881,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  31   2   0]
 [  0   0  33  83  12   0]
 [  0   0   3  20  17   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.5), ('lambda', 1.0), ('max_depth', 7), ('min_child_weight', 1), ('subsample', 0.6)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5750760999999329,0.00010644187500048474,2062.21875,0.30505514705882353,0.6153010240759118,0.6019623168786277,0.634375,0.8104223398125174,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 104  31   1   0]
 [  0   0  37  82   9   0]
 [  0   0   2  21  17   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6516950000000179,0.00010889093749995027,2053.91015625,0.30471813725490193,0.6202104152075052,0.6074673594457767,0.640625,0.8020954702459508,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 105  29   2   0]
 [  0   0  36  84   8   0]
 [  0   0   3  21  16   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.897723699999915,0.00011219468750027773,2065.74609375,0.30398284313725493,0.6126169590643276,0.600599823774864,0.63125,0.8051810474333865,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  33   2   0]
 [  0   0  36  84   8   0]
 [  0   0   3  20  17   0]
 [  0   0   0   2   1   0]]"
"SVC(C=10.0, gamma='auto', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6193218000000797,0.0004778309374998457,1493.109375,0.30375445632798576,0.5648129871920196,0.5651962250211089,0.575,0.7415421933870204,"[[ 0  0  2  0  0  0]
 [ 0  1  5  5  0  0]
 [ 1  0 91 39  5  0]
 [ 0  1 43 72 12  0]
 [ 0  0  2 18 20  0]
 [ 0  0  0  2  1  0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 25), ('max_features', None), ('min_samples_leaf', 5), ('min_samples_split', 2), ('n_estimators', 800)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.1229051000000254,0.0022326903125005513,1748.0625,0.30323223039215685,0.6220279407913991,0.6077554064131245,0.64375,0.8121579172636866,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  31   1   0]
 [  0   0  32  87   9   0]
 [  0   0   3  22  15   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 25), ('max_features', None), ('min_samples_leaf', 1), ('min_samples_split', 2), ('n_estimators', 800)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.2394516999997904,0.0022487884375010482,1771.46875,0.303140318627451,0.612970479704797,0.6041179337231969,0.628125,0.8321601608032237,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 95 39  1  0]
 [ 0  0 29 89 10  0]
 [ 0  0  3 19 17  1]
 [ 0  0  0  1  2  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7141479000001709,0.00011721781250031426,2055.4921875,0.30193014705882354,0.6209604026650374,0.6083422608732184,0.640625,0.8193452037405559,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 104  30   1   0]
 [  0   0  33  86   9   0]
 [  0   0   3  22  15   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 25), ('max_features', 'log2'), ('min_samples_leaf', 1), ('min_samples_split', 15), ('n_estimators', 300)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.38439900000003036,0.0008881790624997166,1769.52734375,0.30193014705882354,0.6184793709150326,0.6078033625730994,0.640625,0.8118043211801632,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 104  31   1   0]
 [  0   0  36  86   6   0]
 [  0   0   3  22  15   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 25), ('max_features', None), ('min_samples_leaf', 5), ('min_samples_split', 5), ('n_estimators', 500)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7199706000001243,0.0014398540624995348,1737.1953125,0.3017769607843137,0.6185971579643094,0.6031353488637661,0.640625,0.8099141228371749,"[[  0   0   1   1   0   0]
 [  0   0   8   3   0   0]
 [  0   0 106  28   2   0]
 [  0   0  35  84   9   0]
 [  0   0   3  22  15   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.8518165000000408,0.00011564656250016015,2075.01171875,0.3011948529411765,0.6128488882010009,0.604403541472507,0.63125,0.8194340557624921,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 100  33   2   0]
 [  0   0  36  86   6   0]
 [  0   0   3  21  16   0]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 30), ('max_features', None), ('min_samples_leaf', 5), ('min_samples_split', 10), ('n_estimators', 120)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.19414610000012544,0.00041035468750010294,1747.55859375,0.3008884803921568,0.6102676569720448,0.5961227178618483,0.63125,0.8129135388579354,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  30   2   0]
 [  0   0  37  82   9   0]
 [  0   0   3  21  16   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.7), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7879812000001039,0.00011015656250066286,2083.38671875,0.30062806372549017,0.6179974397020744,0.6055253594647677,0.6375,0.8166659681653327,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 104  29   2   0]
 [  0   0  34  85   9   0]
 [  0   0   2  23  15   0]
 [  0   0   0   2   1   0]]"
"SVC(C=10.0, gamma='auto', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.8388084999999137,0.00040062531249986935,1494.1171875,0.30047627005347594,0.5802354840368326,0.5806414719376868,0.58125,0.738584770220377,"[[ 0  1  1  0  0  0]
 [ 0  1  4  5  1  0]
 [ 1  5 93 33  3  1]
 [ 1  3 40 74 10  0]
 [ 0  2  4 14 18  2]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6288297000000966,0.00010950156249975863,2066.02734375,0.2995557598039216,0.6144718598333203,0.6045915297384864,0.634375,0.8096822942855082,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  33   2   0]
 [  0   1  33  87   7   0]
 [  0   0   1  24  15   0]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 25), ('max_features', None), ('min_samples_leaf', 5), ('min_samples_split', 5), ('n_estimators', 800)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.1316889999998239,0.002213144062500305,1745.5078125,0.29932598039215685,0.6128729754248503,0.598779394542383,0.634375,0.8109498299585025,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  31   1   0]
 [  0   0  34  84  10   0]
 [  0   0   3  22  15   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.05), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.8406632999999601,0.00010764499999993404,2068.03515625,0.2989889705882353,0.6178643796191193,0.6095747780588207,0.640625,0.8067549621957779,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 105  30   1   0]
 [  0   0  36  86   6   0]
 [  0   0   6  20  14   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 1.0), ('lambda', 0.01), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.8752693999999792,0.00010959218749917454,2094.3046875,0.2986672794117647,0.6068165022839022,0.5958932441279543,0.625,0.8051635909344184,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 99 33  3  0]
 [ 0  0 36 85  7  0]
 [ 0  0  6 18 16  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.1), ('gamma', 0.7), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6978513000003659,0.00010997625000044308,2078.09765625,0.298483455882353,0.6124242012532451,0.6023003003707701,0.63125,0.8022901452347216,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  1 98 34  3  0]
 [ 0  0 32 89  7  0]
 [ 0  0  4 21 15  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.41906620000008843,0.00010240250000066453,2054.16015625,0.2983609068627451,0.6053392982213849,0.5932787103650413,0.625,0.7894801528746733,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  32   1   0]
 [  0   0  38  81   9   0]
 [  0   0   3  21  16   0]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 20), ('max_features', 'log2'), ('min_samples_leaf', 1), ('min_samples_split', 10), ('n_estimators', 500)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6884205999999722,0.0014414459375004184,1826.0390625,0.29825367647058826,0.6100272420180886,0.6020414198850148,0.63125,0.8202353884974711,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 101  35   0   0]
 [  0   0  36  86   6   0]
 [  0   0   3  22  15   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 8), ('max_features', None), ('min_samples_leaf', 2), ('min_samples_split', 15), ('n_estimators', 1200)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.6127559000001384,0.0031007815625002876,1741.12890625,0.2978400735294118,0.615211710824387,0.602511720904578,0.6375,0.7958116811132381,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  32   1   0]
 [  0   0  33  87   8   0]
 [  0   0   2  24  14   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.01), ('gamma', 0.7), ('lambda', 0.01), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.8801048000000264,0.00011294906250043368,2087.24609375,0.29761029411764706,0.6149345370940434,0.603425336653754,0.6375,0.8146379710440991,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 106  28   2   0]
 [  0   0  37  84   7   0]
 [  0   0   5  21  14   0]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 8), ('max_features', 'log2'), ('min_samples_leaf', 2), ('min_samples_split', 2), ('n_estimators', 300)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.3734716999997545,0.0008874159374997248,1749.74609375,0.29757965686274507,0.6192681430106253,0.6157702451492971,0.64375,0.8002577547054399,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  32   1   0]
 [  0   0  35  90   3   0]
 [  0   0   2  25  13   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', None), ('max_features', 'log2'), ('min_samples_leaf', 2), ('min_samples_split', 5), ('n_estimators', 1200)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.5326607000001786,0.003324074999999027,1788.80078125,0.29736519607843137,0.6023067903114229,0.5904355501713623,0.621875,0.8221970359242269,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 99 36  1  0]
 [ 0  0 36 84  8  0]
 [ 0  0  3 21 16  0]
 [ 0  0  0  1  2  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6147633000000496,0.00011262312499979999,2055.41015625,0.2971813725490196,0.608588629672299,0.6009626886271623,0.628125,0.8047935321165797,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 98 37  1  0]
 [ 0  0 33 88  7  0]
 [ 0  0  3 22 15  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5991478999999345,0.00011422093750041995,2060.2265625,0.2957567401960784,0.5995580550107152,0.5859444455403878,0.61875,0.7989636755357485,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  32   1   0]
 [  0   0  38  79  11   0]
 [  0   0   2  22  16   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7842877999996745,0.00010900812500125312,2074.46875,0.29541973039215685,0.604041056276096,0.5931159420289855,0.625,0.8042749644993306,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  31   1   0]
 [  0   0  39  81   8   0]
 [  0   0   4  21  15   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.1), ('gamma', 0.1), ('lambda', 0.01), ('max_depth', 5), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.49184580000019196,0.00010155749999967157,2059.6953125,0.29541973039215685,0.6040301052408804,0.5945518585131895,0.625,0.7946616235106277,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  31   1   0]
 [  0   0  40  81   7   0]
 [  0   0   3  22  15   0]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 15), ('max_features', 'sqrt'), ('min_samples_leaf', 2), ('min_samples_split', 15), ('n_estimators', 800)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.981421599999976,0.00223964812499986,1744.265625,0.29378063725490194,0.6047991608776395,0.5962678776919283,0.628125,0.8074101125462372,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 105  31   0   0]
 [  0   0  40  82   6   0]
 [  0   0   3  23  14   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.1), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 7), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.4959637999995721,0.00010829031249954823,2065.3984375,0.29312193627450983,0.5993373996895125,0.588243064018926,0.61875,0.7940198998847221,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 100  33   3   0]
 [  0   0  38  83   7   0]
 [  0   0   2  23  15   0]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 8), ('max_features', 'log2'), ('min_samples_leaf', 1), ('min_samples_split', 5), ('n_estimators', 120)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.15725449999990815,0.0004245062500004337,1743.3359375,0.29301470588235295,0.6035378653555156,0.6018381535038932,0.625,0.7920781520148718,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 98 38  0  0]
 [ 0  0 36 88  4  0]
 [ 0  0  2 24 14  0]
 [ 0  0  0  1  2  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5661241999996491,0.00011292937500115841,2051.1796875,0.29281556372549017,0.5982407840199895,0.5852626690735945,0.61875,0.8018554430553143,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  31   1   0]
 [  0   0  39  79  10   0]
 [  0   0   3  22  15   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.1), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6877590000003693,0.00010811156249985742,2079.12890625,0.28976715686274507,0.602386625185926,0.590127688172043,0.625,0.8037308532608012,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  30   3   0]
 [  0   0  37  84   7   0]
 [  0   0   6  21  13   0]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 25), ('max_features', 'sqrt'), ('min_samples_leaf', 5), ('min_samples_split', 15), ('n_estimators', 800)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.9702803000000131,0.00220947812500043,1743.8515625,0.28463541666666664,0.589471890312518,0.5801144822919017,0.6125,0.799665297614857,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  34   0   0]
 [  0   0  40  81   7   0]
 [  0   0   3  24  13   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 20), ('max_features', 'sqrt'), ('min_samples_leaf', 10), ('min_samples_split', 15), ('n_estimators', 1200)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.4171234000000368,0.0031137690625001823,1743.7578125,0.284375,0.594167916041979,0.5918538668538669,0.61875,0.7877923636775944,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  34   0   0]
 [  0   0  39  84   5   0]
 [  0   0   3  25  12   0]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 20), ('max_features', 'sqrt'), ('min_samples_leaf', 10), ('min_samples_split', 5), ('n_estimators', 500)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5965261000001192,0.00136142593749895,1745.08203125,0.28177083333333336,0.5878854461492626,0.5927746228541703,0.6125,0.7837891955586744,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  34   0   0]
 [  0   0  43  82   3   0]
 [  0   0   3  25  12   0]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 30), ('max_features', 'sqrt'), ('min_samples_leaf', 10), ('min_samples_split', 10), ('n_estimators', 120)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.15312319999975443,0.0004238000000000852,1726.90625,0.28158700980392154,0.5927609484654077,0.5943076250919794,0.61875,0.7892314401389008,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 101  34   1   0]
 [  0   0  39  86   3   0]
 [  0   0   2  27  11   0]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 20), ('max_features', 'sqrt'), ('min_samples_leaf', 10), ('min_samples_split', 10), ('n_estimators', 800)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.9477588000004289,0.0021663203125001475,1735.7890625,0.28020833333333334,0.5895170861975174,0.59505463775598,0.615625,0.7843649452392347,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  34   0   0]
 [  0   0  41  84   3   0]
 [  0   0   3  26  11   0]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 8), ('max_features', 'sqrt'), ('min_samples_leaf', 10), ('min_samples_split', 2), ('n_estimators', 800)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.9651032000001578,0.002065141562499662,1797.44921875,0.2788296568627451,0.5860700673200674,0.5914673132183909,0.6125,0.7805005304982094,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  32   1   0]
 [  0   0  44  82   2   0]
 [  0   0   3  26  11   0]
 [  0   0   0   2   1   0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=13, p=3)","OrderedDict([('n_neighbors', 13), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.002901300000075935,0.00040702781249990494,1483.2421875,0.2774816176470588,0.5513979158458382,0.5444633408919123,0.565625,0.7058180154757594,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 90 44  1  0]
 [ 0  0 46 74  8  0]
 [ 0  0  4 19 17  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=13, p=3)","OrderedDict([('n_neighbors', 9), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.0029236000000310014,0.0003882612499999993,1483.28125,0.2757826426024956,0.5171544135502671,0.5124569867208344,0.528125,0.6905202377289403,"[[ 0  1  1  0  0  0]
 [ 0  1  4  6  0  0]
 [ 0  1 89 44  2  0]
 [ 0  1 54 62 11  0]
 [ 0  0  4 19 17  0]
 [ 0  0  0  2  1  0]]"
"SVC(C=10.0, gamma='auto', probability=True)","OrderedDict([('C', 0.1), ('class_weight', 'balanced'), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7310285000000931,0.0005188821875002248,1495.04296875,0.27524509803921565,0.1425657894736842,0.21047979797979796,0.2,0.42939202519508324,"[[  1   0   1   0   0   0]
 [  0   0   6   0   5   0]
 [  1   0  24   0 111   0]
 [  0   0  22   0 106   0]
 [  0   0   1   0  39   0]
 [  0   0   0   0   3   0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=13, p=3)","OrderedDict([('n_neighbors', 15), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.003175399999918227,0.00047202468750029425,1483.24609375,0.2721660539215686,0.5451402220967438,0.5393480018480019,0.559375,0.7127294244380804,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 88 46  1  0]
 [ 0  0 45 75  8  0]
 [ 0  0  4 20 16  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 3), ('min_child_weight', 5), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.3591089000001375,9.471906249984841e-05,2056.05859375,0.27143075980392156,0.564967955701172,0.5555416759887637,0.5875,0.7637577794799918,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  34   1   0]
 [  0   0  45  75   8   0]
 [  0   0   4  24  12   0]
 [  0   0   0   2   1   0]]"
MLPClassifier(learning_rate='adaptive'),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.1)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7302765999997973,3.6151249999250014e-05,1775.00390625,0.27077205882352945,0.5606852315394243,0.548598880191346,0.578125,0.744333290905333,"[[ 0  1  1  0  0  0]
 [ 0  0  6  4  1  0]
 [ 0  1 96 38  1  0]
 [ 0  0 42 76 10  0]
 [ 0  0  1 26 13  0]
 [ 0  0  0  0  3  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=13, p=3)","OrderedDict([('n_neighbors', 11), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.002968600000031074,0.0003980337499996267,1483.16796875,0.27074142156862746,0.534585562542583,0.5235483870967742,0.55,0.7039979045015555,"[[ 0  1  1  0  0  0]
 [ 0  0  5  6  0  0]
 [ 0  1 93 40  2  0]
 [ 0  0 51 66 11  0]
 [ 0  0  5 18 17  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=13, p=3)","OrderedDict([('n_neighbors', 15), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.0029557000000295375,0.0003219965625000043,1483.1171875,0.2703737745098039,0.5468470756217466,0.5418266894237445,0.5625,0.6953425193904063,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 91 43  1  0]
 [ 0  0 47 74  7  0]
 [ 0  0  4 21 15  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=13, p=3)","OrderedDict([('n_neighbors', 17), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.002951299999949697,0.000310475312499392,1483.0625,0.2692248774509804,0.5443201325056998,0.5393408427200668,0.559375,0.7027942379701672,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 89 46  1  0]
 [ 0  0 45 75  8  0]
 [ 0  0  0 25 15  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=13, p=3)","OrderedDict([('n_neighbors', 17), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.0029382000000168773,0.0004007531249996532,1483.16015625,0.2691789215686275,0.5375610323180655,0.5272988505747126,0.553125,0.7052483342887028,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 93 41  1  0]
 [ 0  0 49 68 11  0]
 [ 0  0  4 20 16  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=13, p=3)","OrderedDict([('n_neighbors', 9), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.002876100000094084,0.00030778874999981554,1483.15234375,0.26829044117647055,0.5300666904569808,0.5195470031877039,0.54375,0.6825195093896375,"[[ 0  1  1  0  0  0]
 [ 0  0  5  6  0  0]
 [ 0  1 91 42  2  0]
 [ 0  1 50 66 11  0]
 [ 0  0  4 19 17  0]
 [ 0  0  0  1  2  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 1.0), ('max_depth', 3), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.3600885000000744,9.363312500028087e-05,2065.43359375,0.2676011029411765,0.5559266174269216,0.5469455043132051,0.578125,0.7698250032708891,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 100  35   1   0]
 [  0   0  47  73   8   0]
 [  0   0   4  24  12   0]
 [  0   0   0   2   1   0]]"
"SVC(C=10.0, gamma='auto', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.3578390000000127,0.0004347578124999529,1493.6640625,0.26720281862745093,0.5437731667714709,0.5318582545311268,0.5625,0.7433261775048583,"[[ 0  0  2  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 95 39  2  0]
 [ 0  0 47 71 10  0]
 [ 0  0  2 24 14  0]
 [ 0  0  0  2  1  0]]"
MLPClassifier(learning_rate='adaptive'),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.1)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7315183999999135,3.5722812501148835e-05,1774.84375,0.26596200980392154,0.5583770530620245,0.5461398922955238,0.58125,0.7474246592788266,"[[  0   1   1   0   0   0]
 [  0   0   7   3   1   0]
 [  0   0 101  35   0   0]
 [  0   0  45  74   9   0]
 [  0   0   3  26  11   0]
 [  0   0   0   1   2   0]]"
MLPClassifier(learning_rate='adaptive'),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7216768000002958,3.767999999979565e-05,1774.80859375,0.2653186274509804,0.5611642681349853,0.5491443046093574,0.5875,0.7435373572867798,"[[  0   1   1   0   0   0]
 [  0   0   7   3   1   0]
 [  0   0 106  30   0   0]
 [  0   0  48  72   8   0]
 [  0   0   2  28  10   0]
 [  0   0   0   1   2   0]]"
MLPClassifier(learning_rate='adaptive'),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7127153999999791,3.698218749974558e-05,1774.73046875,0.26484375,0.5488679902473006,0.5344657630698821,0.571875,0.7429913927922691,"[[  0   0   2   0   0   0]
 [  0   0   7   3   1   0]
 [  0   0 102  33   1   0]
 [  0   0  49  69  10   0]
 [  0   0   1  27  12   0]
 [  0   0   0   1   2   0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=13, p=3)","OrderedDict([('n_neighbors', 13), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.0029329999999845313,0.00030014812500027687,1483.1328125,0.2643535539215686,0.5273214454366258,0.5188110770869392,0.540625,0.6937048095921319,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  2 88 44  2  0]
 [ 0  0 49 69 10  0]
 [ 0  0  4 20 16  0]
 [ 0  0  0  2  1  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=13, p=3)","OrderedDict([('n_neighbors', 7), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.002976400000079593,0.00029535031249992014,1483.11328125,0.26351242201426023,0.509287166792279,0.5023599360392244,0.51875,0.6775413308010454,"[[ 0  1  1  0  0  0]
 [ 0  1  4  6  0  0]
 [ 0  1 86 44  5  0]
 [ 0  1 50 65 12  0]
 [ 0  2  3 21 14  0]
 [ 0  0  0  1  2  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=13, p=3)","OrderedDict([('n_neighbors', 11), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.003025099999831582,0.00031936656250053375,1483.23046875,0.2626378676470588,0.5289184842365978,0.5188457992108029,0.54375,0.6945603425277892,"[[ 0  1  1  0  0  0]
 [ 0  0  5  6  0  0]
 [ 0  1 90 43  2  0]
 [ 0  0 48 69 11  0]
 [ 0  0  4 21 15  0]
 [ 0  0  0  2  1  0]]"
MLPClassifier(learning_rate='adaptive'),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7330406999999468,3.6017187500192446e-05,1775.00390625,0.2604932598039216,0.5528062738908839,0.5390907596503441,0.575,0.7397258546061597,"[[  0   1   1   0   0   0]
 [  0   0   6   4   1   0]
 [  0   1 101  33   1   0]
 [  0   0  45  73  10   0]
 [  0   0   2  28  10   0]
 [  0   0   0   1   2   0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=13, p=3)","OrderedDict([('n_neighbors', 5), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.0029345000000375876,0.0003825300000002585,1483.3515625,0.2602175245098039,0.5213580154188331,0.5137882311486963,0.53125,0.6839958617997597,"[[ 0  1  1  0  0  0]
 [ 0  0  4  7  0  0]
 [ 0  3 91 38  4  0]
 [ 0  3 49 63 12  1]
 [ 0  0  5 19 16  0]
 [ 0  0  0  2  1  0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 5), ('max_features', 'log2'), ('min_samples_leaf', 2), ('min_samples_split', 10), ('n_estimators', 1200)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.546853800000008,0.0032204774999996743,1736.56640625,0.25981924019607844,0.5565500618852193,0.5701010101010101,0.5875,0.769160059062915,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 103  33   0   0]
 [  0   0  49  77   2   0]
 [  0   0   2  30   8   0]
 [  0   0   0   2   1   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 25), ('max_features', None), ('min_samples_leaf', 1), ('min_samples_split', 100), ('n_estimators', 800)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.9768976000000293,0.0024823690624998563,1771.140625,0.25807291666666665,0.5626285053094022,0.5630598976187211,0.596875,0.7656664192368607,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  34   0   0]
 [  0   0  41  83   4   0]
 [  0   0   3  31   6   0]
 [  0   0   0   2   1   0]]"
MLPClassifier(learning_rate='adaptive'),"OrderedDict([('learning_rate', 'adaptive'), ('momentum', 0.5)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7188215000001037,3.58334374993774e-05,1774.98828125,0.25724571078431374,0.5471674282812897,0.5351013881328253,0.575,0.7456542748989803,"[[  0   1   1   0   0   0]
 [  0   0   7   3   1   0]
 [  0   0 106  30   0   0]
 [  0   0  51  69   8   0]
 [  0   0   2  29   9   0]
 [  0   0   0   1   2   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 20), ('max_features', None), ('min_samples_leaf', 10), ('min_samples_split', 100), ('n_estimators', 300)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.36393309999994017,0.0008941068750004888,1739.8046875,0.2569240196078431,0.5595051668580318,0.5733200981608625,0.59375,0.7634300458595187,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 100  36   0   0]
 [  0   0  41  84   3   0]
 [  0   0   3  31   6   0]
 [  0   0   0   3   0   0]]"
AdaBoostClassifier(algorithm='SAMME'),"OrderedDict([('algorithm', 'SAMME')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.06659399999989546,8.75690625008474e-05,1777.16796875,0.2558865307486631,0.4679283638387336,0.4952136460230722,0.484375,0.6108082123936563,"[[ 0  2  0  0  0  0]
 [ 0  3  3  5  0  0]
 [ 1  8 61 63  3  0]
 [ 1  2 37 85  3  0]
 [ 0  0  7 27  6  0]
 [ 0  0  0  3  0  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=13, p=3)","OrderedDict([('n_neighbors', 7), ('p', 3)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.003095499999972162,0.0003843449999997972,1483.015625,0.25580575980392156,0.502692862292718,0.49491930171278,0.5125,0.6758565968718551,"[[ 0  1  1  0  0  0]
 [ 0  0  4  7  0  0]
 [ 0  0 84 49  3  0]
 [ 0  2 51 63 12  0]
 [ 0  2  4 17 17  0]
 [ 0  0  0  2  1  0]]"
MLPClassifier(learning_rate='adaptive'),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.1)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7332111999999142,3.7717499999700976e-05,1774.6796875,0.2545343137254902,0.5462957393483708,0.537031376707629,0.575,0.7444370749703625,"[[  0   1   1   0   0   0]
 [  0   0   7   3   1   0]
 [  0   0 104  32   0   0]
 [  0   0  50  72   6   0]
 [  0   0   2  30   8   0]
 [  0   0   0   1   2   0]]"
MLPClassifier(learning_rate='adaptive'),"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.5)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7419663999999102,3.593468750011653e-05,1774.97265625,0.25234375000000003,0.5377106002106001,0.522791719948849,0.5625,0.7455321234027112,"[[  0   1   1   0   0   0]
 [  0   0   6   4   1   0]
 [  0   0 102  34   0   0]
 [  0   0  49  69  10   0]
 [  0   0   2  29   9   0]
 [  0   0   0   0   3   0]]"
MLPClassifier(learning_rate='adaptive'),"OrderedDict([('learning_rate', 'constant'), ('momentum', 0.5)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7110795000003236,3.575125000025992e-05,1774.953125,0.25104166666666666,0.5337226161833607,0.522382738577994,0.559375,0.738609374294253,"[[  0   1   1   0   0   0]
 [  0   0   6   4   1   0]
 [  0   0 102  34   0   0]
 [  0   0  52  68   8   0]
 [  0   0   1  30   9   0]
 [  0   0   0   1   2   0]]"
QuadraticDiscriminantAnalysis(),"OrderedDict([('priors', None)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.0022036000000298372,3.146937499991509e-05,1782.87109375,0.24940396613190732,0.5022009429601854,0.5127091959972395,0.503125,0.7065983669680906,"[[ 0  1  1  0  0  0]
 [ 0  1  4  5  1  0]
 [ 0  5 73 55  2  1]
 [ 0  2 36 76 12  2]
 [ 0  0  1 23 11  5]
 [ 0  0  0  1  2  0]]"
"KNeighborsClassifier(n_jobs=-1, n_neighbors=13, p=3)","OrderedDict([('n_neighbors', 5), ('p', 2)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.0028824999999415013,0.0002902653124998267,1483.21484375,0.24679979946524067,0.48838177866195115,0.4840449134199134,0.5,0.6756127512276912,"[[ 0  1  1  0  0  0]
 [ 0  1  3  7  0  0]
 [ 0  2 90 43  1  0]
 [ 0  3 54 58 12  1]
 [ 0  0  6 22 11  1]
 [ 0  0  0  2  1  0]]"
"SVC(C=10.0, gamma='auto', probability=True)","OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6989634000001388,0.0004532137500000033,1494.515625,0.24606311274509807,0.5222689771982225,0.5075022314344653,0.546875,0.7314901942914658,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 99 36  1  0]
 [ 0  0 50 67 11  0]
 [ 0  0  2 29  9  0]
 [ 0  0  0  1  2  0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 15), ('max_features', 'sqrt'), ('min_samples_leaf', 2), ('min_samples_split', 100), ('n_estimators', 800)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.9289490000001024,0.002179336249999153,1736.16015625,0.24427083333333333,0.540522704467013,0.6048546974522292,0.584375,0.7639100190214513,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  34   0   0]
 [  0   0  46  82   0   0]
 [  0   0   2  35   3   0]
 [  0   0   0   3   0   0]]"
"LogisticRegression(C=0.01, n_jobs=-1)","OrderedDict([('C', 10.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.051493200000095385,2.7720937499964293e-05,2100.0625,0.24263174019607844,0.5245958447916832,0.5138324420677363,0.553125,0.7323875582162938,"[[  0   1   1   0   0   0]
 [  0   0   6   4   1   0]
 [  0   1 103  32   0   0]
 [  0   0  54  67   7   0]
 [  0   0   1  32   7   0]
 [  0   0   0   1   2   0]]"
"SVC(C=10.0, gamma='auto', probability=True)","OrderedDict([('C', 1.0), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.32553550000011455,0.0004582312499998409,1494.00390625,0.24151348039215684,0.534761685398,0.56883721279923,0.578125,0.7398391726816487,"[[  0   0   2   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 104  32   0   0]
 [  0   0  49  78   1   0]
 [  0   0   2  35   3   0]
 [  0   0   0   3   0   0]]"
"RandomForestClassifier(max_features='log2', min_samples_leaf=2,
                       min_samples_split=5, n_estimators=1200, n_jobs=-1)","OrderedDict([('max_depth', 25), ('max_features', 'log2'), ('min_samples_leaf', 5), ('min_samples_split', 100), ('n_estimators', 800)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.9271926999999778,0.0021889015625006893,1765.18359375,0.2379901960784314,0.5262938045144289,0.5917904060509555,0.56875,0.7584056947965043,"[[ 0  0  2  0  0  0]
 [ 0  0  9  2  0  0]
 [ 0  0 99 37  0  0]
 [ 0  0 48 80  0  0]
 [ 0  0  2 35  3  0]
 [ 0  0  0  3  0  0]]"
"SVC(C=10.0, gamma='auto', probability=True)","OrderedDict([('C', 100.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.40808799999990697,0.0004508890625004369,1493.171875,0.22901348039215685,0.5143849765258215,0.46951219512195125,0.56875,0.7257324570307988,"[[  0   0   2   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 104  32   0   0]
 [  0   0  50  78   0   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=10.0, gamma='auto', probability=True)","OrderedDict([('C', 10.0), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.35474840000006225,0.0004658299999995563,1494.484375,0.2238051470588235,0.5024253315011216,0.45813471097021646,0.55625,0.7142658980286782,"[[  0   0   2   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 104  32   0   0]
 [  0   0  54  74   0   0]
 [  0   0   1  39   0   0]
 [  0   0   0   3   0   0]]"
"LogisticRegression(C=0.01, n_jobs=-1)","OrderedDict([('C', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.04676770000014585,3.503031250033928e-05,2099.7734375,0.21852022058823528,0.49217646639244866,0.4500060081711127,0.54375,0.7207935859587038,"[[  0   0   2   0   0   0]
 [  0   0   6   4   1   0]
 [  0   0 105  31   0   0]
 [  0   0  57  69   2   0]
 [  0   0   1  39   0   0]
 [  0   0   0   3   0   0]]"
"SVC(C=10.0, gamma='auto', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.3418067999998584,0.00048646843749935444,1495.46484375,0.2159926470588235,0.48260967166436275,0.43988234826503436,0.5375,0.7049522259512495,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 104  32   0   0]
 [  0   0  60  68   0   0]
 [  0   0   5  35   0   0]
 [  0   0   0   3   0   0]]"
"GaussianProcessClassifier(copy_X_train=False, n_jobs=-1)","OrderedDict([('copy_X_train', False), ('warm_start', True)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,1.9159012999998595,0.00766068562499953,2021.54296875,0.21591605392156862,0.48366228848656967,0.44085103843399376,0.5375,0.7217773308817785,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 105  31   0   0]
 [  0   0  60  67   1   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"GaussianProcessClassifier(copy_X_train=False, n_jobs=-1)","OrderedDict([('copy_X_train', False), ('warm_start', False)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,2.9150268000003052,0.007621736874999385,2175.58203125,0.21591605392156862,0.48366228848656967,0.44085103843399376,0.5375,0.7217773308817785,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 105  31   0   0]
 [  0   0  60  67   1   0]
 [  0   0   2  38   0   0]
 [  0   0   0   3   0   0]]"
"LogisticRegression(C=0.01, n_jobs=-1)","OrderedDict([('C', 0.1)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.022514999999657448,2.803124999957163e-05,2100.06640625,0.2118566176470588,0.4713519453519453,0.4299214427077023,0.528125,0.6883003661131488,"[[  0   0   2   0   0   0]
 [  0   0   9   2   0   0]
 [  0   0 107  29   0   0]
 [  0   0  66  62   0   0]
 [  0   0   5  35   0   0]
 [  0   0   0   3   0   0]]"
"LogisticRegression(C=0.01, n_jobs=-1)","OrderedDict([('C', 0.01)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.01557520000005752,2.7902187500217224e-05,2100.703125,0.19638480392156862,0.41461249746398854,0.3911319612590799,0.49375,0.6632258379168459,"[[  0   0   2   0   0   0]
 [  0   0  10   1   0   0]
 [  0   0 122  14   0   0]
 [  0   0  92  36   0   0]
 [  0   0   9  31   0   0]
 [  0   0   1   2   0   0]]"
MultinomialNB(fit_prior=False),"OrderedDict([('fit_prior', True)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.0017665000000306463,2.7206250000233467e-05,2074.02734375,0.18520220588235295,0.3912919929275069,0.36700705625124225,0.465625,0.6650105904040199,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 115  21   0   0]
 [  0   0  94  34   0   0]
 [  0   0  11  29   0   0]
 [  0   0   1   2   0   0]]"
"SVC(C=10.0, gamma='auto', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.3153079000001071,0.0005121375000001649,1493.65234375,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6455338038655507,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=10.0, gamma='auto', probability=True)","OrderedDict([('C', 0.01), ('class_weight', 'balanced'), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7431510000001254,0.000517430624999804,1493.8046875,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.3477985653356095,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=10.0, gamma='auto', probability=True)","OrderedDict([('C', 0.1), ('class_weight', None), ('gamma', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.3267757999999503,0.0005081184374994052,1495.41015625,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.642735336402077,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"LogisticRegression(C=0.01, n_jobs=-1)","OrderedDict([('C', 0.001)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.01735129999997298,2.74587500001644e-05,2100.1953125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6569928516664671,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=10.0, gamma='auto', probability=True)","OrderedDict([('C', 0.001), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.3185327999999572,0.0005283909375002338,1494.7421875,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6853112935199813,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"SVC(C=10.0, gamma='auto', probability=True)","OrderedDict([('C', 0.01), ('class_weight', None), ('gamma', 'scale')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.33747440000001916,0.0005097096874997931,1495.11328125,0.16666666666666666,0.2535087719298245,0.18062499999999998,0.425,0.6847250840502884,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 136   0   0   0]
 [  0   0 128   0   0   0]
 [  0   0  40   0   0   0]
 [  0   0   3   0   0   0]]"
"StackingClassifier(estimators=[('e1',
                                SVC(C=10.0, gamma='auto', probability=True)),
                               ('e2',
                                DecisionTreeClassifier(criterion='entropy')),
                               ('e3', GradientBoostingClassifier())],
                   n_jobs=-1)","OrderedDict([('stack_method', 'auto')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,4.64108060000035,0.000580176562500867,2154.265625,0.31254595588235295,0.619856265794894,0.6052430120984564,0.6375,0.7962509335267566,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 98 35  3  0]
 [ 0  0 31 87 10  0]
 [ 0  0  3 18 19  0]
 [ 0  0  0  1  2  0]]"
DecisionTreeClassifier(criterion='entropy'),"OrderedDict([('criterion', 'gini')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.007024300000011863,2.7976875000490508e-05,2164.44140625,0.2814811720142602,0.5403657131650056,0.5470056216931217,0.534375,0.6434470939285142,"[[ 0  2  0  0  0  0]
 [ 0  1  4  6  0  0]
 [ 2  3 86 39  4  2]
 [ 0  8 40 66 11  3]
 [ 1  0  5 14 18  2]
 [ 0  0  0  1  2  0]]"
DecisionTreeClassifier(criterion='entropy'),"OrderedDict([('criterion', 'entropy')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.010210500000084721,2.8376562499943248e-05,2164.4140625,0.3129776626559715,0.5667980327266042,0.5678242341240294,0.571875,0.6624855329550876,"[[ 0  0  2  0  0  0]
 [ 0  2  6  3  0  0]
 [ 0  5 97 29  5  0]
 [ 0  5 47 65  9  2]
 [ 0  2  5 14 19  0]
 [ 0  0  1  1  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 7), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5573383999999351,0.00011076156250027225,2304.42578125,0.30854779411764705,0.6286551489645615,0.6195513708114095,0.65,0.806948474863102,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 106  28   2   0]
 [  0   0  37  86   5   0]
 [  0   0   5  19  16   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.025), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 7), ('subsample', 0.6)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.44422720000011395,0.00010337000000077978,2305.4140625,0.30669424019607844,0.613108185365413,0.5991965871902758,0.63125,0.7915341038105462,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  32   1   0]
 [  0   0  36  81  11   0]
 [  0   0   2  20  18   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 5), ('min_child_weight', 7), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.42295300000023417,0.0001019415625009401,2305.10546875,0.29705882352941176,0.6025655738077077,0.5888429962650255,0.621875,0.7751559526431133,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 103  32   1   0]
 [  0   0  37  80  11   0]
 [  0   0   3  21  16   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.015), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 5), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5143571999997221,0.00010245687499974566,2307.91796875,0.2922181372549019,0.6087847222222222,0.5952052446256486,0.63125,0.7939442786279128,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 105  30   1   0]
 [  0   0  35  84   9   0]
 [  0   0   3  24  13   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 1.0), ('eta', 0.1), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.9670836000000236,0.00011031468749962414,2329.07421875,0.3057751225490196,0.6110308390181174,0.5983221450407211,0.628125,0.8083846148011669,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 98 35  3  0]
 [ 0  0 34 85  9  0]
 [ 0  0  2 20 18  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 7), ('min_child_weight', 7), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.4414817000001676,0.00010356125000043903,2306.1875,0.2917432598039216,0.595406119036375,0.5850290090508239,0.615625,0.788654927025451,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  33   2   0]
 [  0   0  40  81   7   0]
 [  0   0   5  20  15   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.025), ('gamma', 0.7), ('lambda', 0.1), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.9006047000002582,0.00010808468749985422,2321.9765625,0.296875,0.6074040935904034,0.5964935064935065,0.628125,0.8199703466953862,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 102  31   2   0]
 [  0   0  37  84   7   0]
 [  0   0   5  20  15   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.015), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.6)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7998324999998658,0.00011417374999922458,2319.93359375,0.30528492647058825,0.6161944662176753,0.6037931034482759,0.634375,0.811061993325518,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 101  33   2   0]
 [  0   0  34  85   9   0]
 [  0   0   2  21  17   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 1.0), ('eta', 0.1), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6647787000001699,0.00010447562499962259,2308.44921875,0.30788909313725493,0.6222664835164834,0.608923611111111,0.640625,0.8015888683123802,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  32   3   0]
 [  0   0  32  87   9   0]
 [  0   0   2  21  17   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.01), ('gamma', 1.0), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.8832263999997849,0.00010820781250089339,2330.35546875,0.2990655637254902,0.6200588144250117,0.6086486486486486,0.640625,0.800800571033708,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  30   2   0]
 [  0   1  32  87   8   0]
 [  0   0   3  23  14   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.01), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 3), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.319699799999853,9.651999999960026e-05,2307.13671875,0.27265625,0.567514614127667,0.5596613320034456,0.590625,0.7646434349005964,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  33   1   0]
 [  0   0  46  75   7   0]
 [  0   0   4  24  12   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 25), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7110118999999031,0.00011682499999920992,2319.85546875,0.31286764705882353,0.6333929074021954,0.6228195089772272,0.653125,0.8167868831442286,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 104  30   2   0]
 [  0   0  34  88   6   0]
 [  0   0   3  20  17   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.015), ('gamma', 1.0), ('lambda', 1.0), ('max_depth', 12), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.5909275000003618,0.00010981343749989491,2314.65234375,0.28887867647058824,0.5951221858538932,0.582565130979458,0.615625,0.7923806249024128,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  33   2   0]
 [  0   0  37  82   9   0]
 [  0   0   4  22  14   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.7), ('lambda', 0.01), ('max_depth', 25), ('min_child_weight', 3), ('subsample', 0.6)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6487084000000323,0.00011346750000029715,2309.4296875,0.3052389705882353,0.6091617723880909,0.5950703371331554,0.628125,0.8090392800944528,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 105  30   1   0]
 [  0   0  39  78  11   0]
 [  0   0   3  19  18   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.1), ('gamma', 1.0), ('lambda', 0.01), ('max_depth', 3), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.3706984000000375,9.854062499954352e-05,2309.76171875,0.27002144607843137,0.5677602693031816,0.5584072249589491,0.590625,0.7693959217331956,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 99 36  1  0]
 [ 0  0 41 79  8  0]
 [ 0  0  4 25 11  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.1), ('gamma', 0.7), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.9518238999999085,0.00011089218750015561,2323.328125,0.30030637254901965,0.6043636363636364,0.5937003968253969,0.621875,0.8082751944841062,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 98 36  2  0]
 [ 0  0 36 84  8  0]
 [ 0  0  1 22 17  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.1), ('gamma', 0.7), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 3), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.7236253999999462,0.00011383156250133197,2320.74609375,0.2947610294117647,0.5987608852228835,0.5845117098222687,0.615625,0.7970060218498933,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 99 33  4  0]
 [ 0  1 33 82 12  0]
 [ 0  0  6 18 16  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.01), ('gamma', 1.0), ('lambda', 0.01), ('max_depth', 15), ('min_child_weight', 7), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.570787399999972,0.00011378125000049977,2307.28515625,0.30234374999999997,0.6149831826781587,0.6030905905905906,0.634375,0.7947773094246344,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 102  31   3   0]
 [  0   0  36  85   7   0]
 [  0   0   1  23  16   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.025), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 9), ('min_child_weight', 7), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.46694620000016585,0.00010672218749903095,2314.4140625,0.29206495098039215,0.6072459156109347,0.5960685530250747,0.63125,0.7874283946458116,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 107  27   2   0]
 [  0   0  39  82   7   0]
 [  0   0   6  21  13   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 17), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",10,0.6426867000000129,0.0001146556249992159,2314.96484375,0.30268075980392156,0.6098088612188428,0.5971124627541577,0.628125,0.8004462201077859,"[[  0   1   1   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  33   2   0]
 [  0   0  36  83   9   0]
 [  0   0   2  21  17   0]
 [  0   0   0   2   1   0]]"
AdaBoostClassifier(algorithm='SAMME'),"OrderedDict([('algorithm', 'SAMME.R')])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.07779979999986608,0.0001387662500007991,2286.109375,0.36354166666666665,0.43428965503201306,0.4785764375876577,0.446875,0.5528696593900843,"[[ 2  0  0  0  0  0]
 [ 5  0  4  2  0  0]
 [18  0 51 65  2  0]
 [ 5  0 35 84  4  0]
 [ 1  0  3 30  6  0]
 [ 0  0  0  3  0  0]]"
AdaBoostClassifier(algorithm='SAMME'),"OrderedDict([('algorithm', 'SAMME')])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.06633980000015072,9.205749999949831e-05,2286.1796875,0.30513870320855613,0.49118941649368386,0.49338077636968763,0.496875,0.6248807114223108,"[[ 0  2  0  0  0  0]
 [ 0  5  2  4  0  0]
 [ 0  3 72 57  4  0]
 [ 0  2 46 70 10  0]
 [ 0  0  6 22 12  0]
 [ 0  0  0  2  1  0]]"
GradientBoostingClassifier(),"OrderedDict([('loss', 'deviance')])","('sulphates', 'pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",9,1.117417999999816,6.429812499959553e-05,2253.48828125,0.32147810828877005,0.6330256731912465,0.627828295202248,0.646875,0.7840122475658098,"[[  0   1   1   0   0   0]
 [  0   1   6   4   0   0]
 [  0   1 101  31   3   0]
 [  0   1  32  89   6   0]
 [  0   0   2  21  16   1]
 [  0   0   0   0   3   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5606758000003538,0.00011106937499789637,2309.96484375,0.29270833333333335,0.6041297182349814,0.595597982408604,0.625,0.7824053334725822,"[[  0   1   1   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 102  33   1   0]
 [  0   0  37  84   7   0]
 [  0   0   3  23  14   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6673921000001428,0.0001095721875003619,2312.81640625,0.2971813725490196,0.6072436295497379,0.5999082945146315,0.628125,0.7956638650551185,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 98 37  1  0]
 [ 0  0 34 88  6  0]
 [ 0  0  4 21 15  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5478907999995499,0.00010834124999803407,2310.83984375,0.2849417892156863,0.5914209559608903,0.582173426709464,0.6125,0.790126976189415,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 98 36  2  0]
 [ 0  0 36 85  7  0]
 [ 0  0  4 23 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.683295800000451,0.0001097637500009796,2312.109375,0.29488497103386807,0.585071559877673,0.6046116487988882,0.603125,0.7761447146725107,"[[ 0  0  2  0  0  0]
 [ 0  1  6  4  0  0]
 [ 0  0 98 36  2  0]
 [ 0  0 40 81  7  0]
 [ 0  0  4 23 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6520734999994602,0.00011340906249870386,2312.08984375,0.3020067401960784,0.6198013309962864,0.6102731106922865,0.640625,0.7865860608180333,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 103  32   1   0]
 [  0   0  34  87   7   0]
 [  0   0   4  21  15   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 3), ('min_child_weight', 5), ('subsample', 0.7)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.327288899999985,9.620937500187665e-05,2311.27734375,0.2529258578431372,0.5425692969741913,0.5420594837261505,0.56875,0.7410332176822972,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 91 44  1  0]
 [ 0  0 40 83  5  0]
 [ 0  0  3 29  8  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.40994550000050367,0.00010338999999817133,2312.15625,0.2794730392156863,0.5834921972259598,0.5779411764705882,0.60625,0.7662561159740625,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 98 37  1  0]
 [ 0  0 38 84  6  0]
 [ 0  0  2 26 12  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5959401000000071,0.00011145656249880175,2320.40234375,0.2850949754901961,0.5915873015873017,0.5829328756674295,0.6125,0.7814039787858451,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 96 36  3  0]
 [ 0  0 35 87  6  0]
 [ 0  0  4 23 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6723676000001433,0.00010620781250167966,2324.6875,0.3003676470588235,0.6208629385964912,0.6090167442816052,0.64375,0.782294313378498,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 104  31   1   0]
 [  0   0  32  88   8   0]
 [  0   0   3  23  14   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7787964999997712,0.00011102593749967582,2327.9921875,0.27973345588235293,0.5786983153907496,0.5676466979409213,0.6,0.7813743432615041,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 98 36  2  0]
 [ 0  0 39 81  8  0]
 [ 0  0  3 24 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 7), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5191604999999981,0.00010592687499979547,2314.5546875,0.2757199754901961,0.5753531923941336,0.5684375804375805,0.596875,0.7739299786738051,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  1 96 37  2  0]
 [ 0  0 39 83  6  0]
 [ 0  0  3 25 12  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.025), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.8223695999995471,0.00011100781250092951,2340.40625,0.2848345588235294,0.5947600434624152,0.5910959095351109,0.61875,0.787796822436468,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 96 39  1  0]
 [ 0  0 33 90  5  0]
 [ 0  0  6 22 12  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.025), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 7), ('subsample', 0.8)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.4796842000005199,0.00010620312500009277,2322.85546875,0.2850949754901961,0.5913024833048437,0.581586164493251,0.6125,0.776890229508183,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 96 38  2  0]
 [ 0  0 33 87  8  0]
 [ 0  0  3 24 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 5), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.4216027000002214,0.00010290062500075691,2316.1875,0.2728553921568628,0.5740422527255268,0.5622145506194272,0.596875,0.7743618072811034,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 96 37  3  0]
 [ 0  0 36 84  8  0]
 [ 0  0  3 26 11  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6956481000006534,0.0001127393749982275,2328.4375,0.2820006127450981,0.5892942302223646,0.5791390253890254,0.6125,0.79461880168262,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 99 36  1  0]
 [ 0  0 35 85  8  0]
 [ 0  0  4 24 12  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 7), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6022064999997383,0.00010734218750201308,2327.1953125,0.29301470588235295,0.603767253870205,0.595917126351909,0.625,0.7893785606187157,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 98 37  1  0]
 [ 0  0 33 88  7  0]
 [ 0  0  3 23 14  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.1), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.6)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7670719999996436,0.00011498937499823114,2328.890625,0.31286764705882353,0.6333929074021954,0.6228195089772272,0.653125,0.8023278547638346,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   1 104  30   1   0]
 [  0   0  33  88   7   0]
 [  0   0   2  21  17   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5477891000000454,0.00010773999999855733,2316.91015625,0.29074754901960786,0.5933987002396897,0.5840136054421767,0.6125,0.7827701282297181,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 97 37  2  0]
 [ 0  0 37 84  7  0]
 [ 0  0  4 21 15  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.6)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7390017999996417,0.00011685593750030421,2328.9375,0.32005208333333335,0.6368528971572631,0.6237530060805923,0.65625,0.8029545546833484,"[[  0   0   2   0   0   0]
 [  0   0   7   3   1   0]
 [  0   0 102  32   2   0]
 [  0   0  33  89   6   0]
 [  0   0   4  17  19   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 1.0), ('lambda', 0.01), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 0.6)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7818183999997927,0.00010930906250052885,2324.0546875,0.29465379901960786,0.6015116082019997,0.5947794523790735,0.621875,0.7870299428731643,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 97 38  1  0]
 [ 0  0 35 87  6  0]
 [ 0  0  3 22 15  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.8544603000000279,0.00011845874999778516,2339.640625,0.28126531862745097,0.5827521145894672,0.5728232758620689,0.603125,0.7880327547058856,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  1 95 37  3  0]
 [ 0  0 36 85  7  0]
 [ 0  0  4 23 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.6), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7573668000004545,0.00011579406250064039,2331.09765625,0.2826746323529412,0.5796407498251523,0.5685956605681713,0.6,0.7952641059205129,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 97 37  2  0]
 [ 0  0 39 81  8  0]
 [ 0  0  3 23 14  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.838533400000415,0.00012143499999979212,2340.48828125,0.2904105392156863,0.5979608932733932,0.5878247126436782,0.61875,0.7925747493905801,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  1 98 34  3  0]
 [ 0  0 36 86  6  0]
 [ 0  0  6 20 14  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.8534902000001239,0.00012079531250037689,2331.8359375,0.30012254901960783,0.6097256989705311,0.6024412460019468,0.628125,0.8000471024160107,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 97 37  1  0]
 [ 0  0 33 88  7  0]
 [ 0  0  2 22 16  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 1.0), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 3), ('min_child_weight', 1), ('subsample', 0.6)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.35562599999957456,9.738749999996799e-05,2319.3125,0.25824142156862745,0.5526635498024418,0.546472794190554,0.575,0.7492749180625297,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 93 40  2  0]
 [ 0  0 39 82  7  0]
 [ 0  0  2 29  9  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.015), ('gamma', 0.7), ('lambda', 1.0), ('max_depth', 17), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6084919999993872,0.0001093718750013295,2325.171875,0.28382352941176475,0.5835415461731251,0.5730722055079843,0.603125,0.7771971343032017,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 99 35  2  0]
 [ 0  0 40 80  8  0]
 [ 0  0  2 24 14  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 1.0), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6940899000001082,0.00010785999999995965,2330.796875,0.28486519607843136,0.589988566115238,0.5810774490410251,0.6125,0.783028168190029,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 99 36  1  0]
 [ 0  0 37 84  7  0]
 [ 0  0  5 22 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.025), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.8271624999997584,0.00011908031249845408,2341.36328125,0.2862438725490196,0.5942476589798491,0.5865303030303031,0.615625,0.7957009332057197,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 98 36  1  0]
 [ 0  0 35 86  7  0]
 [ 0  0  5 22 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 1.0), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.49519380000037927,0.00010713343750126114,2324.78515625,0.28478860294117647,0.5903198136261549,0.5784389269406393,0.6125,0.7672438901119252,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 100  34   2   0]
 [  0   0  37  83   8   0]
 [  0   0   4  23  13   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.6)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5180916999997862,0.00010804218750024575,2319.296875,0.28903186274509807,0.5956910332974883,0.586604953878214,0.615625,0.7768335835820082,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 99 35  2  0]
 [ 0  0 37 84  7  0]
 [ 0  0  2 24 14  0]
 [ 0  0  0  2  1  0]]"
"GaussianProcessClassifier(copy_X_train=False, n_jobs=-1)","OrderedDict([('copy_X_train', False), ('warm_start', True)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,1.9660555000000386,0.007739828749998878,2730.68359375,0.2159926470588235,0.4844286895899799,0.4416091954022988,0.5375,0.704089837702419,"[[  0   0   2   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 104  32   0   0]
 [  0   0  59  68   1   0]
 [  0   0   3  37   0   0]
 [  0   0   0   3   0   0]]"
"GaussianProcessClassifier(copy_X_train=False, n_jobs=-1)","OrderedDict([('copy_X_train', False), ('warm_start', False)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,2.943243600000642,0.00796798937500114,2790.01953125,0.2159926470588235,0.4844286895899799,0.4416091954022988,0.5375,0.704089837702419,"[[  0   0   2   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 104  32   0   0]
 [  0   0  59  68   1   0]
 [  0   0   3  37   0   0]
 [  0   0   0   3   0   0]]"
MultinomialNB(fit_prior=False),"OrderedDict([('fit_prior', True)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.001685899999756657,2.719093749874446e-05,2298.91796875,0.18435968137254902,0.3674142823848759,0.37414670341318634,0.465625,0.6192406571182488,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 126  10   0   0]
 [  0   0 105  23   0   0]
 [  0   0  21  19   0   0]
 [  0   0   2   1   0   0]]"
MultinomialNB(fit_prior=False),"OrderedDict([('fit_prior', False)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.0017372000002069399,2.7500312498318635e-05,2298.87109375,0.36119884506833033,0.2421204933196655,0.46550031833616295,0.215625,0.6174727744597052,"[[ 0  2  0  0  0  0]
 [ 0  8  0  1  1  1]
 [ 7 51 31 13 16 18]
 [ 3 48 16  9 26 26]
 [ 0  5  0  1 19 15]
 [ 0  0  1  0  0  2]]"
DecisionTreeClassifier(criterion='entropy'),"OrderedDict([('criterion', 'gini')])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.006650100000115344,2.7971562499828905e-05,2285.0625,0.2817109514260249,0.5339643963962688,0.5343930570603106,0.534375,0.6351576062154167,"[[ 0  0  2  0  0  0]
 [ 0  1  6  4  0  0]
 [ 1  8 83 36  8  0]
 [ 0  4 45 69  9  1]
 [ 0  0  5 15 18  2]
 [ 0  0  1  2  0  0]]"
DecisionTreeClassifier(criterion='entropy'),"OrderedDict([('criterion', 'entropy')])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.00911530000030325,2.7662812499329448e-05,2285.13671875,0.28987438725490194,0.5830517201217699,0.5854432948508538,0.58125,0.6815406348432609,"[[ 0  0  2  0  0  0]
 [ 0  0  3  6  2  0]
 [ 0  5 88 36  6  1]
 [ 1  3 27 79 12  6]
 [ 0  0  9 11 19  1]
 [ 0  0  0  1  2  0]]"
AdaBoostClassifier(algorithm='SAMME'),"OrderedDict([('algorithm', 'SAMME.R')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.0771283999993102,0.0001357418750018269,2285.6171875,0.39604918672014255,0.42821651149388823,0.44550129579129016,0.43125,0.5856513602681848,"[[ 2  0  0  0  0  0]
 [ 1  1  4  4  1  0]
 [ 4  1 59 66  6  0]
 [ 2  0 46 61 19  0]
 [ 0  0  2 23 15  0]
 [ 0  0  0  1  2  0]]"
AdaBoostClassifier(algorithm='SAMME'),"OrderedDict([('algorithm', 'SAMME')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.0702993000004426,9.113843750014894e-05,2285.55859375,0.2611839906417112,0.5045515469379105,0.5054119318181819,0.521875,0.6411449318239574,"[[ 0  0  2  0  0  0]
 [ 0  1  6  3  1  0]
 [ 1  1 96 37  1  0]
 [ 0  2 60 57  9  0]
 [ 0  0 12 15 13  0]
 [ 0  0  0  2  1  0]]"
GradientBoostingClassifier(),"OrderedDict([('loss', 'deviance')])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,1.08522449999964,6.177531249988988e-05,2247.1953125,0.30183962789661317,0.5954158152797205,0.5954768518518518,0.60625,0.7663925251472011,"[[ 0  1  1  0  0  0]
 [ 0  1  5  5  0  0]
 [ 2  0 99 32  2  1]
 [ 0  1 40 79  8  0]
 [ 0  0  5 18 15  2]
 [ 0  0  0  1  2  0]]"
MultinomialNB(fit_prior=False),"OrderedDict([('fit_prior', True)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.0018036000001302455,2.9590312502136838e-05,2382.140625,0.19002757352941177,0.39799660964709505,0.37997457088366177,0.478125,0.6494413938619881,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 120  16   0   0]
 [  0   0  95  33   0   0]
 [  0   0  12  28   0   0]
 [  0   0   2   1   0   0]]"
MultinomialNB(fit_prior=False),"OrderedDict([('fit_prior', False)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.00182790000053501,2.7670312499594728e-05,2382.375,0.3725397355912062,0.3153082653156168,0.5723153391272942,0.3,0.6433514389621801,"[[ 0  2  0  0  0  0]
 [ 0  8  0  1  0  2]
 [ 4 47 45  6 28  6]
 [ 4 48 16 12 42  6]
 [ 0  4  1  2 30  3]
 [ 0  0  1  0  1  1]]"
GaussianNB(),"OrderedDict([('priors', None)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.0020356000004539965,3.13193750002938e-05,2382.78515625,0.25254428475935825,0.4724571428571429,0.4676278150356019,0.478125,0.6358112470507372,"[[ 0  1  1  0  0  0]
 [ 0  1  6  4  0  0]
 [ 0  6 83 42  5  0]
 [ 0  2 51 53 22  0]
 [ 0  0  3 21 16  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.5378544000004695,0.00010838562500055104,2318.390625,0.26355698529411764,0.5581778160275463,0.5461200959976248,0.58125,0.7505110888272364,"[[ 0  1  1  0  0  0]
 [ 0  0  8  2  1  0]
 [ 0  0 95 36  5  0]
 [ 0  0 42 81  5  0]
 [ 0  0  5 25 10  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.6415718999996898,0.00011054062499908923,2331.03125,0.2770220588235294,0.5775195504836934,0.570032223415682,0.6,0.7582482256328198,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 96 37  3  0]
 [ 0  0 39 84  5  0]
 [ 0  0  3 25 12  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.535112499999741,0.0001155715625003495,2319.00390625,0.2596200980392157,0.5531028368794326,0.5422400373599003,0.578125,0.756221233626537,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 92 38  6  0]
 [ 0  0 40 84  4  0]
 [ 0  0  5 26  9  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.6623693000001367,0.00010978656249847064,2320.2265625,0.2696398729946524,0.5488277577026526,0.5641853037522335,0.56875,0.7538022981971106,"[[ 0  0  2  0  0  0]
 [ 0  1  7  2  1  0]
 [ 0  0 91 39  6  0]
 [ 0  0 41 81  6  0]
 [ 0  0  5 26  9  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.6397487000003821,0.0001179024999999001,2330.1015625,0.29079489750445636,0.5813461966954614,0.596986111111111,0.6,0.7629273358575732,"[[ 0  0  2  0  0  0]
 [ 0  1  6  3  1  0]
 [ 0  0 97 34  5  0]
 [ 0  0 40 82  6  0]
 [ 0  0  5 23 12  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 3), ('min_child_weight', 5), ('subsample', 0.7)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.3127849000002243,9.706031249834268e-05,2318.421875,0.23930759803921567,0.5206758286400789,0.5170850890086559,0.55,0.7233636917758937,"[[ 0  0  2  0  0  0]
 [ 0  0  7  3  1  0]
 [ 0  0 92 42  2  0]
 [ 0  0 47 78  3  0]
 [ 0  0  2 32  6  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.39469950000056997,0.0001010012500017865,2319.44921875,0.2555300245098039,0.5496539666020397,0.5417511884725543,0.575,0.7379371463507083,"[[ 0  1  1  0  0  0]
 [ 0  0  6  4  1  0]
 [ 0  0 91 41  4  0]
 [ 0  0 39 85  4  0]
 [ 0  0  5 27  8  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.5798696000001655,0.00011506250000081764,2319.3984375,0.2780637254901961,0.5856131729085465,0.5731813015061096,0.609375,0.7701784310306263,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 96 35  5  0]
 [ 0  0 34 88  6  0]
 [ 0  0  5 24 11  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.6520943000004991,0.00011194875000057891,2321.46875,0.27162990196078435,0.5719155457088358,0.5593361182617756,0.59375,0.7621265556796698,"[[ 0  1  1  0  0  0]
 [ 0  0  7  3  1  0]
 [ 0  0 95 36  5  0]
 [ 0  0 38 84  6  0]
 [ 0  0  5 24 11  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.7783662000001641,0.0001091456249980638,2334.5390625,0.26991421568627455,0.5716711269699672,0.5635199576121512,0.596875,0.755198101942428,"[[ 0  0  2  0  0  0]
 [ 0  0  7  3  1  0]
 [ 0  0 97 36  3  0]
 [ 0  0 40 84  4  0]
 [ 0  0  3 27 10  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 25), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.694850600000791,0.00011742812500017407,2332.73046875,0.2857857063279858,0.5741326593838176,0.5933035714285715,0.59375,0.7699799507164242,"[[ 0  0  2  0  0  0]
 [ 0  1  7  2  1  0]
 [ 0  0 91 40  5  0]
 [ 0  0 37 87  4  0]
 [ 0  0  6 23 11  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.025), ('gamma', 0.5), ('lambda', 1.0), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.668024399999922,0.0001154950000000099,2324.08203125,0.2754595588235294,0.5795680559808123,0.5653997747747748,0.603125,0.7634419185986403,"[[ 0  0  2  0  0  0]
 [ 0  0  8  2  1  0]
 [ 0  0 96 34  6  0]
 [ 0  0 37 86  5  0]
 [ 0  0  5 24 11  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 5), ('min_child_weight', 7), ('subsample', 0.8)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.38022930000079214,0.00010275531249988034,2321.5,0.2577512254901961,0.5557827250239789,0.5428942187220333,0.58125,0.7282102973733364,"[[ 0  1  1  0  0  0]
 [ 0  0  6  4  1  0]
 [ 0  0 96 36  4  0]
 [ 0  0 40 82  6  0]
 [ 0  0  5 27  8  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.6)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.6563453999997364,0.00011270437500172647,2322.25390625,0.2889246323529412,0.5994155977161585,0.5862891881952745,0.621875,0.7689749001824813,"[[ 0  0  2  0  0  0]
 [ 0  0  7  3  1  0]
 [ 0  0 97 33  6  0]
 [ 0  0 35 89  4  0]
 [ 0  0  5 22 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.7), ('lambda', 0.1), ('max_depth', 25), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.63015600000017,0.00011096656249947046,2332.171875,0.27789661319073083,0.557595957893023,0.5588994397516008,0.575,0.7601298508548032,"[[ 0  1  1  0  0  0]
 [ 0  1  5  5  0  0]
 [ 0  0 92 39  5  0]
 [ 0  0 41 80  7  0]
 [ 0  0  6 23 11  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 3), ('subsample', 0.6)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.48123000000032334,0.0001039640625009497,2326.46484375,0.2754595588235294,0.5784427641324194,0.5747046783625731,0.603125,0.7554241234496747,"[[ 0  0  2  0  0  0]
 [ 0  0  7  3  1  0]
 [ 0  0 96 37  3  0]
 [ 0  0 40 86  2  0]
 [ 0  0  5 24 11  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.7), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.6)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.7490226999998413,0.00010878031249887954,2334.25,0.27098651960784315,0.574732018708128,0.5641865524356329,0.6,0.7652885248792036,"[[  0   1   1   0   0   0]
 [  0   0   7   3   1   0]
 [  0   0 100  32   4   0]
 [  0   0  42  82   4   0]
 [  0   0   7  23  10   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.697917000000416,0.00011681468749884516,2334.32421875,0.2662377450980392,0.5630046948356807,0.5534850640113798,0.5875,0.7642463162220279,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 94 37  5  0]
 [ 0  0 40 84  4  0]
 [ 0  0  5 25 10  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.8634762000001501,0.0001226953125012642,2335.33203125,0.28517156862745097,0.5908942659702026,0.5806107478202548,0.6125,0.7874816896275321,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 95 36  5  0]
 [ 0  0 35 88  5  0]
 [ 0  0  3 24 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.7751744999995935,0.00012327218749987878,2335.921875,0.28249080882352945,0.585121247938096,0.5720672298079148,0.60625,0.7799729623997179,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 96 35  5  0]
 [ 0  0 36 85  7  0]
 [ 0  0  3 24 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.025), ('gamma', 1.0), ('lambda', 0.1), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.9010957000000417,0.00010936624999828837,2344.859375,0.2619944852941177,0.5593348472497185,0.5449283099450885,0.584375,0.7676474370925096,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 95 35  6  0]
 [ 0  0 39 83  6  0]
 [ 0  0  5 26  9  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.05), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.7172964999999749,0.00011735999999871183,2338.0,0.28754595588235293,0.5965310331522016,0.584982305936073,0.61875,0.7743363753018004,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 98 33  5  0]
 [ 0  0 36 87  5  0]
 [ 0  0  3 24 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.7), ('eta', 0.025), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.752422700000352,0.0001180946874995925,2338.90234375,0.28394607843137254,0.5877167507248177,0.5808426901736761,0.609375,0.7802452836018429,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 94 38  4  0]
 [ 0  0 36 88  4  0]
 [ 0  0  3 24 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.01), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.7949835000008534,0.00011838874999909876,2326.6171875,0.28379289215686276,0.5886547234632223,0.5784209770114942,0.609375,0.7788274183589449,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 96 34  5  0]
 [ 0  0 37 86  5  0]
 [ 0  0  3 24 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.7), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.7193108999999822,0.00010931656250079413,2337.7734375,0.2850657308377897,0.5784206976524044,0.5975528523489932,0.6,0.7653515814283254,"[[ 0  0  2  0  0  0]
 [ 0  1  7  3  0  0]
 [ 0  0 97 36  3  0]
 [ 0  0 38 84  6  0]
 [ 0  0  5 25 10  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.7976005999998961,0.00011873968750251152,2326.3515625,0.28639705882352945,0.5937855078658938,0.5801209210830827,0.615625,0.7793265689762545,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 96 34  6  0]
 [ 0  0 34 88  6  0]
 [ 0  0  5 22 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.05), ('lambda', 1.0), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.8567038000001048,0.00012224468749764129,2337.0234375,0.28517156862745097,0.5908942659702026,0.5806107478202548,0.6125,0.7874816896275321,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 95 36  5  0]
 [ 0  0 35 88  5  0]
 [ 0  0  3 24 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.05), ('lambda', 1.0), ('max_depth', 25), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.554010500000004,0.00010969906250011264,2322.08984375,0.2686887254901961,0.5685865021362952,0.5582020312013867,0.59375,0.7627683633540313,"[[ 0  0  2  0  0  0]
 [ 0  0  7  3  1  0]
 [ 0  0 96 35  5  0]
 [ 0  0 41 84  3  0]
 [ 0  0  5 25 10  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.5), ('lambda', 1.0), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.8109788000001572,0.00011529843749826795,2325.703125,0.27553615196078435,0.5803580236115059,0.5683237045860631,0.603125,0.773620450917075,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 95 34  6  0]
 [ 0  0 36 87  5  0]
 [ 0  0  6 23 11  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",7,0.8006560000003446,0.00011938687500219203,2331.41796875,0.27855392156862746,0.5809539864063006,0.573288056879829,0.603125,0.7771061597743076,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 93 39  4  0]
 [ 0  0 35 88  5  0]
 [ 0  0  3 25 12  0]
 [ 0  0  0  2  1  0]]"
DecisionTreeClassifier(criterion='entropy'),"OrderedDict([('criterion', 'gini')])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.006375599999955739,2.85818750000999e-05,2325.875,0.29581801470588237,0.6021008826978869,0.6019983328600128,0.603125,0.6993481552716793,"[[ 0  0  1  1  0  0]
 [ 0  0  6  3  2  0]
 [ 1  4 92 32  6  1]
 [ 0  5 23 83 16  1]
 [ 0  0  7 14 18  1]
 [ 0  0  0  1  2  0]]"
DecisionTreeClassifier(criterion='entropy'),"OrderedDict([('criterion', 'entropy')])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.008789100000285544,2.818406250071348e-05,2325.7421875,0.2857383578431372,0.5686254171266161,0.5657698551656121,0.571875,0.6685650818647465,"[[ 0  0  2  0  0  0]
 [ 0  0  4  4  3  0]
 [ 0  4 91 33  8  0]
 [ 0  2 38 73 10  5]
 [ 0  0  7 12 19  2]
 [ 0  0  0  2  1  0]]"
MultinomialNB(fit_prior=False),"OrderedDict([('fit_prior', True)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.001781699999810371,2.733843750206688e-05,2325.58984375,0.18872549019607843,0.39411311450146397,0.37484636575545666,0.475,0.6628265282477188,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 120  16   0   0]
 [  0   0  96  32   0   0]
 [  0   0  11  29   0   0]
 [  0   0   2   1   0   0]]"
MultinomialNB(fit_prior=False),"OrderedDict([('fit_prior', False)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.0017594999999346328,2.796124999804306e-05,2325.69921875,0.38668904114676167,0.2930490808525686,0.5045340272934613,0.265625,0.6434013985206396,"[[ 0  2  0  0  0  0]
 [ 0  8  0  1  1  1]
 [ 6 46 45 10 13 16]
 [ 3 46 19  9 30 21]
 [ 0  4  1  1 21 13]
 [ 0  0  1  0  0  2]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 5), ('subsample', 0.8)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5780908999995518,0.00010692500000004656,2365.30078125,0.2710171568627451,0.5705128729285311,0.556605676996864,0.59375,0.7767103690354463,"[[  0   1   1   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 103  31   2   0]
 [  0   0  42  76  10   0]
 [  0   0   4  25  11   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6872409999996307,0.0001146615625003733,2366.234375,0.2780943627450981,0.5815130183687428,0.5726065869102782,0.603125,0.7839991800734982,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 99 35  2  0]
 [ 0  0 39 82  7  0]
 [ 0  0  3 25 12  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.7)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5728700000008757,0.00010885281249954915,2364.90625,0.2872395833333333,0.5969675925925927,0.5840001853224611,0.61875,0.7766517120353392,"[[  0   1   1   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 102  30   4   0]
 [  0   0  38  83   7   0]
 [  0   0   5  22  13   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 3), ('subsample', 0.9)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7128988000004028,0.00011351343749765874,2377.8984375,0.2738817401960784,0.5730529523896492,0.5578185212547172,0.59375,0.7706195612716923,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   1 103  28   4   0]
 [  0   0  41  75  12   0]
 [  0   0   5  23  12   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6718357999998261,0.00011182531250142347,2365.1796875,0.28072916666666664,0.5815042743845916,0.5689715719063545,0.603125,0.7743018827903799,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 102  32   2   0]
 [  0   0  41  78   9   0]
 [  0   0   5  22  13   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 3), ('min_child_weight', 5), ('subsample', 0.7)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.3368001999997432,9.355781249951179e-05,2364.9453125,0.23918504901960788,0.5159034415745826,0.5099917405668579,0.54375,0.7137352821027905,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 97 37  2  0]
 [ 0  0 53 70  5  0]
 [ 0  0  4 29  7  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 5), ('subsample', 0.8)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.4208343000000241,9.952468750213938e-05,2365.17578125,0.2580422794117647,0.5448936674481468,0.5377207448555423,0.56875,0.7530625845932389,"[[ 0  1  1  0  0  0]
 [ 0  0  5  6  0  0]
 [ 0  0 99 35  2  0]
 [ 0  0 49 73  6  0]
 [ 0  0  4 26 10  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.9)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6202197000002343,0.00011051312500001131,2373.15625,0.2859375,0.594455698053484,0.5808706293706294,0.615625,0.7863389699599694,"[[  0   1   1   0   0   0]
 [  0   0   4   7   0   0]
 [  0   0 102  30   4   0]
 [  0   0  38  82   8   0]
 [  0   0   5  22  13   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6788317000000461,0.00010929375000046093,2365.01171875,0.28903325534759355,0.5776853498731379,0.5759236859654854,0.596875,0.7710921405183627,"[[  0   1   1   0   0   0]
 [  0   1   5   5   0   0]
 [  0   0 103  30   3   0]
 [  0   0  43  75  10   0]
 [  0   0   5  23  12   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.7)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7932565999999497,0.00010833249999961936,2368.6640625,0.2777879901960784,0.5796678540543408,0.5712034684920527,0.603125,0.7710390089763829,"[[  0   1   1   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 103  30   3   0]
 [  0   0  45  78   5   0]
 [  0   0   4  24  12   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 7), ('min_child_weight', 3), ('subsample', 0.9)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5401857999995627,0.00010764875000006669,2365.3984375,0.27403492647058825,0.5713340710752222,0.5602077684293993,0.59375,0.7729985844066686,"[[  0   1   1   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 101  32   3   0]
 [  0   0  44  77   7   0]
 [  0   0   5  23  12   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.025), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 7), ('subsample', 0.6)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.4449760999996215,0.00010506093749995671,2365.2578125,0.26090686274509806,0.5471206818890544,0.5374931205283435,0.56875,0.7529328807290161,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 99 35  1  0]
 [ 0  0 47 72  9  0]
 [ 0  0  4 25 11  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.8)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7992917000001398,0.00011039999999979954,2368.44921875,0.29010416666666666,0.5975191882450968,0.5870342866353504,0.61875,0.7875299926748043,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 102  31   3   0]
 [  0   0  40  82   6   0]
 [  0   0   4  22  14   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.7), ('lambda', 1.0), ('max_depth', 3), ('min_child_weight', 7), ('subsample', 0.7)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.3304600000001301,9.485125000026073e-05,2364.95703125,0.23926164215686277,0.5158249507306112,0.5165859103415326,0.54375,0.7118422533272826,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 96 39  1  0]
 [ 0  0 53 71  4  0]
 [ 0  0  4 29  7  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.7), ('lambda', 0.01), ('max_depth', 5), ('min_child_weight', 5), ('subsample', 0.9)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.43902780000007624,0.00010144281249893083,2365.18359375,0.2520220588235294,0.525978321710847,0.5142657274069972,0.546875,0.7401544378707279,"[[ 0  1  1  0  0  0]
 [ 0  0  5  6  0  0]
 [ 0  0 96 37  3  0]
 [ 0  0 51 68  9  0]
 [ 0  0  4 25 11  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 1.0), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 7), ('subsample', 0.9)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5653429000003598,0.00010746468749971428,2365.14453125,0.27143075980392156,0.565600950438664,0.5534875945397528,0.5875,0.7588878911610498,"[[  0   1   1   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 101  33   2   0]
 [  0   0  44  75   9   0]
 [  0   0   4  24  12   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.9), ('eta', 0.01), ('gamma', 0.05), ('lambda', 1.0), ('max_depth', 9), ('min_child_weight', 7), ('subsample', 0.9)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5290703999999096,0.00010720250000133547,2366.1796875,0.26752450980392156,0.5563424670567528,0.5434419210722263,0.578125,0.7550170369805175,"[[  0   1   1   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 101  33   2   0]
 [  0   0  46  72  10   0]
 [  0   0   4  24  12   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.01), ('gamma', 1.0), ('lambda', 0.1), ('max_depth', 25), ('min_child_weight', 3), ('subsample', 0.7)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6757184999996753,0.00010558562500193603,2365.859375,0.27771139705882353,0.5803263365142886,0.5674160671462829,0.603125,0.7695261868551735,"[[  0   1   1   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 104  30   2   0]
 [  0   0  42  77   9   0]
 [  0   0   3  25  12   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.8)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6153620000004594,0.00010905249999950683,2373.0078125,0.30202345142602494,0.5852933449400841,0.5806173490267252,0.6,0.7715858238246658,"[[  0   1   1   0   0   0]
 [  0   1   4   6   0   0]
 [  0   0 100  33   3   0]
 [  0   1  43  75   9   0]
 [  0   0   4  20  16   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 1.0), ('eta', 0.015), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 7), ('subsample', 0.7)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5004263000000719,0.00010809124999866526,2371.58203125,0.26056985294117646,0.5509947752039401,0.5399397227245328,0.575,0.7533405473484549,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 100  34   2   0]
 [  0   0  46  74   8   0]
 [  0   0   4  26  10   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.7), ('lambda', 1.0), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.8)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7525908999996318,0.00011048468749947915,2378.87890625,0.2808057598039216,0.5818553782810089,0.5694480519480519,0.603125,0.7805895141569366,"[[  0   1   1   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 101  32   3   0]
 [  0   0  41  79   8   0]
 [  0   0   5  22  13   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 1.0), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 7), ('subsample', 0.7)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.49061489999985497,0.0001057262500012257,2371.33203125,0.2710171568627451,0.5708876065568517,0.557147750299346,0.59375,0.7560242824642174,"[[  0   1   1   0   0   0]
 [  0   0   5   6   0   0]
 [  0   0 103  30   3   0]
 [  0   0  43  76   9   0]
 [  0   0   2  27  11   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 12), ('min_child_weight', 3), ('subsample', 0.8)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6759013999999297,0.00011575656249931398,2366.6171875,0.3046276180926916,0.5915424613177841,0.5897399175770343,0.60625,0.7790556299065143,"[[  0   1   1   0   0   0]
 [  0   1   5   5   0   0]
 [  0   0 100  33   3   0]
 [  0   0  39  77  12   0]
 [  0   0   4  20  16   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 7), ('subsample', 0.8)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.4521604000001389,0.00010622437499989701,2364.90234375,0.2657015931372549,0.5624165240596811,0.5565062750189332,0.5875,0.7556660253121602,"[[  0   1   1   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 101  33   2   0]
 [  0   0  46  77   5   0]
 [  0   0   4  26  10   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 17), ('min_child_weight', 5), ('subsample', 0.8)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6139929000000848,0.00011145375000012336,2372.6796875,0.29137700534759353,0.5899687661311136,0.584002774927712,0.609375,0.7781001662291248,"[[  0   1   1   0   0   0]
 [  0   1   5   5   0   0]
 [  0   1 103  30   2   0]
 [  0   0  38  80  10   0]
 [  0   0   4  25  11   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.015), ('gamma', 0.7), ('lambda', 1.0), ('max_depth', 17), ('min_child_weight', 5), ('subsample', 0.9)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6284847000006266,0.00010704437499953201,2372.98046875,0.27143075980392156,0.565600950438664,0.5534875945397528,0.5875,0.7654014790171187,"[[  0   1   1   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 101  33   2   0]
 [  0   0  44  75   9   0]
 [  0   0   4  24  12   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.1), ('gamma', 0.7), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.7)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5726015999998708,0.00010509593750214208,2365.12890625,0.27752757352941176,0.5847796212725181,0.5740850805696992,0.609375,0.7666458048412677,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 103  30   3   0]
 [  0   0  41  81   6   0]
 [  0   0   5  24  11   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 1.0), ('lambda', 1.0), ('max_depth', 9), ('min_child_weight', 7), ('subsample', 0.8)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5201731000006475,0.00010678031250108689,2366.55859375,0.27674632352941175,0.5718033352593734,0.5606698575656677,0.59375,0.7443734102306412,"[[  0   1   1   0   0   0]
 [  0   0   5   6   0   0]
 [  0   0 103  31   2   0]
 [  0   0  46  74   8   0]
 [  0   0   4  23  13   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.1), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 25), ('min_child_weight', 7), ('subsample', 0.8)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5435421000001952,0.00010968718750064,2365.0703125,0.27988803475935825,0.5619243330513336,0.5591517238991969,0.58125,0.7576391562708662,"[[  0   1   1   0   0   0]
 [  0   1   6   4   0   0]
 [  0   1 100  33   2   0]
 [  0   0  46  74   8   0]
 [  0   0   4  25  11   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.6)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5478876999995919,0.0001115421874999356,2365.09375,0.2984082553475936,0.5942154631195418,0.5920780397139093,0.6125,0.7758273900518157,"[[  0   2   0   0   0   0]
 [  0   1   4   6   0   0]
 [  0   0 103  31   2   0]
 [  0   0  42  79   7   0]
 [  0   0   5  22  13   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 5), ('subsample', 0.8)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.5744160000003831,0.00011147031249834072,2393.4453125,0.29022810828877005,0.5863144757879277,0.5877719748858448,0.60625,0.7706803441331604,"[[  0   1   1   0   0   0]
 [  0   1   5   5   0   0]
 [  0   0 101  33   2   0]
 [  0   0  39  81   8   0]
 [  0   0   4  25  11   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.6696412000001146,0.00011223406249882828,2388.99609375,0.28382352941176475,0.5835875785720988,0.5719124648654851,0.603125,0.7828209959371226,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 99 33  4  0]
 [ 0  0 41 80  7  0]
 [ 0  0  2 24 14  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.7)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.5570004999999583,0.00011095000000125311,2386.4296875,0.28020833333333334,0.5908303011926419,0.5817607526881721,0.615625,0.7767555663221188,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 102  30   4   0]
 [  0   0  40  84   4   0]
 [  0   0   5  24  11   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 3), ('subsample', 0.9)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.7062580000001617,0.00010703906250171258,2399.61328125,0.2858762254901961,0.5767444813262956,0.5650842387025665,0.59375,0.7647752291192864,"[[ 0  1  1  0  0  0]
 [ 0  0  5  6  0  0]
 [ 0  0 96 37  3  0]
 [ 0  0 42 78  8  0]
 [ 0  0  2 22 16  0]
 [ 0  0  0  1  2  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.6689605000001393,0.00010782250000147542,2387.6328125,0.28788435828877007,0.5748959994742892,0.5753280198421908,0.59375,0.7696398773546015,"[[  0   1   1   0   0   0]
 [  0   1   6   4   0   0]
 [  0   0 101  32   3   0]
 [  0   0  44  76   8   0]
 [  0   0   3  25  12   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 3), ('min_child_weight', 5), ('subsample', 0.7)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.32754409999961354,9.461374999943927e-05,2385.8203125,0.24725796568627453,0.5297745757067791,0.5273227065712427,0.55625,0.7170852933567334,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 97 38  1  0]
 [ 0  0 50 73  5  0]
 [ 0  0  4 28  8  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 5), ('subsample', 0.8)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.42435659999955533,0.00010164374999988013,2385.8671875,0.2725490196078431,0.5729181467818131,0.5724963325688547,0.596875,0.7510424311447335,"[[  0   1   1   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 100  34   2   0]
 [  0   0  45  80   3   0]
 [  0   0   4  25  11   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.9)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.6252759999997579,0.00011372437499801435,2393.87890625,0.28356311274509804,0.5881538372414286,0.5785494341870161,0.609375,0.7840263028747754,"[[ 0  1  1  0  0  0]
 [ 0  0  5  6  0  0]
 [ 0  0 99 33  4  0]
 [ 0  0 40 83  5  0]
 [ 0  0  5 22 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.683191999999508,0.00010727468749962554,2398.3046875,0.2754136029411765,0.5747008771533766,0.5651348651348651,0.596875,0.7663150488780112,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 100  34   2   0]
 [  0   0  42  79   7   0]
 [  0   0   4  24  12   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.7)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.782288299999891,0.00010795500000142511,2401.28125,0.2790900735294118,0.5832687102647234,0.5715406513776079,0.60625,0.7796981761059886,"[[  0   1   1   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 103  30   3   0]
 [  0   0  42  79   7   0]
 [  0   0   4  24  12   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.1), ('lambda', 1.0), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.6340205999995305,0.00011847562499838205,2394.60546875,0.28356311274509804,0.5882354624542124,0.5771738505747126,0.609375,0.7821946203079577,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 99 34  3  0]
 [ 0  0 38 83  7  0]
 [ 0  0  5 22 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.025), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 7), ('subsample', 0.6)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.4394977000001745,0.00010441156250067252,2386.5859375,0.2645526960784314,0.5610130883463379,0.5563573602957165,0.584375,0.7468118032224635,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 99 34  2  0]
 [ 0  0 45 78  5  0]
 [ 0  0  3 27 10  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.01), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.9)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.7128339999999298,0.00011169968749982217,2400.15234375,0.27533700980392156,0.5752089267537445,0.5647119911381889,0.596875,0.7804852352394434,"[[  0   1   1   0   0   0]
 [  0   0   6   5   0   0]
 [  0   1 101  31   3   0]
 [  0   0  43  78   7   0]
 [  0   0   6  22  12   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.8)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.7242915000006178,0.00011804031250051139,2399.90234375,0.28095894607843136,0.5818311195445921,0.5738636363636364,0.603125,0.787745643447094,"[[ 0  1  1  0  0  0]
 [ 0  0  5  6  0  0]
 [ 0  0 99 34  3  0]
 [ 0  0 43 81  4  0]
 [ 0  0  5 22 13  0]
 [ 0  0  0  1  2  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.1), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 5), ('subsample', 0.6)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.5007323999998334,0.00011453218750148153,2393.18359375,0.2659313725490196,0.5634930504380578,0.5560188477951636,0.5875,0.7558932186274256,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 98 36  2  0]
 [ 0  0 42 80  6  0]
 [ 0  0  4 26 10  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.015), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 1.0)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.6981135999994876,0.00011534406250177654,2400.8359375,0.282858455882353,0.5760367673867469,0.5634858485567051,0.59375,0.7835637594155973,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 98 33  4  0]
 [ 0  0 43 77  8  0]
 [ 0  0  4 21 15  0]
 [ 0  0  0  1  2  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.01), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 0.8)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.8710460000002058,0.00012335937499869943,2401.97265625,0.2780943627450981,0.5808676370672338,0.5711979252598581,0.603125,0.7970892871723396,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 99 33  4  0]
 [ 0  0 42 82  4  0]
 [ 0  0  4 24 12  0]
 [ 0  0  0  1  2  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.015), ('gamma', 0.05), ('lambda', 1.0), ('max_depth', 7), ('min_child_weight', 1), ('subsample', 0.6)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.5800650999999561,0.00010353843750010583,2394.90234375,0.28397671568627453,0.5847674949164311,0.5754922653993104,0.603125,0.7735756218977469,"[[ 0  1  1  0  0  0]
 [ 0  0  5  6  0  0]
 [ 0  1 97 35  3  0]
 [ 0  0 39 82  7  0]
 [ 0  0  4 22 14  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.1), ('gamma', 0.05), ('lambda', 0.01), ('max_depth', 7), ('min_child_weight', 1), ('subsample', 0.8)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.6162012000004324,0.0001095775000010235,2399.20703125,0.28772977941176475,0.5918934501845018,0.5818937093608146,0.6125,0.7795377348737174,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 99 33  4  0]
 [ 0  0 41 83  4  0]
 [ 0  0  5 21 14  0]
 [ 0  0  0  1  2  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 0.9)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.8807042000007641,0.00011333374999935585,2402.59765625,0.26871936274509806,0.564804919510492,0.5599424851517429,0.5875,0.7890213293121927,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 99 33  3  0]
 [ 0  0 46 78  4  0]
 [ 0  0  6 23 11  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.7), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.9)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.8861950999998953,0.00011435218750079911,2402.515625,0.2845741421568628,0.5741375502350945,0.5627910205970841,0.590625,0.7682578655612461,"[[ 0  1  1  0  0  0]
 [ 0  0  5  6  0  0]
 [ 0  1 96 35  4  0]
 [ 0  0 44 77  7  0]
 [ 0  0  3 21 16  0]
 [ 0  0  0  1  2  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.01), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 1.0)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.9248062999995454,0.00012335156250173896,2403.26171875,0.2942861519607843,0.5854990477374581,0.5725452716297786,0.6,0.7906403521391396,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 95 35  5  0]
 [ 0  0 38 79 11  0]
 [ 0  0  2 20 18  0]
 [ 0  0  0  1  2  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.01), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.8)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.8859893999997439,0.00010993437500133041,2411.20703125,0.27924325980392156,0.5833971201212581,0.5771820420958352,0.60625,0.7787039167567731,"[[  0   1   1   0   0   0]
 [  0   0   5   6   0   0]
 [  0   0 101  33   2   0]
 [  0   0  42  81   5   0]
 [  0   0   5  23  12   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.9), ('eta', 0.01), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 0.9)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.9722491000002265,0.00011101687500172374,2411.9921875,0.28129595588235295,0.5794334493442226,0.5675047961630695,0.596875,0.7799579110227041,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  1 98 33  4  0]
 [ 0  1 40 79  8  0]
 [ 0  0  4 22 14  0]
 [ 0  0  0  1  2  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.6), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.9)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.6886384999997972,0.00011180343749970235,2401.55078125,0.28020833333333334,0.591607137350834,0.5853791737408037,0.615625,0.788373052819954,"[[  0   1   1   0   0   0]
 [  0   0   6   5   0   0]
 [  0   1 102  30   3   0]
 [  0   0  40  84   4   0]
 [  0   0   6  23  11   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.025), ('gamma', 0.05), ('lambda', 0.01), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 1.0)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.8539866000000984,0.00012373124999953689,2402.875,0.28780637254901964,0.5923436755800504,0.5845329024676851,0.6125,0.7946125202140039,"[[ 0  0  1  1  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 98 34  3  0]
 [ 0  0 39 84  5  0]
 [ 0  0  4 22 14  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 1.0), ('eta', 0.015), ('gamma', 0.05), ('lambda', 0.01), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 0.9)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.9533144999995784,0.00011952625000049011,2402.28125,0.3842371323529412,0.600310309500701,0.5907704288611997,0.6125,0.792770355263569,"[[ 1  1  0  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 97 33  5  0]
 [ 0  1 39 79  9  0]
 [ 0  0  3 18 19  0]
 [ 0  0  0  1  2  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.015), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 0.8)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.8505059999997684,0.00011594093750204593,2402.01953125,0.2780943627450981,0.5808676370672338,0.5711979252598581,0.603125,0.7970892871723396,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 99 33  4  0]
 [ 0  0 42 82  4  0]
 [ 0  0  4 24 12  0]
 [ 0  0  0  1  2  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.025), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 1), ('subsample', 0.8)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.47245680000014545,0.00010647343750065374,2393.8359375,0.2686427696078431,0.563873963898177,0.5582571712754878,0.5875,0.7540724854512088,"[[  0   1   1   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 100  33   3   0]
 [  0   0  47  77   4   0]
 [  0   0   4  25  11   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.05), ('lambda', 0.01), ('max_depth', 25), ('min_child_weight', 3), ('subsample', 0.8)])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.6305053999994925,0.0001127749999994876,2399.40234375,0.28854166666666664,0.5995577812920987,0.5889505422114116,0.621875,0.7847752167984113,"[[  0   1   1   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 102  30   4   0]
 [  0   0  39  84   5   0]
 [  0   0   5  22  13   0]
 [  0   0   0   2   1   0]]"
MultinomialNB(fit_prior=False),"OrderedDict([('fit_prior', True)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.001735499999995227,2.7097499997807973e-05,2370.5390625,0.18895526960784315,0.39941418137553253,0.37736581920903955,0.475,0.659193727395963,"[[  0   0   2   0   0   0]
 [  0   0  11   0   0   0]
 [  0   0 117  19   0   0]
 [  0   0  93  35   0   0]
 [  0   0  11  29   0   0]
 [  0   0   2   1   0   0]]"
MultinomialNB(fit_prior=False),"OrderedDict([('fit_prior', False)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.0019405000002734596,2.8152499999123394e-05,2370.5,0.3614782939691028,0.31632741270026077,0.5368540679580083,0.3,0.6445365711593278,"[[ 0  2  0  0  0  0]
 [ 0  7  0  2  0  2]
 [ 6 45 46  8 20 11]
 [ 3 46 18 11 40 10]
 [ 0  4  0  2 31  3]
 [ 0  0  1  0  1  1]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.5520776000003025,0.00011288999999976568,2429.375,0.2845281862745098,0.5968481175913363,0.5849367816091954,0.61875,0.7721180076622252,"[[  0   1   1   0   0   0]
 [  0   0   6   4   1   0]
 [  0   0 100  33   3   0]
 [  0   0  35  86   7   0]
 [  0   0   3  25  12   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.6474754999999277,0.00010943593750027958,2442.64453125,0.2941636029411765,0.6062209720104457,0.5925425916365514,0.628125,0.7951221383889642,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 100  32   4   0]
 [  0   0  34  87   7   0]
 [  0   0   5  21  14   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.543837899999744,0.00011492187500152795,2431.28515625,0.28616727941176473,0.5944779993831604,0.5821672528693077,0.615625,0.7865405589074085,"[[ 0  1  1  0  0  0]
 [ 0  0  7  3  1  0]
 [ 0  0 99 34  3  0]
 [ 0  0 36 85  7  0]
 [ 0  0  5 22 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.6676702000004298,0.00011068031249976684,2431.7109375,0.2744178921568628,0.5717362440191387,0.5594547550563849,0.59375,0.7740833144875862,"[[ 0  0  2  0  0  0]
 [ 0  0  6  4  1  0]
 [ 0  0 96 36  4  0]
 [ 0  0 40 82  6  0]
 [ 0  0  5 23 12  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.6374269000007189,0.00011168999999995321,2442.375,0.2852787990196079,0.586805005377338,0.5742225089269424,0.60625,0.7862750088615237,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 97 36  3  0]
 [ 0  0 36 83  9  0]
 [ 0  0  5 21 14  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 3), ('min_child_weight', 5), ('subsample', 0.7)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.3218251999996937,9.342281250042106e-05,2430.078125,0.24574142156862744,0.5366082321482631,0.5340052226633935,0.565625,0.7429124245821473,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 93 42  1  0]
 [ 0  0 41 82  5  0]
 [ 0  0  3 31  6  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.4015631000002031,0.000102437812498124,2430.4140625,0.26753982843137253,0.5682385979428032,0.5600708257986738,0.590625,0.7645901353964062,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 94 40  2  0]
 [ 0  0 35 85  8  0]
 [ 0  0  2 28 10  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.5875380999996196,0.0001147059375000481,2437.8515625,0.28215379901960785,0.5897701660735468,0.578953093918727,0.6125,0.7804634024037445,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 97 36  3  0]
 [ 0  0 34 87  7  0]
 [ 0  0  3 25 12  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.6676253999994515,0.00010807406250137319,2431.82421875,0.2904105392156863,0.5990786256625198,0.587899766899767,0.61875,0.7751328041217863,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 98 36  2  0]
 [ 0  0 33 86  9  0]
 [ 0  0  3 23 14  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.7588814999999158,0.00010909406250050324,2446.09375,0.28158700980392154,0.5930758985328412,0.5856422200635818,0.61875,0.778864043169436,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  33   2   0]
 [  0   0  37  86   5   0]
 [  0   0   4  25  11   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 7), ('subsample', 0.6)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.40421299999979965,0.00010235343750082393,2431.33203125,0.2721200980392157,0.5660992309434081,0.5650321696957273,0.5875,0.7560551401850754,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 92 43  1  0]
 [ 0  0 39 84  5  0]
 [ 0  0  2 26 12  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.025), ('gamma', 0.1), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.8872734000005948,0.00012201937499867199,2446.5234375,0.3057751225490196,0.6106222044639784,0.5972912374823399,0.628125,0.7952654066004089,"[[ 0  0  2  0  0  0]
 [ 0  0  7  3  1  0]
 [ 0  1 98 33  4  0]
 [ 0  0 36 85  7  0]
 [ 0  0  3 19 18  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 7), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.5913310000005367,0.00011415406249852822,2443.61328125,0.28673406862745093,0.5894104689940344,0.5803302457785542,0.609375,0.7833973894008881,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  1 95 38  2  0]
 [ 0  0 35 86  7  0]
 [ 0  0  6 20 14  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.025), ('gamma', 1.0), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.6)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.7609787999999753,0.00010542249999900832,2445.77734375,0.29278492647058824,0.6030817321160225,0.589341453248738,0.625,0.7871307773460396,"[[  0   0   2   0   0   0]
 [  0   0   7   3   1   0]
 [  0   0 101  32   3   0]
 [  0   0  36  85   7   0]
 [  0   0   5  21  14   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.9), ('eta', 0.01), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.8428247000001647,0.00011814281249939995,2446.640625,0.30012254901960783,0.6092878151260503,0.5971690759637188,0.628125,0.8049468425707754,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  1 97 33  5  0]
 [ 0  0 34 88  6  0]
 [ 0  0  3 21 16  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.015), ('gamma', 0.1), ('lambda', 1.0), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.7871269999996002,0.00012147062500105222,2447.96484375,0.27651654411764703,0.5710866668267384,0.563458587187298,0.590625,0.79432052663785,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  1 89 42  4  0]
 [ 0  0 35 87  6  0]
 [ 0  0  4 23 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.8731036999997741,0.00012323187499987397,2447.52734375,0.3004595588235294,0.6045744855782526,0.5926274678934254,0.621875,0.8017432912705302,"[[ 0  0  2  0  0  0]
 [ 0  0  6  4  1  0]
 [ 0  1 96 35  4  0]
 [ 0  0 35 86  7  0]
 [ 0  0  2 21 17  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.1), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.846736399999827,0.00012016968750003799,2447.453125,0.2788143382352941,0.5768302771377368,0.5673530629139073,0.596875,0.7908002926854022,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  1 93 38  4  0]
 [ 0  0 37 85  6  0]
 [ 0  0  4 23 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 7), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.6135028999997303,0.00010862218749991825,2444.80078125,0.2842830882352941,0.5841236501164299,0.5739426307175467,0.603125,0.7826997430224565,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  1 93 38  4  0]
 [ 0  0 35 86  7  0]
 [ 0  0  3 23 14  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.05), ('gamma', 0.7), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.6078208999997514,0.00010731406250101827,2444.73828125,0.2892616421568628,0.5960178484778159,0.5850952121286046,0.615625,0.7790308256697769,"[[ 0  0  2  0  0  0]
 [ 0  0  7  3  1  0]
 [ 0  1 96 36  3  0]
 [ 0  0 34 87  7  0]
 [ 0  0  3 23 14  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.05), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.7350386999996772,0.00011663843750113756,2446.56640625,0.2886182598039216,0.5984563355697377,0.587024277502321,0.621875,0.7901120116507272,"[[  0   0   2   0   0   0]
 [  0   0   8   3   0   0]
 [  0   0 101  31   4   0]
 [  0   0  38  85   5   0]
 [  0   0   6  21  13   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 3), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.277877499999704,9.70687500000622e-05,2434.47265625,0.2525122549019608,0.5465341839012051,0.5380649059302931,0.575,0.7407272347948481,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 93 41  2  0]
 [ 0  0 38 84  6  0]
 [ 0  0  5 28  7  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.05), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.8782673000005161,0.00012405062499851738,2447.6796875,0.2921262254901961,0.5972747744567902,0.5871838777660694,0.615625,0.8055117316081782,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  2 96 34  4  0]
 [ 0  0 36 86  6  0]
 [ 0  0  5 20 15  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.9), ('eta', 0.01), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.5293739999997342,0.00010913937500163229,2434.05859375,0.28215379901960785,0.5907153206741401,0.5824425574425575,0.6125,0.7752346267745387,"[[ 0  1  1  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 97 36  3  0]
 [ 0  0 35 87  6  0]
 [ 0  0  2 26 12  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.01), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 7), ('subsample', 0.9)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.5465759999997317,0.00011548875000073622,2432.59765625,0.2772058823529412,0.5741618227619363,0.5621202590625292,0.59375,0.7745252633787512,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 97 36  3  0]
 [ 0  0 39 80  9  0]
 [ 0  0  3 24 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.7), ('eta', 0.025), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 5), ('subsample', 1.0)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.532046100000116,0.00011582718749991727,2434.5078125,0.27277879901960783,0.5732212621413182,0.5616576576576577,0.596875,0.7790434083508806,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  0 97 36  3  0]
 [ 0  0 38 83  7  0]
 [ 0  0  5 24 11  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.7), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.47717109999939566,9.954437500141467e-05,2439.57421875,0.28175551470588234,0.577291374933283,0.5680841853182279,0.596875,0.7729436151329621,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 92 42  2  0]
 [ 0  0 35 85  8  0]
 [ 0  0  5 21 14  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.8547009000003527,0.0001152321874997142,2456.4296875,0.2717830882352941,0.5718239846353725,0.5610178114014431,0.59375,0.7883313932137661,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  1 93 38  4  0]
 [ 0  0 35 86  7  0]
 [ 0  0  5 24 11  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 1.0), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.9386591000002227,0.00011163187500073946,2457.26953125,0.28520220588235295,0.5858572703374092,0.5776798081145907,0.60625,0.7844681566917012,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  1 98 35  2  0]
 [ 0  0 40 82  6  0]
 [ 0  0  5 21 14  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.025), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.8730866000005335,0.00010997874999816304,2457.12109375,0.27791053921568626,0.5860401491281448,0.5747914021403954,0.609375,0.78859709718701,"[[ 0  0  2  0  0  0]
 [ 0  0  8  3  0  0]
 [ 0  1 98 33  4  0]
 [ 0  0 36 86  6  0]
 [ 0  0  4 25 11  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.5491726999998718,0.00011436812499994175,2431.7578125,0.2632199754901961,0.5622586207802995,0.5574365618483267,0.5875,0.7590718342402522,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 96 37  3  0]
 [ 0  0 41 83  4  0]
 [ 0  0  4 27  9  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6668263000001389,0.00011215343749881868,2434.20703125,0.2865042892156863,0.5893502988239832,0.5784957185836612,0.609375,0.7757074167017763,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 98 35  3  0]
 [ 0  0 38 83  7  0]
 [ 0  0  6 20 14  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.5433382000001075,0.00011175031250161282,2431.5703125,0.27824754901960785,0.5808859912650526,0.5753366890380314,0.603125,0.763189566097688,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 97 36  3  0]
 [ 0  0 40 84  4  0]
 [ 0  0  6 22 12  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6835550999994666,0.00011228624999830572,2433.43359375,0.2796262254901961,0.5835757318255602,0.5724840156352922,0.60625,0.7719107912587269,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 96 37  3  0]
 [ 0  0 35 86  7  0]
 [ 0  0  6 22 12  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6365272000002733,0.00011498124999889114,2433.60546875,0.2757199754901961,0.5750856229909689,0.5632853881278539,0.596875,0.7692234549989466,"[[ 0  0  2  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 96 37  3  0]
 [ 0  0 37 83  8  0]
 [ 0  0  5 23 12  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 3), ('min_child_weight', 5), ('subsample', 0.7)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.31962560000010853,9.601125000244793e-05,2431.81640625,0.2369638480392157,0.5106186466009948,0.505258064516129,0.5375,0.717646552797296,"[[ 0  0  2  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 92 43  1  0]
 [ 0  0 49 73  6  0]
 [ 0  0  6 27  7  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.409466699999939,0.0001007493749995092,2432.32421875,0.26378676470588236,0.5599650349650349,0.5544439421338155,0.58125,0.7420904085886001,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  1 92 40  3  0]
 [ 0  0 38 84  6  0]
 [ 0  0  3 27 10  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6415140999997675,0.00011066625000069052,2439.671875,0.28174019607843137,0.594730992818876,0.5838275434243176,0.61875,0.7769174208186009,"[[ 0  0  2  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 99 34  3  0]
 [ 0  0 33 88  7  0]
 [ 0  0  3 26 11  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7429971999999907,0.00011671843749923027,2443.859375,0.29163602941176475,0.6000131597417181,0.5890331050228311,0.621875,0.7615227008892621,"[[ 0  0  2  0  0  0]
 [ 0  0  7  3  1  0]
 [ 0  0 99 35  2  0]
 [ 0  0 36 86  6  0]
 [ 0  0  6 20 14  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.851710799999637,0.00011424468749794414,2446.96875,0.26731004901960786,0.5652206706160616,0.5590231170768083,0.590625,0.7641911761989166,"[[ 0  0  2  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 97 36  3  0]
 [ 0  0 42 82  4  0]
 [ 0  0  6 24 10  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.015), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6380210000006628,0.00011860312500004966,2439.390625,0.27743566176470585,0.5731905578739855,0.5618505747126437,0.59375,0.7756057771434423,"[[ 0  0  2  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 94 38  4  0]
 [ 0  0 38 83  7  0]
 [ 0  0  5 22 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.1), ('gamma', 1.0), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 3), ('subsample', 0.8)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7214415000007648,0.0001088128124990817,2444.40234375,0.28379289215686276,0.5878195574729548,0.5805735930735929,0.609375,0.7646215497814541,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 96 38  2  0]
 [ 0  0 36 86  6  0]
 [ 0  0  3 24 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.4224770000000717,0.00011061000000154309,2431.53125,0.26876531862745096,0.5688433221749183,0.5612285584090096,0.59375,0.7531993287768523,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 95 39  2  0]
 [ 0  0 37 85  6  0]
 [ 0  0  6 24 10  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.8482233000004271,0.00011122281249811294,2455.7578125,0.29045788770053477,0.585847611739747,0.6052701093951095,0.60625,0.7701698841829774,"[[ 0  0  2  0  0  0]
 [ 0  1  5  5  0  0]
 [ 0  0 98 36  2  0]
 [ 0  0 37 84  7  0]
 [ 0  0  6 23 11  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7083532999995441,0.00011392750000140949,2445.046875,0.28910845588235295,0.5946818874687484,0.5848573059360731,0.615625,0.7843828028310547,"[[ 0  0  2  0  0  0]
 [ 0  0  5  6  0  0]
 [ 0  0 98 34  4  0]
 [ 0  0 38 85  5  0]
 [ 0  0  3 23 14  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.05), ('lambda', 1.0), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6978205000004891,0.00011629781249951065,2434.29296875,0.28910845588235295,0.5946818874687484,0.5848573059360731,0.615625,0.7843828028310547,"[[ 0  0  2  0  0  0]
 [ 0  0  5  6  0  0]
 [ 0  0 98 34  4  0]
 [ 0  0 38 85  5  0]
 [ 0  0  3 23 14  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.025), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.8723213000002943,0.00019644874999755758,2455.95703125,0.2780943627450981,0.5802406809261,0.5685173096568834,0.603125,0.7799520509913183,"[[ 0  0  2  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 99 34  3  0]
 [ 0  0 39 82  7  0]
 [ 0  0  5 23 12  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.025), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.5901935000001686,0.00011751499999945736,2439.6953125,0.2740808823529412,0.5764247233968602,0.5669709989258862,0.6,0.7670922378791658,"[[ 0  0  2  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 97 37  2  0]
 [ 0  0 37 84  7  0]
 [ 0  0  5 24 11  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 1.0), ('eta', 0.015), ('gamma', 0.7), ('lambda', 1.0), ('max_depth', 9), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.5459007999997993,0.00010779624999770476,2431.88671875,0.2815424465240642,0.5700943061340402,0.5913353929308334,0.590625,0.7560192442993142,"[[ 0  0  2  0  0  0]
 [ 0  1  5  5  0  0]
 [ 0  0 92 40  4  0]
 [ 0  0 37 86  5  0]
 [ 0  0  6 24 10  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.1), ('lambda', 0.01), ('max_depth', 7), ('min_child_weight', 3), ('subsample', 0.8)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.5073753000006036,0.00010742624999977579,2433.65234375,0.2754595588235294,0.5796200792777285,0.5707450076804916,0.603125,0.7724660161928691,"[[ 0  0  2  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 96 36  4  0]
 [ 0  0 37 86  5  0]
 [ 0  0  3 26 11  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 25), ('min_child_weight', 7), ('subsample', 0.8)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.5064516000002186,0.00011175062499830801,2433.0546875,0.2728553921568628,0.5740952995796761,0.5695272845980498,0.596875,0.7559896287612464,"[[ 0  1  1  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 96 37  3  0]
 [ 0  0 40 84  4  0]
 [ 0  0  3 26 11  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.46430919999966136,0.00010169218749922493,2438.58984375,0.2676470588235294,0.5630199663892446,0.5506544171722744,0.584375,0.7627493389620972,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 96 37  3  0]
 [ 0  0 39 80  9  0]
 [ 0  0  6 23 11  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.6)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6116719999999987,0.00010848062499917433,2444.953125,0.2685355392156863,0.5702986707050312,0.5616228070175439,0.59375,0.7686355033203035,"[[ 0  1  1  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 98 35  3  0]
 [ 0  0 40 82  6  0]
 [ 0  0  2 28 10  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.9), ('eta', 0.01), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7029874999998356,0.0001049446875015292,2446.8203125,0.29657002005347594,0.5886979886768057,0.6083765082435295,0.60625,0.766132663530025,"[[ 0  0  2  0  0  0]
 [ 0  1  7  3  0  0]
 [ 0  0 93 40  3  0]
 [ 0  0 34 87  7  0]
 [ 0  0  5 22 13  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.6), ('eta', 0.025), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 7), ('min_child_weight', 7), ('subsample', 1.0)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.3738751000000775,0.0001049737499982939,2438.3671875,0.26452205882352947,0.563679606612469,0.5637741935483872,0.590625,0.7439661177364292,"[[ 0  0  2  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 96 38  2  0]
 [ 0  0 41 84  3  0]
 [ 0  0  5 26  9  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.015), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6031269000004613,0.00011302281249925272,2439.65234375,0.2867814171122995,0.5771463131273163,0.5955348639455783,0.596875,0.7651150864978578,"[[ 0  0  2  0  0  0]
 [ 0  1  6  4  0  0]
 [ 0  0 95 37  4  0]
 [ 0  0 38 84  6  0]
 [ 0  0  6 23 11  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.025), ('gamma', 0.05), ('lambda', 1.0), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6923698000000513,0.00011316874999920402,2436.54296875,0.2931678921568628,0.6038608006736068,0.5951144688644688,0.625,0.786769227417808,"[[ 0  0  2  0  0  0]
 [ 0  0  5  6  0  0]
 [ 0  0 96 37  3  0]
 [ 0  0 32 90  6  0]
 [ 0  0  5 21 14  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.7), ('eta', 0.025), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.6744677999995474,0.00010908531250208853,2434.625,0.27277879901960783,0.5730798718355681,0.5631283157558326,0.596875,0.7630266383936383,"[[ 0  0  2  0  0  0]
 [ 0  0  7  4  0  0]
 [ 0  0 97 36  3  0]
 [ 0  0 39 83  6  0]
 [ 0  0  5 24 11  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.7260083999999551,0.0001152496874993858,2445.97265625,0.2904871323529412,0.597937295679231,0.5872340817077659,0.61875,0.7843000906693929,"[[ 0  0  2  0  0  0]
 [ 0  0  6  5  0  0]
 [ 0  0 97 36  3  0]
 [ 0  0 34 87  7  0]
 [ 0  0  4 22 14  0]
 [ 0  0  0  2  1  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.7), ('lambda', 0.1), ('max_depth', 25), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",8,0.9585278000004109,0.00011387625000054413,2456.32421875,0.3015485739750446,0.600412106374808,0.6189769660164397,0.61875,0.7742795341796704,"[[ 0  0  2  0  0  0]
 [ 0  1  6  4  0  0]
 [ 0  0 96 37  3  0]
 [ 0  0 33 88  7  0]
 [ 0  0  6 21 13  0]
 [ 0  0  0  2  1  0]]"
DecisionTreeClassifier(criterion='entropy'),"OrderedDict([('criterion', 'gini')])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.006171499999254593,2.731093749730462e-05,2430.859375,0.2882979612299465,0.5488583754208755,0.548768020889948,0.55,0.6470855564782989,"[[ 0  0  2  0  0  0]
 [ 0  1  7  3  0  0]
 [ 2  4 82 43  5  0]
 [ 0  4 37 75 11  1]
 [ 0  0  6 13 18  3]
 [ 0  0  0  2  1  0]]"
DecisionTreeClassifier(criterion='entropy'),"OrderedDict([('criterion', 'entropy')])","('sulphates', 'pH', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity')",8,0.008237400000325579,2.8103437500703876e-05,2430.8828125,0.2811427696078432,0.5634766302854883,0.5698682711297918,0.559375,0.6697365794909127,"[[ 0  2  0  0  0  0]
 [ 0  0  4  4  3  0]
 [ 0  8 83 34 10  1]
 [ 1  1 31 77 15  3]
 [ 0  0  5 15 19  1]
 [ 0  0  1  0  2  0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5771208999994997,0.00010937343749901629,2435.3515625,0.2959099264705882,0.5995828150912106,0.5879039612921192,0.61875,0.7954705820059053,"[[  0   1   1   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 101  32   3   0]
 [  0   0  40  81   7   0]
 [  0   0   4  20  16   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7315024999998059,0.00011834562500041556,2441.69921875,0.29442401960784315,0.6017215219421101,0.5944603356216629,0.621875,0.8078767063716923,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 100  34   2   0]
 [  0   0  39  84   5   0]
 [  0   0   5  20  15   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.015), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5718699999997625,0.00011316437499999665,2435.7265625,0.296875,0.6076228632478633,0.5968170867309117,0.628125,0.7971528467132843,"[[  0   1   1   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 102  31   3   0]
 [  0   0  38  84   6   0]
 [  0   0   5  20  15   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.05), ('gamma', 0.9), ('lambda', 0.1), ('max_depth', 12), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7641859000004843,0.00010912312500011012,2430.81640625,0.29500612745098037,0.6090236839383596,0.5954268380551633,0.63125,0.7998415506865315,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 106  27   3   0]
 [  0   0  38  82   8   0]
 [  0   0   5  21  14   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.1), ('gamma', 0.5), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7255560999992667,0.00011584968750071312,2440.5078125,0.3037530637254902,0.6115347289164473,0.5992125643393587,0.63125,0.7980408323251985,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 104  30   2   0]
 [  0   0  39  81   8   0]
 [  0   0   6  17  17   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 3), ('min_child_weight', 5), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.39112110000041866,0.00010737156250115732,2430.32421875,0.27242647058823527,0.5662045739348371,0.5558423913043479,0.590625,0.7400456100018774,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 105  28   3   0]
 [  0   0  49  72   7   0]
 [  0   0   6  22  12   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.48304619999998977,0.00011514843750148884,2431.32421875,0.29247855392156863,0.6028721278721278,0.5906720029784066,0.625,0.7795678820146048,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 105  28   3   0]
 [  0   0  40  81   7   0]
 [  0   0   5  21  14   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.0), ('colsample_bytree', 0.8), ('eta', 0.01), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 9), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6443917000005968,0.00011904593750102776,2431.16015625,0.2985906862745098,0.6060560907146125,0.5945695695695695,0.625,0.8012410703943276,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 100  33   3   0]
 [  0   0  37  84   7   0]
 [  0   0   3  21  16   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 17), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6774929000002885,0.00011280093750087872,2430.12109375,0.29534313725490197,0.604143751359599,0.590059015059015,0.625,0.7948710019026108,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 105  29   2   0]
 [  0   0  38  80  10   0]
 [  0   0   5  20  15   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.8055608000004213,0.00010920187500005341,2432.5390625,0.29362745098039217,0.6051305193890746,0.5955774097078446,0.628125,0.7937120933418862,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 107  27   2   0]
 [  0   0  42  80   6   0]
 [  0   0   4  22  14   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.7), ('eta', 0.05), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 7), ('min_child_weight', 3), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5564465000006749,0.00010885218750047442,2429.16015625,0.2917432598039216,0.595668050123713,0.5840995115995116,0.615625,0.7956847825163312,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 101  32   3   0]
 [  0   0  40  81   7   0]
 [  0   0   4  21  15   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 5), ('min_child_weight', 3), ('subsample', 0.7)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.4508134000006976,0.00010251593749899257,2429.24609375,0.3008884803921568,0.6107973937325473,0.5996282099316944,0.63125,0.7730614434112002,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 104  30   2   0]
 [  0   0  39  82   7   0]
 [  0   0   6  18  16   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7685019000000466,0.00010957874999917294,2443.36328125,0.29500612745098037,0.6091769961880342,0.5947204529370134,0.63125,0.8023018953543133,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 106  26   4   0]
 [  0   0  38  82   8   0]
 [  0   0   5  21  14   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.9), ('eta', 0.015), ('gamma', 0.9), ('lambda', 1.0), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.888353699999243,0.00011040812499913954,2445.2421875,0.2938572303921569,0.6068642121780397,0.5918487534363447,0.628125,0.8005688009192218,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 104  27   5   0]
 [  0   0  37  83   8   0]
 [  0   0   5  21  14   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.01), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 7), ('min_child_weight', 5), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5064126999996006,0.00010481218749873733,2435.61328125,0.3125612745098039,0.6321479791395046,0.6191175569713305,0.653125,0.7890554008117633,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 108  25   3   0]
 [  0   0  37  84   7   0]
 [  0   0   6  17  17   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.6), ('eta', 0.015), ('gamma', 0.7), ('lambda', 0.1), ('max_depth', 25), ('min_child_weight', 3), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7042543999996269,0.00010886156249796386,2442.01171875,0.2821844362745098,0.5853466845654346,0.5744899425287355,0.60625,0.7930775550331088,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 100  34   2   0]
 [  0   0  39  81   8   0]
 [  0   0   3  24  13   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.025), ('gamma', 0.9), ('lambda', 0.01), ('max_depth', 15), ('min_child_weight', 3), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7137884000003396,0.00010931125000013253,2442.01171875,0.3025275735294118,0.6087165998229074,0.5965018315018314,0.628125,0.7928783313977268,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 103  30   3   0]
 [  0   0  40  81   7   0]
 [  0   0   5  18  17   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.1), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.9158677999994325,0.00011390218749909308,2445.2109375,0.3095281862745098,0.6205608031908396,0.607648166777923,0.6375,0.8094924622161346,"[[  0   1   1   0   0   0]
 [  0   0   6   5   0   0]
 [  0   0 100  31   5   0]
 [  0   1  34  86   7   0]
 [  0   0   5  17  18   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.6), ('eta', 0.1), ('gamma', 0.3), ('lambda', 0.01), ('max_depth', 12), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.8204937000000427,0.00011760406249834432,2445.12109375,0.3020067401960784,0.6183473389355743,0.6092995169082125,0.640625,0.8086927742407329,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 103  31   2   0]
 [  0   0  36  87   5   0]
 [  0   0   5  20  15   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 1.0), ('eta', 0.1), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 17), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.9044687000005069,0.00012104375000205891,2444.1796875,0.3181832107843137,0.6397744459418988,0.6253961774875144,0.659375,0.818291032334882,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 106  26   4   0]
 [  0   0  34  87   7   0]
 [  0   0   4  18  18   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 1.0), ('eta', 0.05), ('gamma', 0.5), ('lambda', 0.01), ('max_depth', 9), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.7558502000001681,0.00011120906250141615,2444.2578125,0.31580882352941175,0.635202076366393,0.6230086239945007,0.653125,0.8031292813663832,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 103  29   4   0]
 [  0   1  33  88   6   0]
 [  0   0   4  18  18   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 1.0), ('eta', 0.1), ('gamma', 1.0), ('lambda', 0.1), ('max_depth', 5), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.4658854999997857,0.00010602718749908036,2436.47265625,0.2841758578431372,0.589728870633117,0.5766532315594236,0.6125,0.7702673039092013,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 108  25   3   0]
 [  0   1  43  75   9   0]
 [  0   0   4  23  13   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.8712236000001212,0.00011887875000127224,2453.55078125,0.3116421568627451,0.6304972225294122,0.6167131984486123,0.65,0.8102108105365693,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 103  29   4   0]
 [  0   0  33  88   7   0]
 [  0   0   5  18  17   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.015), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.911533700000291,0.00012066781250155145,2446.375,0.3056832107843137,0.6281819942939663,0.6150075643780679,0.65,0.8136047052932899,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 106  26   4   0]
 [  0   0  35  87   6   0]
 [  0   0   5  20  15   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.9), ('eta', 0.025), ('gamma', 0.3), ('lambda', 1.0), ('max_depth', 3), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.30706799999916257,9.604624999894895e-05,2429.52734375,0.2662071078431372,0.5677175989512613,0.5582458217892573,0.596875,0.7390272759985987,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 108  27   1   0]
 [  0   0  47  74   7   0]
 [  0   0   4  27   9   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.5), ('colsample_bytree', 0.8), ('eta', 0.015), ('gamma', 0.7), ('lambda', 1.0), ('max_depth', 17), ('min_child_weight', 5), ('subsample', 0.9)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.6392835000006016,0.00011703250000039134,2437.21484375,0.2821844362745098,0.585138888888889,0.5727742772424019,0.60625,0.7857613852127003,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 100  33   3   0]
 [  0   0  39  81   8   0]
 [  0   0   5  22  13   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 5), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.601309499999843,0.00012120906250174812,2437.23828125,0.29370404411764706,0.6058807207639364,0.5924342745861734,0.628125,0.79875404971227,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 106  27   3   0]
 [  0   0  39  81   8   0]
 [  0   0   5  21  14   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.05), ('gamma', 0.3), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 0.8)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.8499297999996998,0.00011509156249758234,2444.43359375,0.3186734068627451,0.6346501812793948,0.6213597122302159,0.653125,0.8193509806935955,"[[  0   1   1   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 103  30   3   0]
 [  0   0  35  87   6   0]
 [  0   0   4  17  19   0]
 [  0   0   0   1   2   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.1), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 1), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.8597765000004074,0.0001228553125002918,2444.99609375,0.3116421568627451,0.6293303147257545,0.6166908831908832,0.65,0.8130186635158202,"[[  0   0   2   0   0   0]
 [  0   0   7   4   0   0]
 [  0   0 103  30   3   0]
 [  0   0  34  88   6   0]
 [  0   0   4  19  17   0]
 [  0   0   0   2   1   0]]"
"XGBClassifier(alpha=0.1, base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=0.8,
              enable_categorical=False, eta=0.1, eval_metric='mlogloss',
              gamma=0.1, gpu_id=-1, importance_type=None,
              interaction_constraints='', lambda=0.1,
              learning_rate=0.0500000007, max_delta_step=0, max_depth=15,
              min_child_weight=7, missing=nan, monotone_constraints='()',
              n_estimators=100, n_jobs=12, num_parallel_tree=1,
              objective='multi:softprob', predictor='auto', random_state=0,
              reg_alpha=1, reg_lambda=0.00999999978, scale_pos_weight=None,
              subsample=1.0, ...)","OrderedDict([('alpha', 0.1), ('colsample_bytree', 0.8), ('eta', 0.1), ('gamma', 0.1), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 7), ('subsample', 1.0)])","('sulphates', 'pH', 'density', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,0.5286311999998361,0.00011511156249923715,2429.41015625,0.2901348039215686,0.591527011085909,0.577407576259947,0.6125,0.7876539778935723,"[[  0   1   1   0   0   0]
 [  0   0   7   3   1   0]
 [  0   0 105  28   3   0]
 [  0   0  43  76   9   0]
 [  0   0   4  21  15   0]
 [  0   0   0   2   1   0]]"
GradientBoostingClassifier(),"OrderedDict([('loss', 'deviance')])","('pH', 'density', 'total sulfur dioxide', 'free sulfur dioxide', 'chlorides', 'residual sugar', 'citric acid', 'volatile acidity', 'fixed acidity')",9,1.0953561999995145,6.306437500143147e-05,2401.60546875,0.3673267602495544,0.5578787393620229,0.5534944904101835,0.565625,0.7440906443886034,"[[ 1  1  0  0  0  0]
 [ 0  1  5  5  0  0]
 [ 0  2 94 36  3  1]
 [ 1  2 43 70 12  0]
 [ 0  0  4 20 15  1]
 [ 0  0  0  2  1  0]]"
